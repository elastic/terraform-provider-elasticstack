---
subcategory: ""
page_title: "Managing Kibana connector and rule resources"
description: |-
    An example of how to define an index connector and index threshold rule.
---

# Managing Kibana connector and rule resources

You can use rules to detect complex conditions and generate alerts and actions when those conditions are met.

For example, you can define an index threshold rule to detect when the results from an Elasticsearch query exceed a threshold:

```terraform
provider "elasticstack" {
  elasticsearch {}
}

resource "elasticstack_kibana_alerting_rule" "example" {
  name        = "%s"
  consumer    = "alerts"
  notify_when = "onActiveAlert"
  params = jsonencode({
    aggType             = "avg"
    groupBy             = "top"
    termSize            = 10
    timeWindowSize      = 10
    timeWindowUnit      = "s"
    threshold           = [10]
    thresholdComparator = ">"
    index               = ["test-index"]
    timeField           = "@timestamp"
    aggField            = "version"
    termField           = "name"
  })
  rule_type_id = ".index-threshold"
  interval     = "1m"
  enabled      = true
}
```

If you want the rule to run actions when its conditions are met (or recovery actions when its conditions are no longer met), you must create a Kibana action connector.

For example, create a connector that indexes a document in Elasticsearch:

```terraform
provider "elasticstack" {
  elasticsearch {}
}

resource "elasticstack_kibana_action_connector" "example" {
  name = "%s"
  config = jsonencode({
    index   = ".kibana"
    refresh = true
  })
  connector_type_id = ".index"
}
```

You can then update your rule to include actions that use this connector. For example:

```terraform
provider "elasticstack" {
  elasticsearch {}
}

resource "elasticstack_kibana_alerting_rule" "example" {
  name         = "%s"
  consumer     = "alerts"
  notify_when  = "onActiveAlert"
  rule_type_id = ".index-threshold"
  interval     = "1m"
  enabled      = true

  params = jsonencode({
    aggType             = "avg"
    groupBy             = "top"
    termSize            = 10
    timeWindowSize      = 10
    timeWindowUnit      = "s"
    threshold           = [10]
    thresholdComparator = ">"
    index               = ["test-index"]
    timeField           = "@timestamp"
    aggField            = "version"
    termField           = "name"
  })

  actions {
    id    = elasticstack_kibana_action_connector.example.connector_type_id
    group = "threshold met"
    params = jsonencode({
      "documents" : [{
        "rule_id" : "{{rule.id}}",
        "alert_id" : "{{alert.id}}"
      }]
    })
  }
}
```
