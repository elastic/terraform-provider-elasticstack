/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the Summary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Summary{}

// Summary The SLO computed data
type Summary struct {
	Status      SummaryStatus `json:"status"`
	SliValue    float64       `json:"sliValue"`
	ErrorBudget ErrorBudget   `json:"errorBudget"`
}

// NewSummary instantiates a new Summary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSummary(status SummaryStatus, sliValue float64, errorBudget ErrorBudget) *Summary {
	this := Summary{}
	this.Status = status
	this.SliValue = sliValue
	this.ErrorBudget = errorBudget
	return &this
}

// NewSummaryWithDefaults instantiates a new Summary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSummaryWithDefaults() *Summary {
	this := Summary{}
	return &this
}

// GetStatus returns the Status field value
func (o *Summary) GetStatus() SummaryStatus {
	if o == nil {
		var ret SummaryStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Summary) GetStatusOk() (*SummaryStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Summary) SetStatus(v SummaryStatus) {
	o.Status = v
}

// GetSliValue returns the SliValue field value
func (o *Summary) GetSliValue() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SliValue
}

// GetSliValueOk returns a tuple with the SliValue field value
// and a boolean to check if the value has been set.
func (o *Summary) GetSliValueOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SliValue, true
}

// SetSliValue sets field value
func (o *Summary) SetSliValue(v float64) {
	o.SliValue = v
}

// GetErrorBudget returns the ErrorBudget field value
func (o *Summary) GetErrorBudget() ErrorBudget {
	if o == nil {
		var ret ErrorBudget
		return ret
	}

	return o.ErrorBudget
}

// GetErrorBudgetOk returns a tuple with the ErrorBudget field value
// and a boolean to check if the value has been set.
func (o *Summary) GetErrorBudgetOk() (*ErrorBudget, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ErrorBudget, true
}

// SetErrorBudget sets field value
func (o *Summary) SetErrorBudget(v ErrorBudget) {
	o.ErrorBudget = v
}

func (o Summary) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Summary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	toSerialize["sliValue"] = o.SliValue
	toSerialize["errorBudget"] = o.ErrorBudget
	return toSerialize, nil
}

type NullableSummary struct {
	value *Summary
	isSet bool
}

func (v NullableSummary) Get() *Summary {
	return v.value
}

func (v *NullableSummary) Set(val *Summary) {
	v.value = val
	v.isSet = true
}

func (v NullableSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSummary(val *Summary) *NullableSummary {
	return &NullableSummary{value: val, isSet: true}
}

func (v NullableSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
