/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the TimesliceMetricDocCountMetric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimesliceMetricDocCountMetric{}

// TimesliceMetricDocCountMetric struct for TimesliceMetricDocCountMetric
type TimesliceMetricDocCountMetric struct {
	// The name of the metric. Only valid options are A-Z
	Name string `json:"name"`
	// The aggregation type of the metric. Only valid option is \"doc_count\"
	Aggregation string `json:"aggregation"`
	// The filter to apply to the metric.
	Filter *string `json:"filter,omitempty"`
}

// NewTimesliceMetricDocCountMetric instantiates a new TimesliceMetricDocCountMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimesliceMetricDocCountMetric(name string, aggregation string) *TimesliceMetricDocCountMetric {
	this := TimesliceMetricDocCountMetric{}
	this.Name = name
	this.Aggregation = aggregation
	return &this
}

// NewTimesliceMetricDocCountMetricWithDefaults instantiates a new TimesliceMetricDocCountMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimesliceMetricDocCountMetricWithDefaults() *TimesliceMetricDocCountMetric {
	this := TimesliceMetricDocCountMetric{}
	return &this
}

// GetName returns the Name field value
func (o *TimesliceMetricDocCountMetric) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TimesliceMetricDocCountMetric) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TimesliceMetricDocCountMetric) SetName(v string) {
	o.Name = v
}

// GetAggregation returns the Aggregation field value
func (o *TimesliceMetricDocCountMetric) GetAggregation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value
// and a boolean to check if the value has been set.
func (o *TimesliceMetricDocCountMetric) GetAggregationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aggregation, true
}

// SetAggregation sets field value
func (o *TimesliceMetricDocCountMetric) SetAggregation(v string) {
	o.Aggregation = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *TimesliceMetricDocCountMetric) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimesliceMetricDocCountMetric) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *TimesliceMetricDocCountMetric) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *TimesliceMetricDocCountMetric) SetFilter(v string) {
	o.Filter = &v
}

func (o TimesliceMetricDocCountMetric) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimesliceMetricDocCountMetric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["aggregation"] = o.Aggregation
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	return toSerialize, nil
}

type NullableTimesliceMetricDocCountMetric struct {
	value *TimesliceMetricDocCountMetric
	isSet bool
}

func (v NullableTimesliceMetricDocCountMetric) Get() *TimesliceMetricDocCountMetric {
	return v.value
}

func (v *NullableTimesliceMetricDocCountMetric) Set(val *TimesliceMetricDocCountMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableTimesliceMetricDocCountMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableTimesliceMetricDocCountMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimesliceMetricDocCountMetric(val *TimesliceMetricDocCountMetric) *NullableTimesliceMetricDocCountMetric {
	return &NullableTimesliceMetricDocCountMetric{value: val, isSet: true}
}

func (v NullableTimesliceMetricDocCountMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimesliceMetricDocCountMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
