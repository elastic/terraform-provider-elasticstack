/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1{}

// IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 struct for IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1
type IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 struct {
	// The name of the metric. Only valid options are A-Z
	Name string `json:"name"`
	// The aggregation type of the metric.
	Aggregation string `json:"aggregation"`
	// The filter to apply to the metric.
	Filter *string `json:"filter,omitempty"`
}

// NewIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 instantiates a new IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1(name string, aggregation string) *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 {
	this := IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1{}
	this.Name = name
	this.Aggregation = aggregation
	return &this
}

// NewIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1WithDefaults instantiates a new IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1WithDefaults() *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 {
	this := IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1{}
	return &this
}

// GetName returns the Name field value
func (o *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) SetName(v string) {
	o.Name = v
}

// GetAggregation returns the Aggregation field value
func (o *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) GetAggregation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Aggregation
}

// GetAggregationOk returns a tuple with the Aggregation field value
// and a boolean to check if the value has been set.
func (o *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) GetAggregationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Aggregation, true
}

// SetAggregation sets field value
func (o *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) SetAggregation(v string) {
	o.Aggregation = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) SetFilter(v string) {
	o.Filter = &v
}

func (o IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["aggregation"] = o.Aggregation
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	return toSerialize, nil
}

type NullableIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 struct {
	value *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1
	isSet bool
}

func (v NullableIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) Get() *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 {
	return v.value
}

func (v *NullableIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) Set(val *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1(val *IndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) *NullableIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1 {
	return &NullableIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1{value: val, isSet: true}
}

func (v NullableIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndicatorPropertiesCustomMetricParamsGoodMetricsInnerOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
