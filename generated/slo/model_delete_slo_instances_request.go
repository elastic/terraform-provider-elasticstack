/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the DeleteSloInstancesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteSloInstancesRequest{}

// DeleteSloInstancesRequest The delete SLO instances request takes a list of SLO id and instance id, then delete the rollup and summary data. This API can be used to remove the staled data of an instance SLO that no longer get updated.
type DeleteSloInstancesRequest struct {
	// An array of slo id and instance id
	List []DeleteSloInstancesRequestListInner `json:"list"`
}

// NewDeleteSloInstancesRequest instantiates a new DeleteSloInstancesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteSloInstancesRequest(list []DeleteSloInstancesRequestListInner) *DeleteSloInstancesRequest {
	this := DeleteSloInstancesRequest{}
	this.List = list
	return &this
}

// NewDeleteSloInstancesRequestWithDefaults instantiates a new DeleteSloInstancesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteSloInstancesRequestWithDefaults() *DeleteSloInstancesRequest {
	this := DeleteSloInstancesRequest{}
	return &this
}

// GetList returns the List field value
func (o *DeleteSloInstancesRequest) GetList() []DeleteSloInstancesRequestListInner {
	if o == nil {
		var ret []DeleteSloInstancesRequestListInner
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *DeleteSloInstancesRequest) GetListOk() ([]DeleteSloInstancesRequestListInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.List, true
}

// SetList sets field value
func (o *DeleteSloInstancesRequest) SetList(v []DeleteSloInstancesRequestListInner) {
	o.List = v
}

func (o DeleteSloInstancesRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteSloInstancesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["list"] = o.List
	return toSerialize, nil
}

type NullableDeleteSloInstancesRequest struct {
	value *DeleteSloInstancesRequest
	isSet bool
}

func (v NullableDeleteSloInstancesRequest) Get() *DeleteSloInstancesRequest {
	return v.value
}

func (v *NullableDeleteSloInstancesRequest) Set(val *DeleteSloInstancesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteSloInstancesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteSloInstancesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteSloInstancesRequest(val *DeleteSloInstancesRequest) *NullableDeleteSloInstancesRequest {
	return &NullableDeleteSloInstancesRequest{value: val, isSet: true}
}

func (v NullableDeleteSloInstancesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteSloInstancesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
