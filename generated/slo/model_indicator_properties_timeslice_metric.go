/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
)

// checks if the IndicatorPropertiesTimesliceMetric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndicatorPropertiesTimesliceMetric{}

// IndicatorPropertiesTimesliceMetric Defines properties for a timeslice metric indicator type
type IndicatorPropertiesTimesliceMetric struct {
	Params IndicatorPropertiesTimesliceMetricParams `json:"params"`
	// The type of indicator.
	Type string `json:"type"`
}

// NewIndicatorPropertiesTimesliceMetric instantiates a new IndicatorPropertiesTimesliceMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndicatorPropertiesTimesliceMetric(params IndicatorPropertiesTimesliceMetricParams, type_ string) *IndicatorPropertiesTimesliceMetric {
	this := IndicatorPropertiesTimesliceMetric{}
	this.Params = params
	this.Type = type_
	return &this
}

// NewIndicatorPropertiesTimesliceMetricWithDefaults instantiates a new IndicatorPropertiesTimesliceMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndicatorPropertiesTimesliceMetricWithDefaults() *IndicatorPropertiesTimesliceMetric {
	this := IndicatorPropertiesTimesliceMetric{}
	return &this
}

// GetParams returns the Params field value
func (o *IndicatorPropertiesTimesliceMetric) GetParams() IndicatorPropertiesTimesliceMetricParams {
	if o == nil {
		var ret IndicatorPropertiesTimesliceMetricParams
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *IndicatorPropertiesTimesliceMetric) GetParamsOk() (*IndicatorPropertiesTimesliceMetricParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Params, true
}

// SetParams sets field value
func (o *IndicatorPropertiesTimesliceMetric) SetParams(v IndicatorPropertiesTimesliceMetricParams) {
	o.Params = v
}

// GetType returns the Type field value
func (o *IndicatorPropertiesTimesliceMetric) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *IndicatorPropertiesTimesliceMetric) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *IndicatorPropertiesTimesliceMetric) SetType(v string) {
	o.Type = v
}

func (o IndicatorPropertiesTimesliceMetric) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndicatorPropertiesTimesliceMetric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["params"] = o.Params
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableIndicatorPropertiesTimesliceMetric struct {
	value *IndicatorPropertiesTimesliceMetric
	isSet bool
}

func (v NullableIndicatorPropertiesTimesliceMetric) Get() *IndicatorPropertiesTimesliceMetric {
	return v.value
}

func (v *NullableIndicatorPropertiesTimesliceMetric) Set(val *IndicatorPropertiesTimesliceMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableIndicatorPropertiesTimesliceMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableIndicatorPropertiesTimesliceMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndicatorPropertiesTimesliceMetric(val *IndicatorPropertiesTimesliceMetric) *NullableIndicatorPropertiesTimesliceMetric {
	return &NullableIndicatorPropertiesTimesliceMetric{value: val, isSet: true}
}

func (v NullableIndicatorPropertiesTimesliceMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndicatorPropertiesTimesliceMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
