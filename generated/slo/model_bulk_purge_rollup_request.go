/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BulkPurgeRollupRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BulkPurgeRollupRequest{}

// BulkPurgeRollupRequest The bulk purge rollup data request takes a list of SLO ids and a purge policy, then deletes the rollup data according to the purge policy. This API can be used to remove the staled data of an instance SLO that no longer get updated. 
type BulkPurgeRollupRequest struct {
	// An array of slo ids
	List []string `json:"list"`
	PurgePolicy BulkPurgeRollupRequestPurgePolicy `json:"purgePolicy"`
}

type _BulkPurgeRollupRequest BulkPurgeRollupRequest

// NewBulkPurgeRollupRequest instantiates a new BulkPurgeRollupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBulkPurgeRollupRequest(list []string, purgePolicy BulkPurgeRollupRequestPurgePolicy) *BulkPurgeRollupRequest {
	this := BulkPurgeRollupRequest{}
	this.List = list
	this.PurgePolicy = purgePolicy
	return &this
}

// NewBulkPurgeRollupRequestWithDefaults instantiates a new BulkPurgeRollupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBulkPurgeRollupRequestWithDefaults() *BulkPurgeRollupRequest {
	this := BulkPurgeRollupRequest{}
	return &this
}

// GetList returns the List field value
func (o *BulkPurgeRollupRequest) GetList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.List
}

// GetListOk returns a tuple with the List field value
// and a boolean to check if the value has been set.
func (o *BulkPurgeRollupRequest) GetListOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.List, true
}

// SetList sets field value
func (o *BulkPurgeRollupRequest) SetList(v []string) {
	o.List = v
}

// GetPurgePolicy returns the PurgePolicy field value
func (o *BulkPurgeRollupRequest) GetPurgePolicy() BulkPurgeRollupRequestPurgePolicy {
	if o == nil {
		var ret BulkPurgeRollupRequestPurgePolicy
		return ret
	}

	return o.PurgePolicy
}

// GetPurgePolicyOk returns a tuple with the PurgePolicy field value
// and a boolean to check if the value has been set.
func (o *BulkPurgeRollupRequest) GetPurgePolicyOk() (*BulkPurgeRollupRequestPurgePolicy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PurgePolicy, true
}

// SetPurgePolicy sets field value
func (o *BulkPurgeRollupRequest) SetPurgePolicy(v BulkPurgeRollupRequestPurgePolicy) {
	o.PurgePolicy = v
}

func (o BulkPurgeRollupRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BulkPurgeRollupRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["list"] = o.List
	toSerialize["purgePolicy"] = o.PurgePolicy
	return toSerialize, nil
}

func (o *BulkPurgeRollupRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"list",
		"purgePolicy",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBulkPurgeRollupRequest := _BulkPurgeRollupRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBulkPurgeRollupRequest)

	if err != nil {
		return err
	}

	*o = BulkPurgeRollupRequest(varBulkPurgeRollupRequest)

	return err
}

type NullableBulkPurgeRollupRequest struct {
	value *BulkPurgeRollupRequest
	isSet bool
}

func (v NullableBulkPurgeRollupRequest) Get() *BulkPurgeRollupRequest {
	return v.value
}

func (v *NullableBulkPurgeRollupRequest) Set(val *BulkPurgeRollupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkPurgeRollupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkPurgeRollupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkPurgeRollupRequest(val *BulkPurgeRollupRequest) *NullableBulkPurgeRollupRequest {
	return &NullableBulkPurgeRollupRequest{value: val, isSet: true}
}

func (v NullableBulkPurgeRollupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkPurgeRollupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


