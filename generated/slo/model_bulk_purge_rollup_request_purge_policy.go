/*
SLOs

OpenAPI schema for SLOs endpoints

API version: 1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package slo

import (
	"encoding/json"
	"fmt"
)

// BulkPurgeRollupRequestPurgePolicy - Policy that dictates which SLI documents to purge based on age
type BulkPurgeRollupRequestPurgePolicy struct {
	BulkPurgeRollupRequestPurgePolicyOneOf  *BulkPurgeRollupRequestPurgePolicyOneOf
	BulkPurgeRollupRequestPurgePolicyOneOf1 *BulkPurgeRollupRequestPurgePolicyOneOf1
}

// BulkPurgeRollupRequestPurgePolicyOneOfAsBulkPurgeRollupRequestPurgePolicy is a convenience function that returns BulkPurgeRollupRequestPurgePolicyOneOf wrapped in BulkPurgeRollupRequestPurgePolicy
func BulkPurgeRollupRequestPurgePolicyOneOfAsBulkPurgeRollupRequestPurgePolicy(v *BulkPurgeRollupRequestPurgePolicyOneOf) BulkPurgeRollupRequestPurgePolicy {
	return BulkPurgeRollupRequestPurgePolicy{
		BulkPurgeRollupRequestPurgePolicyOneOf: v,
	}
}

// BulkPurgeRollupRequestPurgePolicyOneOf1AsBulkPurgeRollupRequestPurgePolicy is a convenience function that returns BulkPurgeRollupRequestPurgePolicyOneOf1 wrapped in BulkPurgeRollupRequestPurgePolicy
func BulkPurgeRollupRequestPurgePolicyOneOf1AsBulkPurgeRollupRequestPurgePolicy(v *BulkPurgeRollupRequestPurgePolicyOneOf1) BulkPurgeRollupRequestPurgePolicy {
	return BulkPurgeRollupRequestPurgePolicy{
		BulkPurgeRollupRequestPurgePolicyOneOf1: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *BulkPurgeRollupRequestPurgePolicy) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into BulkPurgeRollupRequestPurgePolicyOneOf
	err = json.Unmarshal(data, &dst.BulkPurgeRollupRequestPurgePolicyOneOf)
	if err == nil {
		jsonBulkPurgeRollupRequestPurgePolicyOneOf, _ := json.Marshal(dst.BulkPurgeRollupRequestPurgePolicyOneOf)
		if string(jsonBulkPurgeRollupRequestPurgePolicyOneOf) == "{}" { // empty struct
			dst.BulkPurgeRollupRequestPurgePolicyOneOf = nil
		} else {
			match++
		}
	} else {
		dst.BulkPurgeRollupRequestPurgePolicyOneOf = nil
	}

	// try to unmarshal data into BulkPurgeRollupRequestPurgePolicyOneOf1
	err = json.Unmarshal(data, &dst.BulkPurgeRollupRequestPurgePolicyOneOf1)
	if err == nil {
		jsonBulkPurgeRollupRequestPurgePolicyOneOf1, _ := json.Marshal(dst.BulkPurgeRollupRequestPurgePolicyOneOf1)
		if string(jsonBulkPurgeRollupRequestPurgePolicyOneOf1) == "{}" { // empty struct
			dst.BulkPurgeRollupRequestPurgePolicyOneOf1 = nil
		} else {
			match++
		}
	} else {
		dst.BulkPurgeRollupRequestPurgePolicyOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.BulkPurgeRollupRequestPurgePolicyOneOf = nil
		dst.BulkPurgeRollupRequestPurgePolicyOneOf1 = nil

		return fmt.Errorf("data matches more than one schema in oneOf(BulkPurgeRollupRequestPurgePolicy)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(BulkPurgeRollupRequestPurgePolicy)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src BulkPurgeRollupRequestPurgePolicy) MarshalJSON() ([]byte, error) {
	if src.BulkPurgeRollupRequestPurgePolicyOneOf != nil {
		return json.Marshal(&src.BulkPurgeRollupRequestPurgePolicyOneOf)
	}

	if src.BulkPurgeRollupRequestPurgePolicyOneOf1 != nil {
		return json.Marshal(&src.BulkPurgeRollupRequestPurgePolicyOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *BulkPurgeRollupRequestPurgePolicy) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.BulkPurgeRollupRequestPurgePolicyOneOf != nil {
		return obj.BulkPurgeRollupRequestPurgePolicyOneOf
	}

	if obj.BulkPurgeRollupRequestPurgePolicyOneOf1 != nil {
		return obj.BulkPurgeRollupRequestPurgePolicyOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableBulkPurgeRollupRequestPurgePolicy struct {
	value *BulkPurgeRollupRequestPurgePolicy
	isSet bool
}

func (v NullableBulkPurgeRollupRequestPurgePolicy) Get() *BulkPurgeRollupRequestPurgePolicy {
	return v.value
}

func (v *NullableBulkPurgeRollupRequestPurgePolicy) Set(val *BulkPurgeRollupRequestPurgePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableBulkPurgeRollupRequestPurgePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableBulkPurgeRollupRequestPurgePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBulkPurgeRollupRequestPurgePolicy(val *BulkPurgeRollupRequestPurgePolicy) *NullableBulkPurgeRollupRequestPurgePolicy {
	return &NullableBulkPurgeRollupRequestPurgePolicy{value: val, isSet: true}
}

func (v NullableBulkPurgeRollupRequestPurgePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBulkPurgeRollupRequestPurgePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
