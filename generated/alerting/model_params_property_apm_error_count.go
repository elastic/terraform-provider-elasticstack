/*
Alerting

OpenAPI schema for alerting endpoints

API version: 0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alerting

import (
	"encoding/json"
)

// checks if the ParamsPropertyApmErrorCount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParamsPropertyApmErrorCount{}

// ParamsPropertyApmErrorCount struct for ParamsPropertyApmErrorCount
type ParamsPropertyApmErrorCount struct {
	// The service name from APM
	ServiceName *string `json:"serviceName,omitempty"`
	// The window size
	WindowSize float32 `json:"windowSize"`
	// The window size unit
	WindowUnit string `json:"windowUnit"`
	// The environment from APM
	Environment string `json:"environment"`
	// The error count threshold value
	Threshold        float32  `json:"threshold"`
	GroupBy          []string `json:"groupBy,omitempty"`
	ErrorGroupingKey *string  `json:"errorGroupingKey,omitempty"`
}

// NewParamsPropertyApmErrorCount instantiates a new ParamsPropertyApmErrorCount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParamsPropertyApmErrorCount(windowSize float32, windowUnit string, environment string, threshold float32) *ParamsPropertyApmErrorCount {
	this := ParamsPropertyApmErrorCount{}
	this.WindowSize = windowSize
	this.WindowUnit = windowUnit
	this.Environment = environment
	this.Threshold = threshold
	return &this
}

// NewParamsPropertyApmErrorCountWithDefaults instantiates a new ParamsPropertyApmErrorCount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParamsPropertyApmErrorCountWithDefaults() *ParamsPropertyApmErrorCount {
	this := ParamsPropertyApmErrorCount{}
	return &this
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *ParamsPropertyApmErrorCount) GetServiceName() string {
	if o == nil || IsNil(o.ServiceName) {
		var ret string
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertyApmErrorCount) GetServiceNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *ParamsPropertyApmErrorCount) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given string and assigns it to the ServiceName field.
func (o *ParamsPropertyApmErrorCount) SetServiceName(v string) {
	o.ServiceName = &v
}

// GetWindowSize returns the WindowSize field value
func (o *ParamsPropertyApmErrorCount) GetWindowSize() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.WindowSize
}

// GetWindowSizeOk returns a tuple with the WindowSize field value
// and a boolean to check if the value has been set.
func (o *ParamsPropertyApmErrorCount) GetWindowSizeOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WindowSize, true
}

// SetWindowSize sets field value
func (o *ParamsPropertyApmErrorCount) SetWindowSize(v float32) {
	o.WindowSize = v
}

// GetWindowUnit returns the WindowUnit field value
func (o *ParamsPropertyApmErrorCount) GetWindowUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WindowUnit
}

// GetWindowUnitOk returns a tuple with the WindowUnit field value
// and a boolean to check if the value has been set.
func (o *ParamsPropertyApmErrorCount) GetWindowUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WindowUnit, true
}

// SetWindowUnit sets field value
func (o *ParamsPropertyApmErrorCount) SetWindowUnit(v string) {
	o.WindowUnit = v
}

// GetEnvironment returns the Environment field value
func (o *ParamsPropertyApmErrorCount) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *ParamsPropertyApmErrorCount) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *ParamsPropertyApmErrorCount) SetEnvironment(v string) {
	o.Environment = v
}

// GetThreshold returns the Threshold field value
func (o *ParamsPropertyApmErrorCount) GetThreshold() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Threshold
}

// GetThresholdOk returns a tuple with the Threshold field value
// and a boolean to check if the value has been set.
func (o *ParamsPropertyApmErrorCount) GetThresholdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Threshold, true
}

// SetThreshold sets field value
func (o *ParamsPropertyApmErrorCount) SetThreshold(v float32) {
	o.Threshold = v
}

// GetGroupBy returns the GroupBy field value if set, zero value otherwise.
func (o *ParamsPropertyApmErrorCount) GetGroupBy() []string {
	if o == nil || IsNil(o.GroupBy) {
		var ret []string
		return ret
	}
	return o.GroupBy
}

// GetGroupByOk returns a tuple with the GroupBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertyApmErrorCount) GetGroupByOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupBy) {
		return nil, false
	}
	return o.GroupBy, true
}

// HasGroupBy returns a boolean if a field has been set.
func (o *ParamsPropertyApmErrorCount) HasGroupBy() bool {
	if o != nil && !IsNil(o.GroupBy) {
		return true
	}

	return false
}

// SetGroupBy gets a reference to the given []string and assigns it to the GroupBy field.
func (o *ParamsPropertyApmErrorCount) SetGroupBy(v []string) {
	o.GroupBy = v
}

// GetErrorGroupingKey returns the ErrorGroupingKey field value if set, zero value otherwise.
func (o *ParamsPropertyApmErrorCount) GetErrorGroupingKey() string {
	if o == nil || IsNil(o.ErrorGroupingKey) {
		var ret string
		return ret
	}
	return *o.ErrorGroupingKey
}

// GetErrorGroupingKeyOk returns a tuple with the ErrorGroupingKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertyApmErrorCount) GetErrorGroupingKeyOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorGroupingKey) {
		return nil, false
	}
	return o.ErrorGroupingKey, true
}

// HasErrorGroupingKey returns a boolean if a field has been set.
func (o *ParamsPropertyApmErrorCount) HasErrorGroupingKey() bool {
	if o != nil && !IsNil(o.ErrorGroupingKey) {
		return true
	}

	return false
}

// SetErrorGroupingKey gets a reference to the given string and assigns it to the ErrorGroupingKey field.
func (o *ParamsPropertyApmErrorCount) SetErrorGroupingKey(v string) {
	o.ErrorGroupingKey = &v
}

func (o ParamsPropertyApmErrorCount) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParamsPropertyApmErrorCount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceName) {
		toSerialize["serviceName"] = o.ServiceName
	}
	toSerialize["windowSize"] = o.WindowSize
	toSerialize["windowUnit"] = o.WindowUnit
	toSerialize["environment"] = o.Environment
	toSerialize["threshold"] = o.Threshold
	if !IsNil(o.GroupBy) {
		toSerialize["groupBy"] = o.GroupBy
	}
	if !IsNil(o.ErrorGroupingKey) {
		toSerialize["errorGroupingKey"] = o.ErrorGroupingKey
	}
	return toSerialize, nil
}

type NullableParamsPropertyApmErrorCount struct {
	value *ParamsPropertyApmErrorCount
	isSet bool
}

func (v NullableParamsPropertyApmErrorCount) Get() *ParamsPropertyApmErrorCount {
	return v.value
}

func (v *NullableParamsPropertyApmErrorCount) Set(val *ParamsPropertyApmErrorCount) {
	v.value = val
	v.isSet = true
}

func (v NullableParamsPropertyApmErrorCount) IsSet() bool {
	return v.isSet
}

func (v *NullableParamsPropertyApmErrorCount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParamsPropertyApmErrorCount(val *ParamsPropertyApmErrorCount) *NullableParamsPropertyApmErrorCount {
	return &NullableParamsPropertyApmErrorCount{value: val, isSet: true}
}

func (v NullableParamsPropertyApmErrorCount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParamsPropertyApmErrorCount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
