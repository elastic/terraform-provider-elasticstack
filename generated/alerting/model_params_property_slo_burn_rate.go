/*
Alerting

OpenAPI schema for alerting endpoints

API version: 0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alerting

import (
	"encoding/json"
)

// checks if the ParamsPropertySloBurnRate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParamsPropertySloBurnRate{}

// ParamsPropertySloBurnRate struct for ParamsPropertySloBurnRate
type ParamsPropertySloBurnRate struct {
	// The SLO identifier used by the rule
	SloId *string `json:"sloId,omitempty"`
	// The burn rate threshold used to trigger the alert
	BurnRateThreshold *float32 `json:"burnRateThreshold,omitempty"`
	// The maximum burn rate threshold value defined by the SLO error budget
	MaxBurnRateThreshold *float32                              `json:"maxBurnRateThreshold,omitempty"`
	LongWindow           *ParamsPropertySloBurnRateLongWindow  `json:"longWindow,omitempty"`
	ShortWindow          *ParamsPropertySloBurnRateShortWindow `json:"shortWindow,omitempty"`
}

// NewParamsPropertySloBurnRate instantiates a new ParamsPropertySloBurnRate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParamsPropertySloBurnRate() *ParamsPropertySloBurnRate {
	this := ParamsPropertySloBurnRate{}
	return &this
}

// NewParamsPropertySloBurnRateWithDefaults instantiates a new ParamsPropertySloBurnRate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParamsPropertySloBurnRateWithDefaults() *ParamsPropertySloBurnRate {
	this := ParamsPropertySloBurnRate{}
	return &this
}

// GetSloId returns the SloId field value if set, zero value otherwise.
func (o *ParamsPropertySloBurnRate) GetSloId() string {
	if o == nil || IsNil(o.SloId) {
		var ret string
		return ret
	}
	return *o.SloId
}

// GetSloIdOk returns a tuple with the SloId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertySloBurnRate) GetSloIdOk() (*string, bool) {
	if o == nil || IsNil(o.SloId) {
		return nil, false
	}
	return o.SloId, true
}

// HasSloId returns a boolean if a field has been set.
func (o *ParamsPropertySloBurnRate) HasSloId() bool {
	if o != nil && !IsNil(o.SloId) {
		return true
	}

	return false
}

// SetSloId gets a reference to the given string and assigns it to the SloId field.
func (o *ParamsPropertySloBurnRate) SetSloId(v string) {
	o.SloId = &v
}

// GetBurnRateThreshold returns the BurnRateThreshold field value if set, zero value otherwise.
func (o *ParamsPropertySloBurnRate) GetBurnRateThreshold() float32 {
	if o == nil || IsNil(o.BurnRateThreshold) {
		var ret float32
		return ret
	}
	return *o.BurnRateThreshold
}

// GetBurnRateThresholdOk returns a tuple with the BurnRateThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertySloBurnRate) GetBurnRateThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.BurnRateThreshold) {
		return nil, false
	}
	return o.BurnRateThreshold, true
}

// HasBurnRateThreshold returns a boolean if a field has been set.
func (o *ParamsPropertySloBurnRate) HasBurnRateThreshold() bool {
	if o != nil && !IsNil(o.BurnRateThreshold) {
		return true
	}

	return false
}

// SetBurnRateThreshold gets a reference to the given float32 and assigns it to the BurnRateThreshold field.
func (o *ParamsPropertySloBurnRate) SetBurnRateThreshold(v float32) {
	o.BurnRateThreshold = &v
}

// GetMaxBurnRateThreshold returns the MaxBurnRateThreshold field value if set, zero value otherwise.
func (o *ParamsPropertySloBurnRate) GetMaxBurnRateThreshold() float32 {
	if o == nil || IsNil(o.MaxBurnRateThreshold) {
		var ret float32
		return ret
	}
	return *o.MaxBurnRateThreshold
}

// GetMaxBurnRateThresholdOk returns a tuple with the MaxBurnRateThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertySloBurnRate) GetMaxBurnRateThresholdOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxBurnRateThreshold) {
		return nil, false
	}
	return o.MaxBurnRateThreshold, true
}

// HasMaxBurnRateThreshold returns a boolean if a field has been set.
func (o *ParamsPropertySloBurnRate) HasMaxBurnRateThreshold() bool {
	if o != nil && !IsNil(o.MaxBurnRateThreshold) {
		return true
	}

	return false
}

// SetMaxBurnRateThreshold gets a reference to the given float32 and assigns it to the MaxBurnRateThreshold field.
func (o *ParamsPropertySloBurnRate) SetMaxBurnRateThreshold(v float32) {
	o.MaxBurnRateThreshold = &v
}

// GetLongWindow returns the LongWindow field value if set, zero value otherwise.
func (o *ParamsPropertySloBurnRate) GetLongWindow() ParamsPropertySloBurnRateLongWindow {
	if o == nil || IsNil(o.LongWindow) {
		var ret ParamsPropertySloBurnRateLongWindow
		return ret
	}
	return *o.LongWindow
}

// GetLongWindowOk returns a tuple with the LongWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertySloBurnRate) GetLongWindowOk() (*ParamsPropertySloBurnRateLongWindow, bool) {
	if o == nil || IsNil(o.LongWindow) {
		return nil, false
	}
	return o.LongWindow, true
}

// HasLongWindow returns a boolean if a field has been set.
func (o *ParamsPropertySloBurnRate) HasLongWindow() bool {
	if o != nil && !IsNil(o.LongWindow) {
		return true
	}

	return false
}

// SetLongWindow gets a reference to the given ParamsPropertySloBurnRateLongWindow and assigns it to the LongWindow field.
func (o *ParamsPropertySloBurnRate) SetLongWindow(v ParamsPropertySloBurnRateLongWindow) {
	o.LongWindow = &v
}

// GetShortWindow returns the ShortWindow field value if set, zero value otherwise.
func (o *ParamsPropertySloBurnRate) GetShortWindow() ParamsPropertySloBurnRateShortWindow {
	if o == nil || IsNil(o.ShortWindow) {
		var ret ParamsPropertySloBurnRateShortWindow
		return ret
	}
	return *o.ShortWindow
}

// GetShortWindowOk returns a tuple with the ShortWindow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertySloBurnRate) GetShortWindowOk() (*ParamsPropertySloBurnRateShortWindow, bool) {
	if o == nil || IsNil(o.ShortWindow) {
		return nil, false
	}
	return o.ShortWindow, true
}

// HasShortWindow returns a boolean if a field has been set.
func (o *ParamsPropertySloBurnRate) HasShortWindow() bool {
	if o != nil && !IsNil(o.ShortWindow) {
		return true
	}

	return false
}

// SetShortWindow gets a reference to the given ParamsPropertySloBurnRateShortWindow and assigns it to the ShortWindow field.
func (o *ParamsPropertySloBurnRate) SetShortWindow(v ParamsPropertySloBurnRateShortWindow) {
	o.ShortWindow = &v
}

func (o ParamsPropertySloBurnRate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParamsPropertySloBurnRate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SloId) {
		toSerialize["sloId"] = o.SloId
	}
	if !IsNil(o.BurnRateThreshold) {
		toSerialize["burnRateThreshold"] = o.BurnRateThreshold
	}
	if !IsNil(o.MaxBurnRateThreshold) {
		toSerialize["maxBurnRateThreshold"] = o.MaxBurnRateThreshold
	}
	if !IsNil(o.LongWindow) {
		toSerialize["longWindow"] = o.LongWindow
	}
	if !IsNil(o.ShortWindow) {
		toSerialize["shortWindow"] = o.ShortWindow
	}
	return toSerialize, nil
}

type NullableParamsPropertySloBurnRate struct {
	value *ParamsPropertySloBurnRate
	isSet bool
}

func (v NullableParamsPropertySloBurnRate) Get() *ParamsPropertySloBurnRate {
	return v.value
}

func (v *NullableParamsPropertySloBurnRate) Set(val *ParamsPropertySloBurnRate) {
	v.value = val
	v.isSet = true
}

func (v NullableParamsPropertySloBurnRate) IsSet() bool {
	return v.isSet
}

func (v *NullableParamsPropertySloBurnRate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParamsPropertySloBurnRate(val *ParamsPropertySloBurnRate) *NullableParamsPropertySloBurnRate {
	return &NullableParamsPropertySloBurnRate{value: val, isSet: true}
}

func (v NullableParamsPropertySloBurnRate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParamsPropertySloBurnRate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
