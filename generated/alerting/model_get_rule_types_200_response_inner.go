/*
Alerting

OpenAPI schema for alerting endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alerting

import (
	"encoding/json"
)

// checks if the GetRuleTypes200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRuleTypes200ResponseInner{}

// GetRuleTypes200ResponseInner struct for GetRuleTypes200ResponseInner
type GetRuleTypes200ResponseInner struct {
	// An explicit list of groups for which the rule type can schedule actions, each with the action group's unique ID and human readable name. Rule actions validation uses this configuration to ensure that groups are valid.
	ActionGroups        []GetRuleTypes200ResponseInnerActionGroupsInner  `json:"action_groups,omitempty"`
	ActionVariables     *GetRuleTypes200ResponseInnerActionVariables     `json:"action_variables,omitempty"`
	AuthorizedConsumers *GetRuleTypes200ResponseInnerAuthorizedConsumers `json:"authorized_consumers,omitempty"`
	// The default identifier for the rule type group.
	DefaultActionGroupId *string `json:"default_action_group_id,omitempty"`
	// Indicates whether the rule passes context variables to its recovery action.
	DoesSetRecoveryContext *bool `json:"does_set_recovery_context,omitempty"`
	// Indicates whether the rule type is enabled or disabled based on the subscription.
	EnabledInLicense *bool `json:"enabled_in_license,omitempty"`
	// The unique identifier for the rule type.
	Id *string `json:"id,omitempty"`
	// Indicates whether the rule type is exportable in **Stack Management > Saved Objects**.
	IsExportable *bool `json:"is_exportable,omitempty"`
	// The subscriptions required to use the rule type.
	MinimumLicenseRequired *string `json:"minimum_license_required,omitempty"`
	// The descriptive name of the rule type.
	Name *string `json:"name,omitempty"`
	// An identifier for the application that produces this rule type.
	Producer            *string                                          `json:"producer,omitempty"`
	RecoveryActionGroup *GetRuleTypes200ResponseInnerRecoveryActionGroup `json:"recovery_action_group,omitempty"`
	RuleTaskTimeout     *string                                          `json:"rule_task_timeout,omitempty"`
}

// NewGetRuleTypes200ResponseInner instantiates a new GetRuleTypes200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRuleTypes200ResponseInner() *GetRuleTypes200ResponseInner {
	this := GetRuleTypes200ResponseInner{}
	return &this
}

// NewGetRuleTypes200ResponseInnerWithDefaults instantiates a new GetRuleTypes200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRuleTypes200ResponseInnerWithDefaults() *GetRuleTypes200ResponseInner {
	this := GetRuleTypes200ResponseInner{}
	return &this
}

// GetActionGroups returns the ActionGroups field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetActionGroups() []GetRuleTypes200ResponseInnerActionGroupsInner {
	if o == nil || IsNil(o.ActionGroups) {
		var ret []GetRuleTypes200ResponseInnerActionGroupsInner
		return ret
	}
	return o.ActionGroups
}

// GetActionGroupsOk returns a tuple with the ActionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetActionGroupsOk() ([]GetRuleTypes200ResponseInnerActionGroupsInner, bool) {
	if o == nil || IsNil(o.ActionGroups) {
		return nil, false
	}
	return o.ActionGroups, true
}

// HasActionGroups returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasActionGroups() bool {
	if o != nil && !IsNil(o.ActionGroups) {
		return true
	}

	return false
}

// SetActionGroups gets a reference to the given []GetRuleTypes200ResponseInnerActionGroupsInner and assigns it to the ActionGroups field.
func (o *GetRuleTypes200ResponseInner) SetActionGroups(v []GetRuleTypes200ResponseInnerActionGroupsInner) {
	o.ActionGroups = v
}

// GetActionVariables returns the ActionVariables field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetActionVariables() GetRuleTypes200ResponseInnerActionVariables {
	if o == nil || IsNil(o.ActionVariables) {
		var ret GetRuleTypes200ResponseInnerActionVariables
		return ret
	}
	return *o.ActionVariables
}

// GetActionVariablesOk returns a tuple with the ActionVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetActionVariablesOk() (*GetRuleTypes200ResponseInnerActionVariables, bool) {
	if o == nil || IsNil(o.ActionVariables) {
		return nil, false
	}
	return o.ActionVariables, true
}

// HasActionVariables returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasActionVariables() bool {
	if o != nil && !IsNil(o.ActionVariables) {
		return true
	}

	return false
}

// SetActionVariables gets a reference to the given GetRuleTypes200ResponseInnerActionVariables and assigns it to the ActionVariables field.
func (o *GetRuleTypes200ResponseInner) SetActionVariables(v GetRuleTypes200ResponseInnerActionVariables) {
	o.ActionVariables = &v
}

// GetAuthorizedConsumers returns the AuthorizedConsumers field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetAuthorizedConsumers() GetRuleTypes200ResponseInnerAuthorizedConsumers {
	if o == nil || IsNil(o.AuthorizedConsumers) {
		var ret GetRuleTypes200ResponseInnerAuthorizedConsumers
		return ret
	}
	return *o.AuthorizedConsumers
}

// GetAuthorizedConsumersOk returns a tuple with the AuthorizedConsumers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetAuthorizedConsumersOk() (*GetRuleTypes200ResponseInnerAuthorizedConsumers, bool) {
	if o == nil || IsNil(o.AuthorizedConsumers) {
		return nil, false
	}
	return o.AuthorizedConsumers, true
}

// HasAuthorizedConsumers returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasAuthorizedConsumers() bool {
	if o != nil && !IsNil(o.AuthorizedConsumers) {
		return true
	}

	return false
}

// SetAuthorizedConsumers gets a reference to the given GetRuleTypes200ResponseInnerAuthorizedConsumers and assigns it to the AuthorizedConsumers field.
func (o *GetRuleTypes200ResponseInner) SetAuthorizedConsumers(v GetRuleTypes200ResponseInnerAuthorizedConsumers) {
	o.AuthorizedConsumers = &v
}

// GetDefaultActionGroupId returns the DefaultActionGroupId field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetDefaultActionGroupId() string {
	if o == nil || IsNil(o.DefaultActionGroupId) {
		var ret string
		return ret
	}
	return *o.DefaultActionGroupId
}

// GetDefaultActionGroupIdOk returns a tuple with the DefaultActionGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetDefaultActionGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultActionGroupId) {
		return nil, false
	}
	return o.DefaultActionGroupId, true
}

// HasDefaultActionGroupId returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasDefaultActionGroupId() bool {
	if o != nil && !IsNil(o.DefaultActionGroupId) {
		return true
	}

	return false
}

// SetDefaultActionGroupId gets a reference to the given string and assigns it to the DefaultActionGroupId field.
func (o *GetRuleTypes200ResponseInner) SetDefaultActionGroupId(v string) {
	o.DefaultActionGroupId = &v
}

// GetDoesSetRecoveryContext returns the DoesSetRecoveryContext field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetDoesSetRecoveryContext() bool {
	if o == nil || IsNil(o.DoesSetRecoveryContext) {
		var ret bool
		return ret
	}
	return *o.DoesSetRecoveryContext
}

// GetDoesSetRecoveryContextOk returns a tuple with the DoesSetRecoveryContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetDoesSetRecoveryContextOk() (*bool, bool) {
	if o == nil || IsNil(o.DoesSetRecoveryContext) {
		return nil, false
	}
	return o.DoesSetRecoveryContext, true
}

// HasDoesSetRecoveryContext returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasDoesSetRecoveryContext() bool {
	if o != nil && !IsNil(o.DoesSetRecoveryContext) {
		return true
	}

	return false
}

// SetDoesSetRecoveryContext gets a reference to the given bool and assigns it to the DoesSetRecoveryContext field.
func (o *GetRuleTypes200ResponseInner) SetDoesSetRecoveryContext(v bool) {
	o.DoesSetRecoveryContext = &v
}

// GetEnabledInLicense returns the EnabledInLicense field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetEnabledInLicense() bool {
	if o == nil || IsNil(o.EnabledInLicense) {
		var ret bool
		return ret
	}
	return *o.EnabledInLicense
}

// GetEnabledInLicenseOk returns a tuple with the EnabledInLicense field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetEnabledInLicenseOk() (*bool, bool) {
	if o == nil || IsNil(o.EnabledInLicense) {
		return nil, false
	}
	return o.EnabledInLicense, true
}

// HasEnabledInLicense returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasEnabledInLicense() bool {
	if o != nil && !IsNil(o.EnabledInLicense) {
		return true
	}

	return false
}

// SetEnabledInLicense gets a reference to the given bool and assigns it to the EnabledInLicense field.
func (o *GetRuleTypes200ResponseInner) SetEnabledInLicense(v bool) {
	o.EnabledInLicense = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GetRuleTypes200ResponseInner) SetId(v string) {
	o.Id = &v
}

// GetIsExportable returns the IsExportable field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetIsExportable() bool {
	if o == nil || IsNil(o.IsExportable) {
		var ret bool
		return ret
	}
	return *o.IsExportable
}

// GetIsExportableOk returns a tuple with the IsExportable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetIsExportableOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExportable) {
		return nil, false
	}
	return o.IsExportable, true
}

// HasIsExportable returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasIsExportable() bool {
	if o != nil && !IsNil(o.IsExportable) {
		return true
	}

	return false
}

// SetIsExportable gets a reference to the given bool and assigns it to the IsExportable field.
func (o *GetRuleTypes200ResponseInner) SetIsExportable(v bool) {
	o.IsExportable = &v
}

// GetMinimumLicenseRequired returns the MinimumLicenseRequired field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetMinimumLicenseRequired() string {
	if o == nil || IsNil(o.MinimumLicenseRequired) {
		var ret string
		return ret
	}
	return *o.MinimumLicenseRequired
}

// GetMinimumLicenseRequiredOk returns a tuple with the MinimumLicenseRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetMinimumLicenseRequiredOk() (*string, bool) {
	if o == nil || IsNil(o.MinimumLicenseRequired) {
		return nil, false
	}
	return o.MinimumLicenseRequired, true
}

// HasMinimumLicenseRequired returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasMinimumLicenseRequired() bool {
	if o != nil && !IsNil(o.MinimumLicenseRequired) {
		return true
	}

	return false
}

// SetMinimumLicenseRequired gets a reference to the given string and assigns it to the MinimumLicenseRequired field.
func (o *GetRuleTypes200ResponseInner) SetMinimumLicenseRequired(v string) {
	o.MinimumLicenseRequired = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *GetRuleTypes200ResponseInner) SetName(v string) {
	o.Name = &v
}

// GetProducer returns the Producer field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetProducer() string {
	if o == nil || IsNil(o.Producer) {
		var ret string
		return ret
	}
	return *o.Producer
}

// GetProducerOk returns a tuple with the Producer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetProducerOk() (*string, bool) {
	if o == nil || IsNil(o.Producer) {
		return nil, false
	}
	return o.Producer, true
}

// HasProducer returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasProducer() bool {
	if o != nil && !IsNil(o.Producer) {
		return true
	}

	return false
}

// SetProducer gets a reference to the given string and assigns it to the Producer field.
func (o *GetRuleTypes200ResponseInner) SetProducer(v string) {
	o.Producer = &v
}

// GetRecoveryActionGroup returns the RecoveryActionGroup field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetRecoveryActionGroup() GetRuleTypes200ResponseInnerRecoveryActionGroup {
	if o == nil || IsNil(o.RecoveryActionGroup) {
		var ret GetRuleTypes200ResponseInnerRecoveryActionGroup
		return ret
	}
	return *o.RecoveryActionGroup
}

// GetRecoveryActionGroupOk returns a tuple with the RecoveryActionGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetRecoveryActionGroupOk() (*GetRuleTypes200ResponseInnerRecoveryActionGroup, bool) {
	if o == nil || IsNil(o.RecoveryActionGroup) {
		return nil, false
	}
	return o.RecoveryActionGroup, true
}

// HasRecoveryActionGroup returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasRecoveryActionGroup() bool {
	if o != nil && !IsNil(o.RecoveryActionGroup) {
		return true
	}

	return false
}

// SetRecoveryActionGroup gets a reference to the given GetRuleTypes200ResponseInnerRecoveryActionGroup and assigns it to the RecoveryActionGroup field.
func (o *GetRuleTypes200ResponseInner) SetRecoveryActionGroup(v GetRuleTypes200ResponseInnerRecoveryActionGroup) {
	o.RecoveryActionGroup = &v
}

// GetRuleTaskTimeout returns the RuleTaskTimeout field value if set, zero value otherwise.
func (o *GetRuleTypes200ResponseInner) GetRuleTaskTimeout() string {
	if o == nil || IsNil(o.RuleTaskTimeout) {
		var ret string
		return ret
	}
	return *o.RuleTaskTimeout
}

// GetRuleTaskTimeoutOk returns a tuple with the RuleTaskTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuleTypes200ResponseInner) GetRuleTaskTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.RuleTaskTimeout) {
		return nil, false
	}
	return o.RuleTaskTimeout, true
}

// HasRuleTaskTimeout returns a boolean if a field has been set.
func (o *GetRuleTypes200ResponseInner) HasRuleTaskTimeout() bool {
	if o != nil && !IsNil(o.RuleTaskTimeout) {
		return true
	}

	return false
}

// SetRuleTaskTimeout gets a reference to the given string and assigns it to the RuleTaskTimeout field.
func (o *GetRuleTypes200ResponseInner) SetRuleTaskTimeout(v string) {
	o.RuleTaskTimeout = &v
}

func (o GetRuleTypes200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRuleTypes200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionGroups) {
		toSerialize["action_groups"] = o.ActionGroups
	}
	if !IsNil(o.ActionVariables) {
		toSerialize["action_variables"] = o.ActionVariables
	}
	if !IsNil(o.AuthorizedConsumers) {
		toSerialize["authorized_consumers"] = o.AuthorizedConsumers
	}
	if !IsNil(o.DefaultActionGroupId) {
		toSerialize["default_action_group_id"] = o.DefaultActionGroupId
	}
	if !IsNil(o.DoesSetRecoveryContext) {
		toSerialize["does_set_recovery_context"] = o.DoesSetRecoveryContext
	}
	if !IsNil(o.EnabledInLicense) {
		toSerialize["enabled_in_license"] = o.EnabledInLicense
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsExportable) {
		toSerialize["is_exportable"] = o.IsExportable
	}
	if !IsNil(o.MinimumLicenseRequired) {
		toSerialize["minimum_license_required"] = o.MinimumLicenseRequired
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Producer) {
		toSerialize["producer"] = o.Producer
	}
	if !IsNil(o.RecoveryActionGroup) {
		toSerialize["recovery_action_group"] = o.RecoveryActionGroup
	}
	if !IsNil(o.RuleTaskTimeout) {
		toSerialize["rule_task_timeout"] = o.RuleTaskTimeout
	}
	return toSerialize, nil
}

type NullableGetRuleTypes200ResponseInner struct {
	value *GetRuleTypes200ResponseInner
	isSet bool
}

func (v NullableGetRuleTypes200ResponseInner) Get() *GetRuleTypes200ResponseInner {
	return v.value
}

func (v *NullableGetRuleTypes200ResponseInner) Set(val *GetRuleTypes200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRuleTypes200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRuleTypes200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRuleTypes200ResponseInner(val *GetRuleTypes200ResponseInner) *NullableGetRuleTypes200ResponseInner {
	return &NullableGetRuleTypes200ResponseInner{value: val, isSet: true}
}

func (v NullableGetRuleTypes200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRuleTypes200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
