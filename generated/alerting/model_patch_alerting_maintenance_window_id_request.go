/*
Alerting

OpenAPI schema for alerting endpoints

API version: 0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alerting

import (
	"encoding/json"
)

// checks if the PatchAlertingMaintenanceWindowIdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchAlertingMaintenanceWindowIdRequest{}

// PatchAlertingMaintenanceWindowIdRequest struct for PatchAlertingMaintenanceWindowIdRequest
type PatchAlertingMaintenanceWindowIdRequest struct {
	// Whether the current maintenance window is enabled. Disabled maintenance windows do not suppress notifications.
	Enabled  interface{}                                       `json:"enabled,omitempty"`
	Schedule *PostAlertingMaintenanceWindow200ResponseSchedule `json:"schedule,omitempty"`
	Scope    *PostAlertingMaintenanceWindowRequestScope        `json:"scope,omitempty"`
	// The name of the maintenance window. While this name does not have to be unique, a distinctive name can help you identify a specific maintenance window.
	Title                interface{} `json:"title,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchAlertingMaintenanceWindowIdRequest PatchAlertingMaintenanceWindowIdRequest

// NewPatchAlertingMaintenanceWindowIdRequest instantiates a new PatchAlertingMaintenanceWindowIdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchAlertingMaintenanceWindowIdRequest() *PatchAlertingMaintenanceWindowIdRequest {
	this := PatchAlertingMaintenanceWindowIdRequest{}
	return &this
}

// NewPatchAlertingMaintenanceWindowIdRequestWithDefaults instantiates a new PatchAlertingMaintenanceWindowIdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchAlertingMaintenanceWindowIdRequestWithDefaults() *PatchAlertingMaintenanceWindowIdRequest {
	this := PatchAlertingMaintenanceWindowIdRequest{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchAlertingMaintenanceWindowIdRequest) GetEnabled() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchAlertingMaintenanceWindowIdRequest) GetEnabledOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return &o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *PatchAlertingMaintenanceWindowIdRequest) HasEnabled() bool {
	if o != nil && IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given interface{} and assigns it to the Enabled field.
func (o *PatchAlertingMaintenanceWindowIdRequest) SetEnabled(v interface{}) {
	o.Enabled = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *PatchAlertingMaintenanceWindowIdRequest) GetSchedule() PostAlertingMaintenanceWindow200ResponseSchedule {
	if o == nil || IsNil(o.Schedule) {
		var ret PostAlertingMaintenanceWindow200ResponseSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAlertingMaintenanceWindowIdRequest) GetScheduleOk() (*PostAlertingMaintenanceWindow200ResponseSchedule, bool) {
	if o == nil || IsNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *PatchAlertingMaintenanceWindowIdRequest) HasSchedule() bool {
	if o != nil && !IsNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given PostAlertingMaintenanceWindow200ResponseSchedule and assigns it to the Schedule field.
func (o *PatchAlertingMaintenanceWindowIdRequest) SetSchedule(v PostAlertingMaintenanceWindow200ResponseSchedule) {
	o.Schedule = &v
}

// GetScope returns the Scope field value if set, zero value otherwise.
func (o *PatchAlertingMaintenanceWindowIdRequest) GetScope() PostAlertingMaintenanceWindowRequestScope {
	if o == nil || IsNil(o.Scope) {
		var ret PostAlertingMaintenanceWindowRequestScope
		return ret
	}
	return *o.Scope
}

// GetScopeOk returns a tuple with the Scope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchAlertingMaintenanceWindowIdRequest) GetScopeOk() (*PostAlertingMaintenanceWindowRequestScope, bool) {
	if o == nil || IsNil(o.Scope) {
		return nil, false
	}
	return o.Scope, true
}

// HasScope returns a boolean if a field has been set.
func (o *PatchAlertingMaintenanceWindowIdRequest) HasScope() bool {
	if o != nil && !IsNil(o.Scope) {
		return true
	}

	return false
}

// SetScope gets a reference to the given PostAlertingMaintenanceWindowRequestScope and assigns it to the Scope field.
func (o *PatchAlertingMaintenanceWindowIdRequest) SetScope(v PostAlertingMaintenanceWindowRequestScope) {
	o.Scope = &v
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PatchAlertingMaintenanceWindowIdRequest) GetTitle() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PatchAlertingMaintenanceWindowIdRequest) GetTitleOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return &o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PatchAlertingMaintenanceWindowIdRequest) HasTitle() bool {
	if o != nil && IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given interface{} and assigns it to the Title field.
func (o *PatchAlertingMaintenanceWindowIdRequest) SetTitle(v interface{}) {
	o.Title = v
}

func (o PatchAlertingMaintenanceWindowIdRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchAlertingMaintenanceWindowIdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !IsNil(o.Scope) {
		toSerialize["scope"] = o.Scope
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchAlertingMaintenanceWindowIdRequest) UnmarshalJSON(bytes []byte) (err error) {
	varPatchAlertingMaintenanceWindowIdRequest := _PatchAlertingMaintenanceWindowIdRequest{}

	err = json.Unmarshal(bytes, &varPatchAlertingMaintenanceWindowIdRequest)

	if err != nil {
		return err
	}

	*o = PatchAlertingMaintenanceWindowIdRequest(varPatchAlertingMaintenanceWindowIdRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "enabled")
		delete(additionalProperties, "schedule")
		delete(additionalProperties, "scope")
		delete(additionalProperties, "title")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchAlertingMaintenanceWindowIdRequest struct {
	value *PatchAlertingMaintenanceWindowIdRequest
	isSet bool
}

func (v NullablePatchAlertingMaintenanceWindowIdRequest) Get() *PatchAlertingMaintenanceWindowIdRequest {
	return v.value
}

func (v *NullablePatchAlertingMaintenanceWindowIdRequest) Set(val *PatchAlertingMaintenanceWindowIdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchAlertingMaintenanceWindowIdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchAlertingMaintenanceWindowIdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchAlertingMaintenanceWindowIdRequest(val *PatchAlertingMaintenanceWindowIdRequest) *NullablePatchAlertingMaintenanceWindowIdRequest {
	return &NullablePatchAlertingMaintenanceWindowIdRequest{value: val, isSet: true}
}

func (v NullablePatchAlertingMaintenanceWindowIdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchAlertingMaintenanceWindowIdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
