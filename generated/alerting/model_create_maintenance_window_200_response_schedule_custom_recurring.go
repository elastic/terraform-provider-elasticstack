/*
Alerting

OpenAPI schema for alerting endpoints

API version: 0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alerting

import (
	"encoding/json"
)

// checks if the CreateMaintenanceWindow200ResponseScheduleCustomRecurring type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateMaintenanceWindow200ResponseScheduleCustomRecurring{}

// CreateMaintenanceWindow200ResponseScheduleCustomRecurring struct for CreateMaintenanceWindow200ResponseScheduleCustomRecurring
type CreateMaintenanceWindow200ResponseScheduleCustomRecurring struct {
	// The end date of a recurring schedule, provided in ISO 8601 format and set to the UTC timezone. For example: `2025-04-01T00:00:00.000Z`.
	End interface{} `json:"end,omitempty"`
	// The interval and frequency of a recurring schedule. It allows values in `<integer><unit>` format. `<unit>` is one of `d`, `w`, `M`, or `y` for days, weeks, months, years. For example: `15d`, `2w`, `3m`, `1y`.
	Every interface{} `json:"every,omitempty"`
	// The total number of recurrences of the schedule.
	Occurrences interface{} `json:"occurrences,omitempty"`
	// The specific months for a recurring schedule. Valid values are 1-12.
	OnMonth interface{} `json:"onMonth,omitempty"`
	// The specific days of the month for a recurring schedule. Valid values are 1-31.
	OnMonthDay interface{} `json:"onMonthDay,omitempty"`
	// The specific days of the week (`[MO,TU,WE,TH,FR,SA,SU]`) or nth day of month (`[+1MO, -3FR, +2WE, -4SA, -5SU]`) for a recurring schedule.
	OnWeekDay            interface{} `json:"onWeekDay,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateMaintenanceWindow200ResponseScheduleCustomRecurring CreateMaintenanceWindow200ResponseScheduleCustomRecurring

// NewCreateMaintenanceWindow200ResponseScheduleCustomRecurring instantiates a new CreateMaintenanceWindow200ResponseScheduleCustomRecurring object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateMaintenanceWindow200ResponseScheduleCustomRecurring() *CreateMaintenanceWindow200ResponseScheduleCustomRecurring {
	this := CreateMaintenanceWindow200ResponseScheduleCustomRecurring{}
	return &this
}

// NewCreateMaintenanceWindow200ResponseScheduleCustomRecurringWithDefaults instantiates a new CreateMaintenanceWindow200ResponseScheduleCustomRecurring object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateMaintenanceWindow200ResponseScheduleCustomRecurringWithDefaults() *CreateMaintenanceWindow200ResponseScheduleCustomRecurring {
	this := CreateMaintenanceWindow200ResponseScheduleCustomRecurring{}
	return &this
}

// GetEnd returns the End field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetEnd() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.End
}

// GetEndOk returns a tuple with the End field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetEndOk() (*interface{}, bool) {
	if o == nil || IsNil(o.End) {
		return nil, false
	}
	return &o.End, true
}

// HasEnd returns a boolean if a field has been set.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) HasEnd() bool {
	if o != nil && IsNil(o.End) {
		return true
	}

	return false
}

// SetEnd gets a reference to the given interface{} and assigns it to the End field.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) SetEnd(v interface{}) {
	o.End = v
}

// GetEvery returns the Every field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetEvery() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Every
}

// GetEveryOk returns a tuple with the Every field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetEveryOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Every) {
		return nil, false
	}
	return &o.Every, true
}

// HasEvery returns a boolean if a field has been set.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) HasEvery() bool {
	if o != nil && IsNil(o.Every) {
		return true
	}

	return false
}

// SetEvery gets a reference to the given interface{} and assigns it to the Every field.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) SetEvery(v interface{}) {
	o.Every = v
}

// GetOccurrences returns the Occurrences field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetOccurrences() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Occurrences
}

// GetOccurrencesOk returns a tuple with the Occurrences field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetOccurrencesOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Occurrences) {
		return nil, false
	}
	return &o.Occurrences, true
}

// HasOccurrences returns a boolean if a field has been set.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) HasOccurrences() bool {
	if o != nil && IsNil(o.Occurrences) {
		return true
	}

	return false
}

// SetOccurrences gets a reference to the given interface{} and assigns it to the Occurrences field.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) SetOccurrences(v interface{}) {
	o.Occurrences = v
}

// GetOnMonth returns the OnMonth field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetOnMonth() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OnMonth
}

// GetOnMonthOk returns a tuple with the OnMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetOnMonthOk() (*interface{}, bool) {
	if o == nil || IsNil(o.OnMonth) {
		return nil, false
	}
	return &o.OnMonth, true
}

// HasOnMonth returns a boolean if a field has been set.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) HasOnMonth() bool {
	if o != nil && IsNil(o.OnMonth) {
		return true
	}

	return false
}

// SetOnMonth gets a reference to the given interface{} and assigns it to the OnMonth field.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) SetOnMonth(v interface{}) {
	o.OnMonth = v
}

// GetOnMonthDay returns the OnMonthDay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetOnMonthDay() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OnMonthDay
}

// GetOnMonthDayOk returns a tuple with the OnMonthDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetOnMonthDayOk() (*interface{}, bool) {
	if o == nil || IsNil(o.OnMonthDay) {
		return nil, false
	}
	return &o.OnMonthDay, true
}

// HasOnMonthDay returns a boolean if a field has been set.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) HasOnMonthDay() bool {
	if o != nil && IsNil(o.OnMonthDay) {
		return true
	}

	return false
}

// SetOnMonthDay gets a reference to the given interface{} and assigns it to the OnMonthDay field.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) SetOnMonthDay(v interface{}) {
	o.OnMonthDay = v
}

// GetOnWeekDay returns the OnWeekDay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetOnWeekDay() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.OnWeekDay
}

// GetOnWeekDayOk returns a tuple with the OnWeekDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) GetOnWeekDayOk() (*interface{}, bool) {
	if o == nil || IsNil(o.OnWeekDay) {
		return nil, false
	}
	return &o.OnWeekDay, true
}

// HasOnWeekDay returns a boolean if a field has been set.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) HasOnWeekDay() bool {
	if o != nil && IsNil(o.OnWeekDay) {
		return true
	}

	return false
}

// SetOnWeekDay gets a reference to the given interface{} and assigns it to the OnWeekDay field.
func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) SetOnWeekDay(v interface{}) {
	o.OnWeekDay = v
}

func (o CreateMaintenanceWindow200ResponseScheduleCustomRecurring) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateMaintenanceWindow200ResponseScheduleCustomRecurring) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.End != nil {
		toSerialize["end"] = o.End
	}
	if o.Every != nil {
		toSerialize["every"] = o.Every
	}
	if o.Occurrences != nil {
		toSerialize["occurrences"] = o.Occurrences
	}
	if o.OnMonth != nil {
		toSerialize["onMonth"] = o.OnMonth
	}
	if o.OnMonthDay != nil {
		toSerialize["onMonthDay"] = o.OnMonthDay
	}
	if o.OnWeekDay != nil {
		toSerialize["onWeekDay"] = o.OnWeekDay
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) UnmarshalJSON(bytes []byte) (err error) {
	varCreateMaintenanceWindow200ResponseScheduleCustomRecurring := _CreateMaintenanceWindow200ResponseScheduleCustomRecurring{}

	err = json.Unmarshal(bytes, &varCreateMaintenanceWindow200ResponseScheduleCustomRecurring)

	if err != nil {
		return err
	}

	*o = CreateMaintenanceWindow200ResponseScheduleCustomRecurring(varCreateMaintenanceWindow200ResponseScheduleCustomRecurring)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "end")
		delete(additionalProperties, "every")
		delete(additionalProperties, "occurrences")
		delete(additionalProperties, "onMonth")
		delete(additionalProperties, "onMonthDay")
		delete(additionalProperties, "onWeekDay")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateMaintenanceWindow200ResponseScheduleCustomRecurring struct {
	value *CreateMaintenanceWindow200ResponseScheduleCustomRecurring
	isSet bool
}

func (v NullableCreateMaintenanceWindow200ResponseScheduleCustomRecurring) Get() *CreateMaintenanceWindow200ResponseScheduleCustomRecurring {
	return v.value
}

func (v *NullableCreateMaintenanceWindow200ResponseScheduleCustomRecurring) Set(val *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateMaintenanceWindow200ResponseScheduleCustomRecurring) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateMaintenanceWindow200ResponseScheduleCustomRecurring) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateMaintenanceWindow200ResponseScheduleCustomRecurring(val *CreateMaintenanceWindow200ResponseScheduleCustomRecurring) *NullableCreateMaintenanceWindow200ResponseScheduleCustomRecurring {
	return &NullableCreateMaintenanceWindow200ResponseScheduleCustomRecurring{value: val, isSet: true}
}

func (v NullableCreateMaintenanceWindow200ResponseScheduleCustomRecurring) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateMaintenanceWindow200ResponseScheduleCustomRecurring) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
