openapi: 3.1.0
info:
  contact:
    name: Alerting Team
  description: OpenAPI schema for alerting endpoints
  license:
    name: Elastic License 2.0
    url: https://www.elastic.co/licensing/elastic-license
  title: Alerting
  version: "0.2"
servers:
- url: /
security:
- basicAuth: []
- apiKeyAuth: []
tags:
- description: Alerting APIs enable you to create and manage rules and alerts.
  name: alerting
paths:
  /s/{spaceId}/api/alerting/rule:
    post:
      description: |
        To create a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're creating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs.
      operationId: createRule
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/space_id'
      requestBody:
        content:
          application/json:
            examples:
              createEsQueryEsqlRuleRequest:
                $ref: '#/components/examples/create_es_query_esql_rule_request'
              createEsQueryRuleRequest:
                $ref: '#/components/examples/create_es_query_rule_request'
              createEsQueryKqlRuleRequest:
                $ref: '#/components/examples/create_es_query_kql_rule_request'
              createIndexThresholdRuleRequest:
                $ref: '#/components/examples/create_index_threshold_rule_request'
              createTrackingContainmentRuleRequest:
                $ref: '#/components/examples/create_tracking_containment_rule_request'
            schema:
              $ref: '#/components/schemas/create_rule_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                createEsQueryEsqlRuleResponse:
                  $ref: '#/components/examples/create_es_query_esql_rule_response'
                createEsQueryRuleResponse:
                  $ref: '#/components/examples/create_es_query_rule_response'
                createEsQueryKqlRuleResponse:
                  $ref: '#/components/examples/create_es_query_kql_rule_response'
                createIndexThresholdRuleResponse:
                  $ref: '#/components/examples/create_index_threshold_rule_response'
                createTrackingContainmentRuleResponse:
                  $ref: '#/components/examples/create_tracking_containment_rule_response'
              schema:
                $ref: '#/components/schemas/rule_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
          description: Object is not found.
      summary: Creates a rule with a randomly generated rule identifier.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/rule/{ruleId}:
    delete:
      description: |
        To delete a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're deleting. For example, the **Management** > **Stack Rules** feature, **Analytics** > **Discover** or **Machine Learning** features, **Observability**, or **Security** features. WARNING: After you delete a rule, you cannot recover it. If the API key that is used by the rule was created automatically, it is deleted.
      operationId: deleteRule
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/rule_id'
      - $ref: '#/components/parameters/space_id'
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
          description: Object is not found.
      summary: Deletes a rule.
      tags:
      - alerting
    get:
      description: |
        You must have `read` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rules you're seeking. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To get rules associated with the **Stack Monitoring** feature, use the `monitoring_user` built-in role.
      operationId: getRule
      parameters:
      - $ref: '#/components/parameters/rule_id'
      - $ref: '#/components/parameters/space_id'
      responses:
        "200":
          content:
            application/json:
              examples:
                getRuleResponse:
                  $ref: '#/components/examples/get_rule_response'
              schema:
                $ref: '#/components/schemas/rule_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
          description: Object is not found.
      summary: Retrieves a rule by its identifier.
      tags:
      - alerting
    post:
      description: |
        To create a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're creating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs.
      operationId: createRuleId
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/space_id'
      - description: |
          An UUID v1 or v4 identifier for the rule. If you omit this parameter, an identifier is randomly generated.
        explode: false
        in: path
        name: ruleId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              createEsQueryEsqlRuleIdRequest:
                $ref: '#/components/examples/create_es_query_esql_rule_request'
              createEsQueryRuleIdRequest:
                $ref: '#/components/examples/create_es_query_rule_request'
              createEsQueryKqlRuleIdRequest:
                $ref: '#/components/examples/create_es_query_kql_rule_request'
              createIndexThreholdRuleIdRequest:
                $ref: '#/components/examples/create_index_threshold_rule_request'
            schema:
              $ref: '#/components/schemas/create_rule_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                createEsQueryEsqlRuleIdResponse:
                  $ref: '#/components/examples/create_es_query_esql_rule_response'
                createEsQueryRuleIdResponse:
                  $ref: '#/components/examples/create_es_query_rule_response'
                createEsQueryKqlRuleIdResponse:
                  $ref: '#/components/examples/create_es_query_kql_rule_response'
                createIndexThresholdRuleIdResponse:
                  $ref: '#/components/examples/create_index_threshold_rule_response'
              schema:
                $ref: '#/components/schemas/rule_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
          description: Object is not found.
      summary: Creates a rule with a specific rule identifier.
      tags:
      - alerting
    put:
      description: |
        To update a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule you're updating. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs. NOTE: If the API key has different privileges than the key that created or most recently updated the rule, the rule behavior might change. Though some properties are optional, when you update the rule the existing property values are overwritten with default values. Therefore, it is recommended to explicitly set all property values.
      operationId: updateRule
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/rule_id'
      - $ref: '#/components/parameters/space_id'
      requestBody:
        content:
          application/json:
            examples:
              updateRuleRequest:
                $ref: '#/components/examples/update_rule_request'
            schema:
              $ref: '#/components/schemas/update_rule_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                updateRuleResponse:
                  $ref: '#/components/examples/update_rule_response'
              schema:
                $ref: '#/components/schemas/rule_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
          description: Object is not found.
      summary: Updates the attributes for a rule.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/rule/{ruleId}/_disable:
    post:
      description: |
        You must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features.
      operationId: disableRule
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/rule_id'
      - $ref: '#/components/parameters/space_id'
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
          description: Object is not found.
      summary: Disables a rule.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/rule/{ruleId}/_enable:
    post:
      description: |
        To enable a rule, you must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. This API supports both key- and token-based authentication. To use key-based authentication, create an API key in Kibana and use it in the header of the API call. To use token-based authentication, provide a username and password; an API key that matches the current privileges of the user is created automatically. In both cases, the API key is subsequently used for authorization when the rule runs.
      operationId: enableRule
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/rule_id'
      - $ref: '#/components/parameters/space_id'
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Object is not found.
      summary: Enables a rule.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/rules/_find:
    get:
      description: |
        You must have `read` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rules you're seeking. For example, you must have privileges for the **Management > Stack rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, or **Security** features. To find rules associated with the **Stack Monitoring** feature, use the `monitoring_user` built-in role.
      operationId: findRules
      parameters:
      - $ref: '#/components/parameters/space_id'
      - description: The default operator to use for the simple_query_string.
        explode: true
        in: query
        name: default_search_operator
        required: false
        schema:
          default: OR
          type: string
        style: form
      - description: The fields to return in the `attributes` key of the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          A KQL string that you filter with an attribute from your saved object. It should look like `savedObjectType.attributes.title: "myTitle"`. However, if you used a direct attribute of a saved object, such as `updatedAt`, you must define your filter, for example, `savedObjectType.updatedAt > 2018-12-22`.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Filters the rules that have a relation with the reference objects
          with a specific type and identifier.
        explode: true
        in: query
        name: has_reference
        required: false
        schema:
          $ref: '#/components/schemas/findRules_has_reference_parameter'
        style: form
      - description: The page number to return.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: The number of rules to return per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: An Elasticsearch simple_query_string query that filters the objects
          in the response.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: The fields to perform the simple_query_string parsed query against.
        explode: true
        in: query
        name: search_fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          Determines which field is used to sort the results. The field must exist in the `attributes` key of the response.
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          type: string
        style: form
      - description: Determines the sort order.
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                findRulesResponse:
                  $ref: '#/components/examples/find_rules_response'
                findConditionalActionRulesResponse:
                  $ref: '#/components/examples/find_rules_response_conditional_action'
              schema:
                $ref: '#/components/schemas/findRules_200_response'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Retrieves information about rules.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/_health:
    get:
      description: |
        You must have `read` privileges for the **Management > Stack Rules** feature or for at least one of the **Analytics > Discover**, **Analytics > Machine Learning**, **Observability**, or **Security** features.
      operationId: getAlertingHealth
      parameters:
      - $ref: '#/components/parameters/space_id'
      responses:
        "200":
          content:
            application/json:
              examples:
                getAlertingHealthResponse:
                  $ref: '#/components/examples/get_health_response'
              schema:
                $ref: '#/components/schemas/getAlertingHealth_200_response'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Retrieves the health status of the alerting framework.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/rule_types:
    get:
      description: |
        If you have `read` privileges for one or more Kibana features, the API response contains information about the appropriate rule types. For example, there are rule types associated with the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability** features, and **Security** features. To get rule types associated with the **Stack Monitoring** feature, use the `monitoring_user` built-in role.
      operationId: getRuleTypes
      parameters:
      - $ref: '#/components/parameters/space_id'
      responses:
        "200":
          content:
            application/json:
              examples:
                getRuleTypesResponse:
                  $ref: '#/components/examples/get_rule_types_response'
              schema:
                items:
                  $ref: '#/components/schemas/getRuleTypes_200_response_inner'
                type: array
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Retrieves a list of rule types.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/rule/{ruleId}/_mute_all:
    post:
      description: |
        This API snoozes the notifications for the rule indefinitely. The rule checks continue to occur but alerts will not trigger any actions. You must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature.
      operationId: muteAllAlerts
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/rule_id'
      - $ref: '#/components/parameters/space_id'
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Mutes all alerts.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/rule/{ruleId}/_unmute_all:
    post:
      description: |
        If the rule has its notifications snoozed indefinitely, this API cancels the snooze. You must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature.
      operationId: unmuteAllAlerts
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/rule_id'
      - $ref: '#/components/parameters/space_id'
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Unmutes all alerts.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/rule/{ruleId}/_update_api_key:
    post:
      description: The new API key has the credentials of the user that submits the
        request.
      operationId: updateRuleAPIKey
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/rule_id'
      - $ref: '#/components/parameters/space_id'
      responses:
        "200":
          description: Indicates a successful call.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400_response'
          description: Bad request
      summary: Updates the API key for a rule.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_mute:
    post:
      description: |
        You must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature.
      operationId: muteAlert
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/alert_id'
      - $ref: '#/components/parameters/rule_id'
      - $ref: '#/components/parameters/space_id'
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Mutes an alert.
      tags:
      - alerting
  /s/{spaceId}/api/alerting/rule/{ruleId}/alert/{alertId}/_unmute:
    post:
      description: |
        You must have `all` privileges for the appropriate Kibana features, depending on the `consumer` and `rule_type_id` of the rule. For example, the **Management > Stack Rules** feature, **Analytics > Discover** and **Machine Learning** features, **Observability**, and **Security** features. If the rule has actions, you must also have `read` privileges for the **Management > Actions and Connectors** feature.
      operationId: unmuteAlert
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/alert_id'
      - $ref: '#/components/parameters/rule_id'
      - $ref: '#/components/parameters/space_id'
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Unmutes an alert.
      tags:
      - alerting
  /s/{spaceId}/api/alerts/alert/{alertId}:
    delete:
      deprecated: true
      description: |
        Deprecated in 7.13.0. Use the delete rule API instead. WARNING: After you delete an alert, you cannot recover it.
      operationId: legaryDeleteAlert
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/space_id'
      - description: The identifier for the alert.
        explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Permanently removes an alert.
      tags:
      - alerting
    get:
      deprecated: true
      description: Deprecated in 7.13.0. Use the get rule API instead.
      operationId: legacyGetAlert
      parameters:
      - $ref: '#/components/parameters/space_id'
      - description: The identifier for the alert.
        explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Retrieves an alert by its identifier.
      tags:
      - alerting
    post:
      deprecated: true
      description: Deprecated in 7.13.0. Use the create rule API instead.
      operationId: legacyCreateAlert
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - description: "An UUID v1 or v4 identifier for the alert. If this parameter\
          \ is omitted, the identifier is randomly generated."
        explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      - $ref: '#/components/parameters/space_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Legacy_create_alert_request_properties'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Create an alert.
      tags:
      - alerting
    put:
      deprecated: true
      description: Deprecated in 7.13.0. Use the update rule API instead.
      operationId: legacyUpdateAlert
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/space_id'
      - description: The identifier for the alert.
        explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Legacy_update_alert_request_properties'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alert_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Updates the attributes for an alert.
      tags:
      - alerting
  /s/{spaceId}/api/alerts/alert/{alertId}/_disable:
    post:
      deprecated: true
      description: Deprecated in 7.13.0. Use the disable rule API instead.
      operationId: legacyDisableAlert
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/space_id'
      - description: The identifier for the alert.
        explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Disables an alert.
      tags:
      - alerting
  /s/{spaceId}/api/alerts/alert/{alertId}/_enable:
    post:
      deprecated: true
      description: Deprecated in 7.13.0. Use the enable rule API instead.
      operationId: legacyEnableAlert
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/space_id'
      - description: The identifier for the alert.
        explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Enables an alert.
      tags:
      - alerting
  /s/{spaceId}/api/alerts/alert/{alertId}/_mute_all:
    post:
      deprecated: true
      description: Deprecated in 7.13.0. Use the mute all alerts API instead.
      operationId: legacyMuteAllAlertInstances
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/space_id'
      - description: The identifier for the alert.
        explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Mutes all alert instances.
      tags:
      - alerting
  /s/{spaceId}/api/alerts/alert/{alertId}/_unmute_all:
    post:
      deprecated: true
      description: Deprecated in 7.13.0. Use the unmute all alerts API instead.
      operationId: legacyUnmuteAllAlertInstances
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/space_id'
      - description: The identifier for the alert.
        explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Unmutes all alert instances.
      tags:
      - alerting
  /s/{spaceId}/api/alerts/alerts/_find:
    get:
      deprecated: true
      description: |
        Deprecated in 7.13.0. Use the find rules API instead. NOTE: Alert `params` are stored as a flattened field type and analyzed as keywords. As alerts change in Kibana, the results on each page of the response also change. Use the find API for traditional paginated results, but avoid using it to export large amounts of data.
      operationId: legacyFindAlerts
      parameters:
      - $ref: '#/components/parameters/space_id'
      - description: The default operator to use for the `simple_query_string`.
        explode: true
        in: query
        name: default_search_operator
        required: false
        schema:
          default: OR
          type: string
        style: form
      - description: The fields to return in the `attributes` key of the response.
        explode: true
        in: query
        name: fields
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |
          A KQL string that you filter with an attribute from your saved object. It should look like `savedObjectType.attributes.title: "myTitle"`. However, if you used a direct attribute of a saved object, such as `updatedAt`, you must define your filter, for example, `savedObjectType.updatedAt > 2018-12-22`.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Filters the rules that have a relation with the reference objects
          with a specific type and identifier.
        explode: true
        in: query
        name: has_reference
        required: false
        schema:
          $ref: '#/components/schemas/findRules_has_reference_parameter'
        style: form
      - description: The page number to return.
        explode: true
        in: query
        name: page
        required: false
        schema:
          default: 1
          type: integer
        style: form
      - description: The number of alerts to return per page.
        explode: true
        in: query
        name: per_page
        required: false
        schema:
          default: 20
          type: integer
        style: form
      - description: An Elasticsearch `simple_query_string` query that filters the
          alerts in the response.
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: The fields to perform the `simple_query_string` parsed query
          against.
        explode: true
        in: query
        name: search_fields
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - description: |
          Determines which field is used to sort the results. The field must exist in the `attributes` key of the response.
        explode: true
        in: query
        name: sort_field
        required: false
        schema:
          type: string
        style: form
      - description: Determines the sort order.
        explode: true
        in: query
        name: sort_order
        required: false
        schema:
          default: desc
          enum:
          - asc
          - desc
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacyFindAlerts_200_response'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Retrieves a paginated set of alerts.
      tags:
      - alerting
  /s/{spaceId}/api/alerts/alerts/_health:
    get:
      deprecated: true
      description: Deprecated in 7.13.0. Use the get alerting framework health API
        instead.
      operationId: legacyGetAlertingHealth
      parameters:
      - $ref: '#/components/parameters/space_id'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacyGetAlertingHealth_200_response'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Retrieves the health status of the alerting framework.
      tags:
      - alerting
  /s/{spaceId}/api/alerts/alerts/list_alert_types:
    get:
      deprecated: true
      description: Deprecated in 7.13.0. Use the get rule types API instead.
      operationId: legacyGetAlertTypes
      parameters:
      - $ref: '#/components/parameters/space_id'
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/legacyGetAlertTypes_200_response_inner'
                type: array
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Retrieves a list of alert types.
      tags:
      - alerting
  /s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_mute:
    post:
      deprecated: true
      description: Deprecated in 7.13.0. Use the mute alert API instead.
      operationId: legacyMuteAlertInstance
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/space_id'
      - description: An identifier for the alert.
        explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      - description: An identifier for the alert instance.
        explode: false
        in: path
        name: alertInstanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Mutes an alert instance.
      tags:
      - alerting
  /s/{spaceId}/api/alerts/alert/{alertId}/alert_instance/{alertInstanceId}/_unmute:
    post:
      deprecated: true
      description: Deprecated in 7.13.0. Use the unmute alert API instead.
      operationId: legacyUnmuteAlertInstance
      parameters:
      - $ref: '#/components/parameters/kbn_xsrf'
      - $ref: '#/components/parameters/space_id'
      - description: An identifier for the alert.
        explode: false
        in: path
        name: alertId
        required: true
        schema:
          type: string
        style: simple
      - description: An identifier for the alert instance.
        explode: false
        in: path
        name: alertInstanceId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      summary: Unmutes an alert instance.
      tags:
      - alerting
components:
  examples:
    create_es_query_esql_rule_request:
      summary: Create an Elasticsearch query rule that uses Elasticsearch Query Language
        (ES|QL).
      value:
        name: my Elasticsearch query ESQL rule
        params:
          searchType: esqlQuery
          esqlQuery:
            esql: "FROM kibana_sample_data_logs | KEEP bytes, clientip, host, geo.dest\
              \ | where geo.dest != \"GB\" | STATS sumbytes = sum(bytes) by clientip,\
              \ host | WHERE sumbytes > 5000 | SORT sumbytes desc | LIMIT 10"
          timeField: '@timestamp'
          timeWindowSize: 1
          timeWindowUnit: d
          size: 0
          thresholdComparator: '>'
          threshold:
          - 0
        consumer: stackAlerts
        rule_type_id: .es-query
        schedule:
          interval: 1d
        actions:
        - group: query matched
          id: d0db1fe0-78d6-11ee-9177-f7d404c8c945
          params:
            level: info
            message: |-
              Elasticsearch query rule '{{rule.name}}' is active:
              - Value: {{context.value}} - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}} - Timestamp: {{context.date}} - Link: {{context.link}}
          frequency:
            summary: false
            notify_when: onActiveAlert
    create_es_query_rule_request:
      summary: Create an Elasticsearch query rule that uses Elasticsearch query domain
        specific language (DSL) to define its query and a server log connector to
        send notifications.
      value:
        actions:
        - group: query matched
          params:
            level: info
            message: "The system has detected {{alerts.new.count}} new, {{alerts.ongoing.count}}\
              \ ongoing, and {{alerts.recovered.count}} recovered alerts."
          id: fdbece50-406c-11ee-850e-c71febc4ca7f
          frequency:
            throttle: 1d
            summary: true
            notify_when: onThrottleInterval
        - group: recovered
          params:
            level: info
            message: Recovered
          id: fdbece50-406c-11ee-850e-c71febc4ca7f
          frequency:
            summary: false
            notify_when: onActionGroupChange
        consumer: alerts
        name: my Elasticsearch query rule
        params:
          esQuery: "\"\"\"{\"query\":{\"match_all\" : {}}}\"\"\""
          index:
          - kibana_sample_data_logs
          size: 100
          threshold:
          - 100
          thresholdComparator: '>'
          timeField: '@timestamp'
          timeWindowSize: 1
          timeWindowUnit: d
        rule_type_id: .es-query
        schedule:
          interval: 1d
    create_es_query_kql_rule_request:
      summary: Create an Elasticsearch query rule that uses Kibana query language
        (KQL).
      value:
        consumer: alerts
        name: my Elasticsearch query KQL rule
        params:
          aggType: count
          excludeHitsFromPreviousRun: true
          groupBy: all
          searchConfiguration:
            query:
              query: "\"\"geo.src : \"US\" \"\""
              language: kuery
            index: 90943e30-9a47-11e8-b64d-95841ca0b247
          searchType: searchSource
          size: 100
          threshold:
          - 1000
          thresholdComparator: '>'
          timeWindowSize: 5
          timeWindowUnit: m
        rule_type_id: .es-query
        schedule:
          interval: 1m
    create_index_threshold_rule_request:
      summary: Create an index threshold rule.
      value:
        actions:
        - id: 48de3460-f401-11ed-9f8e-399c75a2deeb
          frequency:
            notify_when: onActionGroupChange
            summary: false
          group: threshold met
          params:
            level: info
            message: |-
              Rule '{{rule.name}}' is active for group '{{context.group}}':

              - Value: {{context.value}}
              - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
              - Timestamp: {{context.date}}
        alert_delay:
          active: 3
        consumer: alerts
        name: my rule
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: '>'
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
          - 1000
          index:
          - .test-index
          timeField: '@timestamp'
          aggField: sheet.version
          termField: name.keyword
        rule_type_id: .index-threshold
        schedule:
          interval: 1m
        tags:
        - cpu
    create_tracking_containment_rule_request:
      summary: Create a tracking containment rule.
      value:
        consumer: alerts
        name: my tracking rule
        params:
          index: kibana_sample_data_logs
          dateField": '@timestamp'
          geoField: geo.coordinates
          entity: agent.keyword
          boundaryType: entireIndex
          boundaryIndexTitle: boundary*
          boundaryGeoField: location
          boundaryNameField: name
          indexId: 90943e30-9a47-11e8-b64d-95841ca0b247
          boundaryIndexId: 0cd90abf-abe7-44c7-909a-f621bbbcfefc
        rule_type_id: .geo-containment
        schedule:
          interval: 1h
    create_es_query_esql_rule_response:
      summary: The create rule API returns a JSON object that contains details about
        the rule.
      value:
        id: e0d62360-78e8-11ee-9177-f7d404c8c945
        enabled: true
        name: my Elasticsearch query ESQL rule
        tags: []
        rule_type_id: .es-query
        consumer: stackAlerts
        schedule:
          interval: 1d
        actions:
        - group: query matched
          id: d0db1fe0-78d6-11ee-9177-f7d404c8c945
          params:
            level: info
            message: |-
              Elasticsearch query rule '{{rule.name}}' is active:
              - Value: {{context.value}} - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}} - Timestamp: {{context.date}} - Link: {{context.link}}
          connector_type_id: .server-log
          frequency:
            summary: false
            notify_when: onActiveAlert
            throttle: null
          uuid: bfe370a3-531b-4855-bbe6-ad739f578844
        params:
          searchType: esqlQuery
          esqlQuery:
            esql: "FROM kibana_sample_data_logs | keep bytes, clientip, host, geo.dest\
              \ | WHERE geo.dest != \"GB\" | stats sumbytes = sum(bytes) by clientip,\
              \ host | WHERE sumbytes > 5000 | sort sumbytes desc | limit 10"
          timeField: '@timestamp'
          timeWindowSize: 1
          timeWindowUnit: d
          size: 0
          thresholdComparator: '>'
          threshold:
          - 0
          excludeHitsFromPreviousRun": "true,"
          aggType: count
          groupBy: all
        scheduled_task_id: e0d62360-78e8-11ee-9177-f7d404c8c945
        created_by: elastic
        updated_by: "elastic\","
        created_at: 2023-11-01T19:00:10.453Z
        updated_at: 2023-11-01T19:00:10.453Z
        api_key_owner: elastic
        api_key_created_by_user: false
        throttle: null
        mute_all: false
        notify_when: null
        muted_alert_ids: []
        execution_status:
          status: pending
          last_execution_date: 2023-11-01T19:00:10.453Z
        revision: 0
        running: false
    create_es_query_rule_response:
      summary: The create rule API returns a JSON object that contains details about
        the rule.
      value:
        id: 58148c70-407f-11ee-850e-c71febc4ca7f
        enabled: true
        name: my Elasticsearch query rule
        tags: []
        rule_type_id: .es-query
        consumer: alerts
        schedule:
          interval: 1d
        actions:
        - group: query matched
          id: fdbece50-406c-11ee-850e-c71febc4ca7f
          params:
            level: info
            message: "The system has detected {{alerts.new.count}} new, {{alerts.ongoing.count}}\
              \ ongoing, and {{alerts.recovered.count}} recovered alerts."
          connector_type_id: .server-log
          frequency:
            summary: true
            notify_when: onThrottleInterval
            throttle: 1d
          uuid: 53f3c2a3-e5d0-4cfa-af3b-6f0881385e78
        - group: recovered
          id: fdbece50-406c-11ee-850e-c71febc4ca7f
          params:
            level: info
            message: Recovered
          connector_type_id: .server-log
          frequency:
            summary: false
            notify_when: onActionGroupChange
            throttle: null
          uuid: 2324e45b-c0df-45c7-9d70-4993e30be758
        params:
          thresholdComparator: '>'
          timeWindowSize: 1
          timeWindowUnit: d
          threshold:
          - 100
          size: 100
          timeField: '@timestamp'
          index:
          - kibana_sample_data_logs
          esQuery: "\"\"\"{\"query\":{\"match_all\" : {}}}\"\"\""
          excludeHitsFromPreviousRun: true
          aggType: count
          groupBy: all
          searchType: esQuery
        scheduled_task_id: 58148c70-407f-11ee-850e-c71febc4ca7f
        created_by: elastic
        updated_by: elastic
        created_at: 2023-08-22T00:03:38.263Z
        updated_at: 2023-08-22T00:03:38.263Z
        api_key_owner: elastic
        api_key_created_by_user: false
        throttle: null
        mute_all: false
        notify_when: null
        muted_alert_ids: []
        execution_status:
          status: pending
          last_execution_date: 2023-08-22T00:03:38.263Z
        revision: 0
        running: false
    create_es_query_kql_rule_response:
      summary: The create rule API returns a JSON object that contains details about
        the rule.
      value:
        id: 7bd506d0-2284-11ee-8fad-6101956ced88
        enabled: true
        name: my Elasticsearch query KQL rule"
        tags: []
        rule_type_id: .es-query
        consumer: alerts
        schedule:
          interval: 1m
        actions: []
        params:
          searchConfiguration:
            query:
              query: "\"\"geo.src : \"US\" \"\""
              language: kuery
            index: 90943e30-9a47-11e8-b64d-95841ca0b247
          searchType: searchSource
          timeWindowSize: 5
          timeWindowUnit: m
          threshold:
          - 1000
          thresholdComparator: '>'
          size: 100
          aggType: count
          groupBy: all
          excludeHitsFromPreviousRun: true
        created_by: elastic
        updated_by: elastic
        created_at: 2023-07-14T20:24:50.729Z
        updated_at: 2023-07-14T20:24:50.729Z
        api_key_owner: elastic
        api_key_created_by_user: false
        throttle: null
        notify_when: null
        mute_all: false
        muted_alert_ids: []
        scheduled_task_id: 7bd506d0-2284-11ee-8fad-6101956ced88
        execution_status:
          status: pending
          last_execution_date: 2023-07-14T20:24:50.729Z
        revision: 0
        running: false
    create_index_threshold_rule_response:
      summary: The create rule API returns a JSON object that contains details about
        the rule.
      value:
        actions:
        - group: threshold met
          id: dceeb5d0-6b41-11eb-802b-85b0c1bc8ba2
          uuid: 07aef2a0-9eed-4ef9-94ec-39ba58eb609d
          connector_type_id: .server-log
          frequency:
            notify_when: onActionGroupChange
            summary: false
            throttle: null
          params:
            level: info
            message: |-
              Rule {{rule.name}} is active for group {{context.group} :

              - Value: {{context.value}}
              - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
              - Timestamp: {{context.date}}
        alert_delay:
          active: 3
        api_key_created_by_user: false
        api_key_owner: elastic
        consumer: alerts
        created_at: 2022-06-08T17:20:31.632Z
        created_by: elastic
        enabled: true
        execution_status:
          last_execution_date: 2022-06-08T17:20:31.632Z
          status: pending
        id: 41893910-6bca-11eb-9e0d-85d233e3ee35
        muted_alert_ids: []
        mute_all: false
        name: my rule
        notify_when: null
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: '>'
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
          - 1000
          index:
          - .test-index
          timeField: '@timestamp'
          aggField: sheet.version
          termField: name.keyword
        revision: 0
        rule_type_id: .index-threshold
        running: false
        schedule:
          interval: 1m
        scheduled_task_id: 425b0800-6bca-11eb-9e0d-85d233e3ee35
        tags:
        - cpu
        throttle: null
        updated_at: 2022-06-08T17:20:31.632Z
        updated_by: elastic
    create_tracking_containment_rule_response:
      summary: The create rule API returns a JSON object that contains details about
        the rule.
      value:
        id: b6883f9d-5f70-4758-a66e-369d7c26012f
        name: my tracking rule
        tags: []
        enabled: true
        consumer: alerts
        throttle: null
        revision: 1
        running: false
        schedule:
          interval: 1h
        params:
          index: kibana_sample_data_logs
          dateField: '@timestamp'
          geoField: geo.coordinates
          entity: agent.keyword
          boundaryType: entireIndex
          boundaryIndexTitle: boundary*
          boundaryGeoField: location
          boundaryNameField: name
          indexId: 90943e30-9a47-11e8-b64d-95841ca0b247
          boundaryIndexId: 0cd90abf-abe7-44c7-909a-f621bbbcfefc
        rule_type_id: .geo-containment
        created_by: elastic
        updated_by: elastic
        created_at: 2024-02-14T19:52:55.920Z
        updated_at: 2024-02-15T03:24:32.574Z
        api_key_owner: elastic
        notify_when: null
        mute_all: false
        muted_alert_ids: []
        scheduled_task_id: b6883f9d-5f70-4758-a66e-369d7c26012f
        execution_status:
          status: ok
          last_execution_date: 2024-02-15T03:25:38.125Z
          last_duration: 74
        actions: []
        last_run:
          alerts_count:
            active: 0
            new: 0
            recovered: 0
            ignored: 0
          outcome_msg: null
          outcome_order: 0
          outcome: succeeded
          warning: null
        next_run: 2024-02-15T03:26:38.033Z
        api_key_created_by_user: false
    get_rule_response:
      summary: The get rule API returns a JSON object that contains details about
        the rule.
      value:
        id: 31697a40-7b36-11ed-aa79-f742c05329b2
        consumer: alerts
        tags:
        - cpu
        name: my alert
        enabled: true
        throttle: null
        schedule:
          interval: 1m
        params:
          aggType: avg
          termSize: 6
          thresholdComparator: '>'
          timeWindowSize: 5
          timeWindowUnit: m
          groupBy: top
          threshold:
          - 1000
          index:
          - test-index
          timeField: '@timestamp'
          aggField: sheet.version
          termField: name.keyword
        revision: 1
        rule_type_id: .index-threshold
        created_by: elastic
        updated_by: elastic
        created_at: 2022-12-13T22:33:41.163Z
        updated_at: 2022-12-13T22:33:41.163Z
        api_key_owner: elastic
        notify_when: null
        muted_alert_ids: []
        mute_all: false
        scheduled_task_id: 31697a40-7b36-11ed-aa79-f742c05329b2
        execution_status:
          status: ok
          last_execution_date: 2022-12-13T22:33:44.388Z
          last_duration: 83
        actions:
        - group: threshold met
          id: 1007a0c0-7a6e-11ed-89d5-abec321c0def
          uuid: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
          params:
            level: info
            message: |-
              Rule {{rule.name}} is active for group {{context.group}}:

              - Value: {{context.value}}
              - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
              - Timestamp: {{context.date}
            connector_type_id: .server-log
          connector_type_id: .server-log
          frequency:
            throttle: null
            summary: false
            notify_when: onActionGroupChange
        last_run:
          alerts_count:
            new: 0
            ignored: 0
            recovered: 0
            active: 0
          outcome_msg: null
          warning: null
          outcome: succeeded
        next_run: 2022-12-13T22:34:44.314Z
        api_key_created_by_user: false
    update_rule_request:
      summary: Update an index threshold rule.
      value:
        actions:
        - frequency:
            summary: false
            notify_when: onActionGroupChange
          group: threshold met
          id: 96b668d0-a1b6-11ed-afdf-d39a49596974
          params:
            level: info
            message: |-
              Rule {{rule.name}} is active for group {{context.group}}:

              - Value: {{context.value}}
              - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
              - Timestamp: {{context.date}}
        params:
          aggField: sheet.version
          aggType: avg
          index:
          - .updated-index
          groupBy: top
          termField: name.keyword
          termSize: 6
          threshold:
          - 1000
          thresholdComparator: '>'
          timeField: '@timestamp'
          timeWindowSize: 5
          timeWindowUnit: m
        name: new name
        schedule:
          interval: 1m
        tags: []
    update_rule_response:
      summary: The update rule API returns a JSON object that contains details about
        the rule.
      value:
        id: ac4e6b90-6be7-11eb-ba0d-9b1c1f912d74
        consumer: alerts
        tags: []
        name: new name
        enabled: true
        throttle: null
        revision: 1
        running: false
        schedule:
          interval: 1m
        params:
          index:
          - .updated-index
          timeField: '@timestamp'
          groupBy: top
          aggType: avg
          timeWindowSize: 5
          timeWindowUnit: m
          thresholdComparator: '>'
          threshold:
          - 1000
          aggField: sheet.version
          termField: name.keyword
          termSize: 6
        api_key_owner: elastic
        created_by: elastic
        updated_by: elastic
        rule_type_id: .index-threshold
        scheduled_task_id: 4c5eda00-e74f-11ec-b72f-5b18752ff9ea
        created_at: 2024-03-26T23:13:20.985Z
        updated_at: 2024-03-26T23:22:59.949Z
        mute_all: false
        muted_alert_ids: []
        execution_status:
          status: ok
          last_execution_date: 2024-03-26T23:22:51.390Z
          last_duration: 52
        actions:
        - group: threshold met
          params:
            level: info
            message: |-
              Rule {{rule.name}} is active for group {{context.group}}:

              - Value: {{context.value}}
              - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
              - Timestamp: {{context.date}
          id: 96b668d0-a1b6-11ed-afdf-d39a49596974
          uuid: 07aef2a0-9eed-4ef9-94ec-39ba58eb609d
          connector_type_id: .server-log
          frequency:
            summary: false
            throttle: null
            notify_when: onActionGroupChange
        last_run:
          alerts_count:
            new: 0
            ignored: 0
            recovered: 0
            active: 0
          outcome_msg: null
          warning: null
          outcome: succeeded
        next_run: 2024-03-26T23:23:51.316Z
        api_key_created_by_user: false
    find_rules_response:
      summary: Retrieve information about a rule.
      value:
        page: 1
        total: 1
        per_page: 10
        data:
        - id: 3583a470-74f6-11ed-9801-35303b735aef
          consumer: alerts
          tags:
          - cpu
          name: my alert
          enabled: true
          throttle: null
          schedule:
            interval: 1m
          params:
            aggType: avg
            termSize: 6
            thresholdComparator: '>'
            timeWindowSize: 5
            timeWindowUnit: m
            groupBy: top
            threshold:
            - 1000
            index:
            - test-index
            timeField: '@timestamp'
            aggField: sheet.version
            termField: name.keyword
          revision: 1
          rule_type_id: .index-threshold
          created_by: elastic
          updated_by: elastic
          created_at: 2022-12-05T23:40:33.132Z
          updated_at: 2022-12-05T23:40:33.132Z
          api_key_owner: elastic
          mute_all: false
          muted_alert_ids: []
          scheduled_task_id: 3583a470-74f6-11ed-9801-35303b735aef
          execution_status:
            status: ok
            last_execution_date: 2022-12-06T01:44:23.983Z
            last_duration: 48
          actions:
          - id: 9dca3e00-74f5-11ed-9801-35303b735aef
            group: threshold met
            uuid: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
            params:
              level: info
              message: |-
                Rule {{rule.name}} is active for group {{context.group}}:

                - Value: {{context.value}}
                - Conditions Met: {{context.conditions}} over {{rule.params.timeWindowSize}}{{rule.params.timeWindowUnit}}
                - Timestamp: {{context.date}}
              connector_type_id: .server-log
            frequency:
              summary: false
              notify_when: onActionGroupChange
              throttle: null
          last_run:
            alerts_count:
              new: 0
              ignored: 0
              recovered: 0
              active: 0
            outcome_msg: null
            warning: null
            outcome: succeeded
          next_run: 2022-12-06T01:45:23.912Z
          api_key_created_by_user: false
    find_rules_response_conditional_action:
      summary: Retrieve information about a rule that has conditional actions.
      value:
        page: 1
        total: 1
        per_page: 10
        data:
        - id: 6107a8f0-f401-11ed-9f8e-399c75a2deeb
          name: security_rule
          consumer: siem
          enabled: true
          tags: []
          throttle: null
          revision: 1
          running: false
          schedule:
            interval: 1m
          params:
            author: []
            description: A security threshold rule.
            ruleId: an_internal_rule_id
            falsePositives: []
            from: now-3660s
            immutable: false
            license: ""
            outputIndex: ""
            meta:
              from: 1h
              kibana_siem_app_url: https://localhost:5601/app/security
            maxSignals: 100
            riskScore: 21
            riskScoreMapping: []
            severity: low
            severityMapping: []
            threat: []
            to: now
            references: []
            version: 1
            exceptionsList: []
            type: threshold
            language: kuery
            index:
            - kibana_sample_data_logs
            query: '*'
            filters: []
            threshold:
              field:
              - bytes
              value: 1
              cardinality: []
          rule_type_id: siem.thresholdRule
          created_by: elastic
          updated_by: elastic
          created_at: 2023-05-16T15:50:28.358Z
          updated_at: 2023-05-16T20:25:42.559Z
          api_key_owner: elastic
          notify_when: null
          mute_all: false
          muted_alert_ids: []
          scheduled_task_id: 6107a8f0-f401-11ed-9f8e-399c75a2deeb
          execution_status:
            status: ok
            last_execution_date: 2023-05-16T20:26:49.590Z
            last_duration: 166
          actions:
          - group: default
            id: 49eae970-f401-11ed-9f8e-399c75a2deeb
            params:
              documents:
              - rule_id:
                  '[object Object]': null
                rule_name:
                  '[object Object]': null
                alert_id:
                  '[object Object]': null
                context_message:
                  '[object Object]': null
            connector_type_id: .index
            frequency:
              summary: true
              notify_when: onActiveAlert
              throttle: null
            uuid: 1c7a1280-f28c-4e06-96b2-e4e5f05d1d61
            alerts_filter:
              timeframe:
                days:
                - 7
                timezone: UTC
                hours:
                  start: 08:00
                  end: 17:00
              query:
                kql: ""
                filters:
                - meta:
                    disabled: false
                    negate: false
                    alias: null
                    index: c4bdca79-e69e-4d80-82a1-e5192c621bea
                    key: client.geo.region_iso_code
                    field: client.geo.region_iso_code
                    params:
                      query: CA-QC
                      type: phrase
                  $state:
                    store: appState
                  query:
                    match_phrase:
                      client.geo.region_iso_code: CA-QC
          last_run:
            alerts_count:
              new: 0
              ignored: 0
              recovered: 0
              active: 0
            outcome_msg:
            - Rule execution completed successfully
            outcome_order: 0
            warning: null
            outcome: succeeded
          next_run: 2023-05-16T20:27:49.507Z
          api_key_created_by_user: false
    get_health_response:
      summary: Retrieve information about the health of the alerting framework.
      value:
        is_sufficiently_secure: true
        has_permanent_encryption_key: true
        alerting_framework_health:
          decryption_health:
            status: ok
            timestamp: 2023-01-13T01:28:00.280Z
          execution_health:
            status: ok
            timestamp: 2023-01-13T01:28:00.280Z
          read_health:
            status: ok
            timestamp: 2023-01-13T01:28:00.280Z
    get_rule_types_response:
      summary: Retrieve rule types associated with Kibana machine learning features
      value:
      - id: xpack.ml.anomaly_detection_alert
        name: Anomaly detection alert
        category: management
        producer: ml
        alerts:
          context: ml.anomaly-detection
          mappings:
            fieldMap:
              kibana.alert.job_id:
                type: keyword
                array: false
                required: true
              kibana.alert.anomaly_score:
                type: double
                array: false
                required: false
              kibana.alert.is_interim:
                type: boolean
                array: false
                required: false
              kibana.alert.anomaly_timestamp:
                type: date
                array: false
                required: false
              kibana.alert.top_records:
                type: object
                array: true
                required: false
                dynamic: false
                properties:
                  job_id:
                    type: keyword
                  record_score:
                    type: double
                  initial_record_score:
                    type: double
                  detector_index:
                    type: integer
                  is_interim:
                    type: boolean
                  timestamp:
                    type: date
                  partition_field_name:
                    type: keyword
                  partition_field_value:
                    type: keyword
                  over_field_name:
                    type: keyword
                  over_field_value:
                    type: keyword
                  by_field_name:
                    type: keyword
                  by_field_value:
                    type: keyword
                  function:
                    type: keyword
                  typical:
                    type: double
                  actual:
                    type: double
                  field_name:
                    type: keyword
              kibana.alert.top_influencers:
                type: object
                array: true
                required: false
                dynamic: false
                properties:
                  job_id:
                    type: keyword
                  influencer_field_name:
                    type: keyword
                  influencer_field_value:
                    type: keyword
                  influencer_score:
                    type: double
                  initial_influencer_score:
                    type: double
                  is_interim:
                    type: boolean
                  timestamp:
                    type: date
          shouldWrite: true
        enabled_in_license: true
        recovery_action_group:
          id: recovered
          name: Recovered
        action_groups:
        - id: anomaly_score_match
          name: Anomaly score matched the condition
        - id: recovered
          name: Recovered
        default_action_group_id: anomaly_score_match
        minimum_license_required: platinum
        is_exportable: true
        rule_task_timeout: 5m
        action_variables:
          context:
          - name: timestamp
            description: The bucket timestamp of the anomaly
          - name: timestampIso8601
            description: The bucket time of the anomaly in ISO8601 format
          - name: jobIds
            description: List of job IDs that triggered the alert
          - name: message
            description: Alert info message
          - name: isInterim
            description: Indicate if top hits contain interim results
          - name: score
            description: Anomaly score at the time of the notification action
          - name: topRecords
            description: Top records
          - name: topInfluencers
            description: Top influencers
          - name: anomalyExplorerUrl
            description: URL to open in the Anomaly Explorer
            useWithTripleBracesInTemplates: true
          state: []
          params: []
        authorized_consumers:
          alerts:
            read: true
            all: true
          stackAlerts:
            read: true
            all: true
          slo:
            read: true
            all: true
          ml:
            read: true
            all: true
          uptime:
            read: true
            all: true
          infrastructure:
            read: true
            all: true
          logs:
            read: true
            all: true
          monitoring:
            read: true
            all: true
          siem:
            read: true
            all: true
          apm:
            read: true
            all: true
          discover:
            read: true
            all: true
        does_set_recovery_context: true
        has_alerts_mappings: true
        has_fields_for_a_a_d: false
      - id: xpack.ml.anomaly_detection_jobs_health
        name: Anomaly detection jobs health
        category: management
        producer: ml
        enabled_in_license: true
        recovery_action_group:
          id: recovered
          name: Recovered
        action_groups:
        - id: anomaly_detection_realtime_issue
          name: Issue detected
        - id: recovered
          name: Recovered
        default_action_group_id: anomaly_detection_realtime_issue
        minimum_license_required: platinum
        is_exportable: true
        rule_task_timeout: 5m
        action_variables:
          context:
          - name: results
            description: Results of the rule execution
          - name: message
            description: Alert info message
          state: []
          params: []
        authorized_consumers:
          alerts:
            read: true
            all: true
          stackAlerts:
            read: true
            all: true
          slo:
            read: true
            all: true
          ml:
            read: true
            all: true
          uptime:
            read: true
            all: true
          infrastructure:
            read: true
            all: true
          logs:
            read: true
            all: true
          monitoring:
            read: true
            all: true
          siem:
            read: true
            all: true
          apm:
            read: true
            all: true
          discover:
            read: true
            all: true
        does_set_recovery_context: true
        has_alerts_mappings: false
        has_fields_for_a_a_d: false
  parameters:
    kbn_xsrf:
      description: Cross-site request forgery protection
      explode: false
      in: header
      name: kbn-xsrf
      required: true
      schema: {}
      style: simple
    space_id:
      description: "An identifier for the space. If `/s/` and the identifier are omitted\
        \ from the path, the default space is used."
      explode: false
      in: path
      name: spaceId
      required: true
      schema: {}
      style: simple
    rule_id:
      description: An identifier for the rule.
      explode: false
      in: path
      name: ruleId
      required: true
      schema: {}
      style: simple
    alert_id:
      description: An identifier for the alert. The identifier is generated by the
        rule and might be any arbitrary string.
      explode: false
      in: path
      name: alertId
      required: true
      schema: {}
      style: simple
  schemas:
    create_anomaly_detection_alert_rule_request:
      description: "A rule that checks if the anomaly detection job results contain\
        \ anomalies that match the rule conditions. \n"
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for an anomaly detection rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - xpack.ml.anomaly_detection_alert
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create anomaly detection rule request
    create_anomaly_detection_jobs_health_rule_request:
      description: |
        An rule that monitors job health and alerts if an operational issue occurred that may prevent the job from detecting anomalies.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for an anomaly detection jobs health rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - xpack.ml.anomaly_detection_jobs_health
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create anomaly detection jobs health rule request
    create_apm_anomaly_rule_request:
      description: "A rule that detects when either the latency, throughput, or failed\
        \ transaction rate of a service is anomalous."
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_apm_anomaly'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - apm.anomaly
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create APM anomaly rule rule request
    create_apm_error_count_rule_request:
      description: A rule that detects when the number of errors in a service exceeds
        a defined threshold.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_apm_error_count'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - apm.error_rate
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create APM error count rule request
    create_apm_transaction_duration_rule_request:
      description: A rule that detects when the latency of a specific transaction
        type in a service exceeds a threshold.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_apm_transaction_duration'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - apm.transaction_duration
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create latency threshold rule request
    create_apm_transaction_error_rate_rule_request:
      description: A rule that sends notifications when the rate of transaction errors
        in a service exceeds a threshold.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_apm_transaction_error_rate'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - apm.transaction_error_rate
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create APM transaction error rate rule request
    create_es_query_rule_request:
      description: "A rule that runs a user-configured query, compares the number\
        \ of matches to a configured threshold, and schedules actions to run when\
        \ the threshold condition is met.  \n"
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_es_query_rule'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - .es-query
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create Elasticsearch query rule request
    create_geo_containment_rule_request:
      description: "A rule that runs an Elasticsearch query over indices to determine\
        \ whether any documents are currently contained within any boundaries from\
        \ the specified boundary index. In the event that an entity is contained within\
        \ a boundary, an alert may be generated.  \n"
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for an tracking containment rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - .geo-containment
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create tracking containment rule request
    create_index_threshold_rule_request:
      description: "A rule that runs an Elasticsearch query, aggregates field values\
        \ from documents, compares them to threshold values, and schedules actions\
        \ to run when the thresholds are met."
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_index_threshold_rule'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - .index-threshold
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create index threshold rule request
    create_infra_inventory_rule_request:
      description: |
        A rule that sends notifications when a metric has reached or exceeded a value for a specific resource or a group of resources within your infrastructure.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_infra_inventory'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - metrics.alert.inventory.threshold
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create infra inventory rule request
    create_infra_metric_anomaly_rule_request:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for an infrastructure anomaly rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - metrics.alert.anomaly
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create infrastructure anomaly rule request
    create_infra_metric_threshold_rule_request:
      description: |
        A rule that sends notifications when a metric has reached or exceeded a value for a specific time period.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_infra_metric_threshold'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - metrics.alert.threshold
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create infra metric threshold rule request
    create_monitoring_jvm_memory_usage_rule_request:
      description: A rule that detects when a node reports high memory usage.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a JVM memory usage rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_jvm_memory_usage
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create JVM memory usage rule request
    create_log_threshold_rule_request:
      description: A rule that detects when a log aggregation exceeds a threshold.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_log_threshold'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - logs.alert.document.count
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create log threshold rule request
    create_monitoring_ccr_exceptions_rule_request:
      description: A rule that detects cross-cluster replication (CCR) read exceptions.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a CCR read exceptions rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_ccr_read_exceptions
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create CCR read exceptions rule request
    create_monitoring_cluster_health_rule_request:
      description: A rule that detects when the health of the cluster changes.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a cluster health rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_cluster_health
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create cluster health rule request
    create_monitoring_cpu_usage_rule_request:
      description: A rule that detects when the CPU load for a node is consistently
        high.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a CPU usage rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_cpu_usage
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create CPU usage rule request
    create_monitoring_disk_usage_rule_request:
      description: A rule that detects when the disk usage for a node is consistently
        high.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a disk usage rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_disk_usage
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create disk usage rule request
    create_monitoring_elasticsearch_version_mismatch_rule_request:
      description: A rule that detects when the cluster has multipe versions of Elasticsearch.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a Elasticsearch version mismatch rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_elasticsearch_version_mismatch
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create Elasticsearch version mismatch rule request
    create_monitoring_license_expiration_rule_request:
      description: A rule that detects when the cluster license is about to expire.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a license expiration rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_license_expiration
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create license expiration rule request
    create_monitoring_kibana_version_mismatch_rule_request:
      description: A rule that detects when the cluster has multiple versions of Kibana.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a Kibana version mismatch rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_kibana_version_mismatch
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create Kibana version mismatch rule request
    create_monitoring_logstash_version_mismatch_rule_request:
      description: A rule that detects when the cluster has multiple versions of Logstash.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a Logstash version mismatch rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_logstash_version_mismatch
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create Logstash version mismatch rule request
    create_monitoring_missing_data_rule_request:
      description: A rule that detects when monitoring data is missing.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a missing monitoring data rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_missing_monitoring_data
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create missing monitoring data rule request
    create_monitoring_nodes_changed_rule_request:
      description: "A rule that detects when nodes are added, removed, or restarted."
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a nodes changed rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_nodes_changed
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create nodes changed rule request
    create_monitoring_shard_size_rule_request:
      description: A rule that detects when the average shard size is larger than
        a threshold.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a shard size rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_shard_size
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create shard size rule request
    create_monitoring_thread_pool_search_rejections_rule_request:
      description: A rule that detects when the number of rejections in the thread
        pool exceeds a threshold.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a thread pool search rejections rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_thread_pool_search_rejections
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create thread pool search rejections rule request
    create_monitoring_thread_pool_write_rejections_rule_request:
      description: A rule that detects when the number of rejections in the write
        thread pool exceeds a threshold.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a thread pool write rejections rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - monitoring_alert_thread_pool_write_rejections
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create thread pool write rejections rule request
    create_siem_eql_rule_request:
      description: |
        A rule that uses Event Query Language (EQL) to match events, generate sequences, and stack data.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for an event correlation rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - siem.eqlRule
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create event correlation rule request
    create_siem_indicator_rule_request:
      description: |
        A rule that uses indicators from intelligence sources to detect matching events and alerts.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for an indicator match rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - siem.indicatorRule
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create indicator match rule request
    create_siem_ml_rule_request:
      description: |
        A rule that detects when a machine learning job discovers an anomaly above the defined threshold.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a machine learning rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - siem.mlRule
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create machine learning rule request
    create_siem_new_terms_rule_request:
      description: A rule that finds documents with values that appear for the first
        time.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a new terms rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - siem.newTermsRule
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create new terms rule request
    create_siem_notifications_rule_request:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a notification rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - siem.notifications
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create security solution notification (legacy) rule request
    create_siem_query_rule_request:
      description: |
        A rule that uses KQL or Lucene to detect issues across indices.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a custom query rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - siem.queryRule
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create custom query rule request
    create_siem_saved_query_rule_request:
      description: |
        A rule that searches the defined indices and creates an alert when a document matches the saved search.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a saved query rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - siem.savedQueryRule
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create saved query rule request
    create_siem_threshold_rule_request:
      description: |
        A rule that aggregates query results to detect when the number of matches exceeds a threshold.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a threshold rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - siem.thresholdRule
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create threshold rule request
    create_slo_burn_rate_rule_request:
      description: |
        A rule that detects when the burn rate is above a defined threshold for two different lookback periods. The two periods are a long period and a short period that is 1/12th of the long period. For each lookback period, the burn rate is computed as the error rate divided by the error budget. When the burn rates for both periods surpass the threshold, an alert occurs.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_slo_burn_rate'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - slo.rules.burnRate
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create slo burn rate rule request
    create_synthetics_monitor_status_rule_request:
      description: A rule that detects when a monitor is down or an availability threshold
        is breached.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for the synthetics monitor status rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - xpack.synthetics.alerts.monitorStatus
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create synthetics monitor status rule request
    create_synthetics_uptime_duration_anomaly_rule_request:
      description: |
        A rule that detects response durations for all of the geographic locations of each monitor. When a monitor runs for an unusual amount of time, at a particular time, an anomaly is recorded.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for the uptime duration anomaly rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - xpack.uptime.alerts.durationAnomaly
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create synthetics uptime duration anomaly rule request
    create_synthetics_uptime_tls_rule_request:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_synthetics_uptime_tls'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - xpack.uptime.alerts.tls
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create synthetics uptime TLS rule request
    create_synthetics_uptime_tls_certificate_rule_request:
      description: |
        A rule that detects when a monitor has a TLS certificate expiring or when it exceeds an age limit.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a TLS certificate rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - xpack.uptime.alerts.tlsCertificate
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create TLS certificate rule request
    create_transform_health_rule_request:
      description: |
        A rule that monitors transforms health and alerts if an operational issue occurred.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for a transform health rule.
          type: object
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - transform_health
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create transform health rule request
    create_uptime_monitor_status_rule_request:
      description: A rule that detects monitor errors and outages.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        consumer:
          description: |
            The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
          type: string
        enabled:
          description: Indicates whether you want to run the rule on an interval basis
            after it is created.
          type: boolean
        name:
          description: |
            The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          $ref: '#/components/schemas/params_property_synthetics_monitor_status'
        rule_type_id:
          description: The ID of the rule type that you want to call when the rule
            is scheduled to run.
          enum:
          - xpack.uptime.alerts.monitorStatus
          type: string
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - consumer
      - name
      - params
      - rule_type_id
      - schedule
      title: Create uptime monitor status rule request
    filter:
      description: A filter written in Elasticsearch Query Domain Specific Language
        (DSL) as defined in the `kbn-es-query` package.
      example:
        $state: "{}"
        meta:
          field: field
          controlledBy: controlledBy
          negate: true
          alias: alias
          index: index
          disabled: true
          params: "{}"
          type: type
          value: value
          isMultiIndex: true
          key: key
          group: group
        query: "{}"
      properties:
        meta:
          $ref: '#/components/schemas/filter_meta'
        query:
          type: object
        $state:
          type: object
    notify_when_action:
      description: |
        Indicates how often alerts generate actions. Valid values include: `onActionGroupChange`: Actions run when the alert status changes; `onActiveAlert`: Actions run when the alert becomes active and at each check interval while the rule conditions are met; `onThrottleInterval`: Actions run when the alert becomes active and at the interval specified in the throttle property while the rule conditions are met. NOTE: You cannot specify `notify_when` at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
      enum:
      - onActionGroupChange
      - onActiveAlert
      - onThrottleInterval
      type: string
    throttle_action:
      description: |
        The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if `notify_when` is set to `onThrottleInterval`. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
      nullable: true
      type: string
    actions:
      items:
        $ref: '#/components/schemas/actions_inner'
      type: array
    alert_delay:
      description: Indicates that an alert occurs only when the specified number of
        consecutive runs met the rule conditions.
      example:
        active: 3
      properties:
        active:
          description: The number of consecutive runs that must meet the rule conditions.
          example: 3
          type: number
      required:
      - active
    consumer:
      description: |
        The name of the application or feature that owns the rule. For example: `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`, `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`.
      type: string
    enabled_rule:
      description: Indicates whether you want to run the rule on an interval basis
        after it is created.
      type: boolean
    name_rule:
      description: |
        The name of the rule. While this name does not have to be unique, a distinctive name can help you identify a rule.
      type: string
    notify_when:
      deprecated: true
      description: |
        Deprecated in 8.13.0. Use the `notify_when` property in the action `frequency` object instead. Indicates how often alerts generate actions. NOTE: You cannot specify `notify_when` at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
      enum:
      - onActionGroupChange
      - onActiveAlert
      - onThrottleInterval
      type: string
    schedule:
      description: "The check interval, which specifies how frequently the rule conditions\
        \ are checked. The interval is specified in seconds, minutes, hours, or days."
      example:
        interval: interval
      properties:
        interval:
          type: string
    tags:
      items:
        type: string
      type: array
    throttle:
      deprecated: true
      description: |
        Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
      nullable: true
      type: string
    params_property_apm_anomaly:
      properties:
        serviceName:
          description: The service name from APM
          type: string
        transactionType:
          description: The transaction type from APM
          type: string
        windowSize:
          description: The window size
          example: 6
          type: number
        windowUnit:
          description: The window size unit
          enum:
          - m
          - h
          - d
          type: string
        environment:
          description: The environment from APM
          type: string
        anomalySeverityType:
          description: The anomaly threshold value
          enum:
          - critical
          - major
          - minor
          - warning
          type: string
      required:
      - anomalySeverityType
      - environment
      - windowSize
      - windowUnit
    params_property_apm_error_count:
      properties:
        serviceName:
          description: The service name from APM
          type: string
        windowSize:
          description: The window size
          example: 6
          type: number
        windowUnit:
          description: The window size unit
          enum:
          - m
          - h
          - d
          type: string
        environment:
          description: The environment from APM
          type: string
        threshold:
          description: The error count threshold value
          type: number
        groupBy:
          items:
            enum:
            - service.name
            - service.environment
            - transaction.name
            - error.grouping_key
            type: string
          type: array
        errorGroupingKey:
          type: string
      required:
      - environment
      - threshold
      - windowSize
      - windowUnit
    params_property_apm_transaction_duration:
      properties:
        serviceName:
          description: The service name from APM
          type: string
        transactionType:
          description: The transaction type from APM
          type: string
        transactionName:
          description: The transaction name from APM
          type: string
        windowSize:
          description: The window size
          example: 6
          type: number
        windowUnit:
          description: ç
          enum:
          - m
          - h
          - d
          type: string
        environment:
          type: string
        threshold:
          description: The latency threshold value
          type: number
        groupBy:
          items:
            enum:
            - service.name
            - service.environment
            - transaction.type
            - transaction.name
            type: string
          type: array
        aggregationType:
          enum:
          - avg
          - 95th
          - 99th
          type: string
      required:
      - aggregationType
      - environment
      - threshold
      - windowSize
      - windowUnit
    params_property_apm_transaction_error_rate:
      properties:
        serviceName:
          description: The service name from APM
          type: string
        transactionType:
          description: The transaction type from APM
          type: string
        transactionName:
          description: The transaction name from APM
          type: string
        windowSize:
          description: The window size
          example: 6
          type: number
        windowUnit:
          description: The window size unit
          enum:
          - m
          - h
          - d
          type: string
        environment:
          description: The environment from APM
          type: string
        threshold:
          description: The error rate threshold value
          type: number
        groupBy:
          items:
            enum:
            - service.name
            - service.environment
            - transaction.type
            - transaction.name
            type: string
          type: array
      required:
      - environment
      - threshold
      - windowSize
      - windowUnit
    aggfield:
      description: |
        The name of the numeric field that is used in the aggregation. This property is required when `aggType` is `avg`, `max`, `min` or `sum`.
      type: string
    aggtype:
      default: count
      description: The type of aggregation to perform.
      enum:
      - avg
      - count
      - max
      - min
      - sum
      type: string
    excludehitsfrompreviousrun:
      description: |
        Indicates whether to exclude matches from previous runs. If `true`, you can avoid alert duplication by excluding documents that have already been detected by the previous rule run. This option is not available when a grouping field is specified.
      type: boolean
    groupby:
      default: all
      description: |
        Indicates whether the aggregation is applied over all documents (`all`) or split into groups (`top`) using a grouping field (`termField`). If grouping is used, an alert will be created for each group when it exceeds the threshold; only the top groups (up to `termSize` number of groups) are checked.
      enum:
      - all
      - top
      type: string
    termsize:
      description: |
        This property is required when `groupBy` is `top`. It specifies the number of groups to check against the threshold and therefore limits the number of alerts on high cardinality fields.
      type: integer
    timefield:
      description: The field that is used to calculate the time window.
      type: string
    timewindowsize:
      description: |
        The size of the time window (in `timeWindowUnit` units), which determines how far back to search for documents. Generally it should be a value higher than the rule check interval to avoid gaps in detection.
      type: integer
    timewindowunit:
      description: |
        The type of units for the time window: seconds, minutes, hours, or days.
      enum:
      - s
      - m
      - h
      - d
      type: string
    size:
      description: |
        The number of documents to pass to the configured actions when the threshold condition is met.
      type: integer
    termfield:
      nullable: true
      type: string
    threshold:
      items:
        type: integer
      type: array
    thresholdcomparator:
      description: "The comparison function for the threshold. For example, \"is above\"\
        , \"is above or equals\", \"is below\", \"is below or equals\", \"is between\"\
        , and \"is not between\"."
      enum:
      - '>'
      - '>='
      - <
      - <=
      - between
      - notBetween
      type: string
    params_es_query_rule:
      nullable: true
      oneOf: []
    params_index_threshold_rule:
      description: The parameters for an index threshold rule.
      properties:
        aggField:
          description: |
            The name of the numeric field that is used in the aggregation. This property is required when `aggType` is `avg`, `max`, `min` or `sum`.
          type: string
        aggType:
          $ref: '#/components/schemas/aggtype'
        filterKuery:
          description: A KQL expression thats limits the scope of alerts.
          type: string
        groupBy:
          $ref: '#/components/schemas/groupby'
        index:
          items:
            type: string
          type: array
        termField:
          nullable: true
          type: string
        termSize:
          description: |
            This property is required when `groupBy` is `top`. It specifies the number of groups to check against the threshold and therefore limits the number of alerts on high cardinality fields.
          type: integer
        threshold:
          items:
            type: integer
          type: array
        thresholdComparator:
          $ref: '#/components/schemas/thresholdcomparator'
        timeField:
          description: The field that is used to calculate the time window.
          type: string
        timeWindowSize:
          description: |
            The size of the time window (in `timeWindowUnit` units), which determines how far back to search for documents. Generally it should be a value higher than the rule check interval to avoid gaps in detection.
          type: integer
        timeWindowUnit:
          $ref: '#/components/schemas/timewindowunit'
      required:
      - index
      - threshold
      - thresholdComparator
      - timeField
      - timeWindowSize
      - timeWindowUnit
    params_property_infra_inventory:
      properties:
        criteria:
          items:
            $ref: '#/components/schemas/params_property_infra_inventory_criteria_inner'
          type: array
        filterQuery:
          type: string
        filterQueryText:
          type: string
        nodeType:
          enum:
          - host
          - pod
          - container
          - awsEC2
          - awsS3
          - awsSQS
          - awsRDS
          type: string
        sourceId:
          type: string
        alertOnNoData:
          type: boolean
    params_property_infra_metric_threshold:
      properties:
        criteria:
          items:
            nullable: true
            oneOf: []
          type: array
        groupBy:
          nullable: true
          type: string
        filterQuery:
          type: string
        sourceId:
          type: string
        alertOnNoData:
          type: boolean
        alertOnGroupDisappear:
          type: boolean
    params_property_log_threshold:
      nullable: true
      oneOf: []
    params_property_slo_burn_rate:
      properties:
        sloId:
          description: The SLO identifier used by the rule
          example: 8853df00-ae2e-11ed-90af-09bb6422b258
          type: string
        burnRateThreshold:
          description: The burn rate threshold used to trigger the alert
          example: 14.4
          type: number
        maxBurnRateThreshold:
          description: The maximum burn rate threshold value defined by the SLO error
            budget
          example: 168
          type: number
        longWindow:
          $ref: '#/components/schemas/params_property_slo_burn_rate_longWindow'
        shortWindow:
          $ref: '#/components/schemas/params_property_slo_burn_rate_shortWindow'
    params_property_synthetics_uptime_tls:
      properties:
        search:
          type: string
        certExpirationThreshold:
          type: number
        certAgeThreshold:
          type: number
    params_property_synthetics_monitor_status:
      properties:
        availability:
          $ref: '#/components/schemas/params_property_synthetics_monitor_status_availability'
        filters:
          nullable: true
          type: string
        locations:
          items:
            type: string
          type: array
        numTimes:
          type: number
        search:
          type: string
        shouldCheckStatus:
          type: boolean
        shouldCheckAvailability:
          type: boolean
        timerangeCount:
          type: number
        timerangeUnit:
          type: string
        timerange:
          $ref: '#/components/schemas/params_property_synthetics_monitor_status_timerange'
        version:
          type: number
        isAutoGenerated:
          type: boolean
      required:
      - numTimes
      - shouldCheckAvailability
      - shouldCheckStatus
    create_rule_request:
      description: The properties vary depending on the rule type.
      discriminator:
        mapping:
          xpack.ml.anomaly_detection_alert: '#/components/schemas/create_anomaly_detection_alert_rule_request'
          xpack.ml.anomaly_detection_jobs_health: '#/components/schemas/create_anomaly_detection_jobs_health_rule_request'
          apm.anomaly: '#/components/schemas/create_apm_anomaly_rule_request'
          apm.error_rate: '#/components/schemas/create_apm_error_count_rule_request'
          apm.transaction_duration: '#/components/schemas/create_apm_transaction_duration_rule_request'
          apm.transaction_error_rate: '#/components/schemas/create_apm_transaction_error_rate_rule_request'
          ".es-query": '#/components/schemas/create_es_query_rule_request'
          ".geo-containment": '#/components/schemas/create_geo_containment_rule_request'
          ".index-threshold": '#/components/schemas/create_index_threshold_rule_request'
          metrics.alert.inventory.threshold: '#/components/schemas/create_infra_inventory_rule_request'
          metrics.alert.anomaly: '#/components/schemas/create_infra_metric_anomaly_rule_request'
          metrics.alert.threshold: '#/components/schemas/create_infra_metric_threshold_rule_request'
          monitoring_alert_jvm_memory_usage: '#/components/schemas/create_monitoring_jvm_memory_usage_rule_request'
          logs.alert.document.count: '#/components/schemas/create_log_threshold_rule_request'
          monitoring_ccr_read_exceptions: '#/components/schemas/create_monitoring_ccr_exceptions_rule_request'
          monitoring_alert_cluster_health: '#/components/schemas/create_monitoring_cluster_health_rule_request'
          monitoring_alert_cpu_usage: '#/components/schemas/create_monitoring_cpu_usage_rule_request'
          monitoring_alert_disk_usage: '#/components/schemas/create_monitoring_disk_usage_rule_request'
          monitoring_alert_elasticsearch_version_mismatch: '#/components/schemas/create_monitoring_elasticsearch_version_mismatch_rule_request'
          monitoring_alert_license_expiration: '#/components/schemas/create_monitoring_license_expiration_rule_request'
          monitoring_alert_kibana_version_mismatch: '#/components/schemas/create_monitoring_kibana_version_mismatch_rule_request'
          monitoring_alert_logstash_version_mismatch: '#/components/schemas/create_monitoring_logstash_version_mismatch_rule_request'
          monitoring_alert_missing_monitoring_data: '#/components/schemas/create_monitoring_missing_data_rule_request'
          monitoring_alert_nodes_changed: '#/components/schemas/create_monitoring_nodes_changed_rule_request'
          monitoring_shard_size: '#/components/schemas/create_monitoring_shard_size_rule_request'
          monitoring_alert_thread_pool_search_rejections: '#/components/schemas/create_monitoring_thread_pool_search_rejections_rule_request'
          monitoring_alert_thread_pool_write_rejections: '#/components/schemas/create_monitoring_thread_pool_write_rejections_rule_request'
          siem.eqlRule: '#/components/schemas/create_siem_eql_rule_request'
          siem.indicatorRule: '#/components/schemas/create_siem_indicator_rule_request'
          siem.mlRule: '#/components/schemas/create_siem_ml_rule_request'
          siem.newTermsRule: '#/components/schemas/create_siem_new_terms_rule_request'
          siem.notifications: '#/components/schemas/create_siem_notifications_rule_request'
          siem.queryRule: '#/components/schemas/create_siem_query_rule_request'
          siem.savedQueryRule: '#/components/schemas/create_siem_saved_query_rule_request'
          siem.thresholdRule: '#/components/schemas/create_siem_threshold_rule_request'
          slo.rules.burnRate: '#/components/schemas/create_slo_burn_rate_rule_request'
          xpack.synthetics.alerts.monitorStatus: '#/components/schemas/create_synthetics_monitor_status_rule_request'
          xpack.uptime.alerts.durationAnomaly: '#/components/schemas/create_synthetics_uptime_duration_anomaly_rule_request'
          xpack.uptime.alerts.tls: '#/components/schemas/create_synthetics_uptime_tls_rule_request'
          xpack.uptime.alerts.tlsCertificate: '#/components/schemas/create_synthetics_uptime_tls_certificate_rule_request'
          transform_health: '#/components/schemas/create_transform_health_rule_request'
          xpack.uptime.alerts.monitorStatus: '#/components/schemas/create_uptime_monitor_status_rule_request'
        propertyName: rule_type_id
      oneOf:
      - $ref: '#/components/schemas/create_anomaly_detection_alert_rule_request'
      - $ref: '#/components/schemas/create_anomaly_detection_jobs_health_rule_request'
      - $ref: '#/components/schemas/create_apm_anomaly_rule_request'
      - $ref: '#/components/schemas/create_apm_error_count_rule_request'
      - $ref: '#/components/schemas/create_apm_transaction_duration_rule_request'
      - $ref: '#/components/schemas/create_apm_transaction_error_rate_rule_request'
      - $ref: '#/components/schemas/create_es_query_rule_request'
      - $ref: '#/components/schemas/create_geo_containment_rule_request'
      - $ref: '#/components/schemas/create_index_threshold_rule_request'
      - $ref: '#/components/schemas/create_infra_inventory_rule_request'
      - $ref: '#/components/schemas/create_infra_metric_anomaly_rule_request'
      - $ref: '#/components/schemas/create_infra_metric_threshold_rule_request'
      - $ref: '#/components/schemas/create_monitoring_jvm_memory_usage_rule_request'
      - $ref: '#/components/schemas/create_log_threshold_rule_request'
      - $ref: '#/components/schemas/create_monitoring_ccr_exceptions_rule_request'
      - $ref: '#/components/schemas/create_monitoring_cluster_health_rule_request'
      - $ref: '#/components/schemas/create_monitoring_cpu_usage_rule_request'
      - $ref: '#/components/schemas/create_monitoring_disk_usage_rule_request'
      - $ref: '#/components/schemas/create_monitoring_elasticsearch_version_mismatch_rule_request'
      - $ref: '#/components/schemas/create_monitoring_license_expiration_rule_request'
      - $ref: '#/components/schemas/create_monitoring_kibana_version_mismatch_rule_request'
      - $ref: '#/components/schemas/create_monitoring_logstash_version_mismatch_rule_request'
      - $ref: '#/components/schemas/create_monitoring_missing_data_rule_request'
      - $ref: '#/components/schemas/create_monitoring_nodes_changed_rule_request'
      - $ref: '#/components/schemas/create_monitoring_shard_size_rule_request'
      - $ref: '#/components/schemas/create_monitoring_thread_pool_search_rejections_rule_request'
      - $ref: '#/components/schemas/create_monitoring_thread_pool_write_rejections_rule_request'
      - $ref: '#/components/schemas/create_siem_eql_rule_request'
      - $ref: '#/components/schemas/create_siem_indicator_rule_request'
      - $ref: '#/components/schemas/create_siem_ml_rule_request'
      - $ref: '#/components/schemas/create_siem_new_terms_rule_request'
      - $ref: '#/components/schemas/create_siem_notifications_rule_request'
      - $ref: '#/components/schemas/create_siem_query_rule_request'
      - $ref: '#/components/schemas/create_siem_saved_query_rule_request'
      - $ref: '#/components/schemas/create_siem_threshold_rule_request'
      - $ref: '#/components/schemas/create_slo_burn_rate_rule_request'
      - $ref: '#/components/schemas/create_synthetics_monitor_status_rule_request'
      - $ref: '#/components/schemas/create_synthetics_uptime_duration_anomaly_rule_request'
      - $ref: '#/components/schemas/create_synthetics_uptime_tls_rule_request'
      - $ref: '#/components/schemas/create_synthetics_uptime_tls_certificate_rule_request'
      - $ref: '#/components/schemas/create_transform_health_rule_request'
      - $ref: '#/components/schemas/create_uptime_monitor_status_rule_request'
      title: Create rule request body properties
    rule_response_properties:
      example:
        throttle: throttle
        created_at: 2000-01-23T04:56:07.000+00:00
        api_key_created_by_user: true
        enabled: true
        running: true
        notify_when: notify_when
        next_run: 2000-01-23T04:56:07.000+00:00
        updated_at: updated_at
        execution_status:
          last_execution_date: 2000-01-23T04:56:07.000+00:00
          last_duration: 6
          status: status
        scheduled_task_id: scheduled_task_id
        id: id
        consumer: consumer
        alert_delay:
          active: 3
        last_run:
          alerts_count:
            ignored: 5
            new: 5
            recovered: 2
            active: 1
          outcome_msg:
          - outcome_msg
          - outcome_msg
          outcome_order: 7
          warning: warning
          outcome: outcome
        params:
          key: ""
        created_by: created_by
        muted_alert_ids:
        - muted_alert_ids
        - muted_alert_ids
        rule_type_id: rule_type_id
        revision: 9
        tags:
        - tags
        - tags
        api_key_owner: api_key_owner
        schedule:
          interval: interval
        name: name
        updated_by: updated_by
        mute_all: true
        actions:
        - alerts_filter:
            timeframe:
              hours:
                start: start
                end: end
              timezone: timezone
              days:
              - 0
              - 0
            query:
              kql: kql
              filters:
              - $state: "{}"
                meta:
                  field: field
                  controlledBy: controlledBy
                  negate: true
                  alias: alias
                  index: index
                  disabled: true
                  params: "{}"
                  type: type
                  value: value
                  isMultiIndex: true
                  key: key
                  group: group
                query: "{}"
              - $state: "{}"
                meta:
                  field: field
                  controlledBy: controlledBy
                  negate: true
                  alias: alias
                  index: index
                  disabled: true
                  params: "{}"
                  type: type
                  value: value
                  isMultiIndex: true
                  key: key
                  group: group
                query: "{}"
          id: id
          params:
            key: ""
          uuid: uuid
          connector_type_id: connector_type_id
          frequency:
            summary: true
            throttle: throttle
            notify_when: null
          group: group
        - alerts_filter:
            timeframe:
              hours:
                start: start
                end: end
              timezone: timezone
              days:
              - 0
              - 0
            query:
              kql: kql
              filters:
              - $state: "{}"
                meta:
                  field: field
                  controlledBy: controlledBy
                  negate: true
                  alias: alias
                  index: index
                  disabled: true
                  params: "{}"
                  type: type
                  value: value
                  isMultiIndex: true
                  key: key
                  group: group
                query: "{}"
              - $state: "{}"
                meta:
                  field: field
                  controlledBy: controlledBy
                  negate: true
                  alias: alias
                  index: index
                  disabled: true
                  params: "{}"
                  type: type
                  value: value
                  isMultiIndex: true
                  key: key
                  group: group
                query: "{}"
          id: id
          params:
            key: ""
          uuid: uuid
          connector_type_id: connector_type_id
          frequency:
            summary: true
            throttle: throttle
            notify_when: null
          group: group
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        api_key_created_by_user:
          description: Indicates whether the API key that is associated with the rule
            was created by the user.
          type: boolean
        api_key_owner:
          description: |
            The owner of the API key that is associated with the rule and used to run background tasks.
          nullable: true
          type: string
        consumer:
          description: "The application or feature that owns the rule. For example,\
            \ `alerts`, `apm`, `discover`, `infrastructure`, `logs`, `metrics`, `ml`,\
            \ `monitoring`, `securitySolution`, `siem`, `stackAlerts`, or `uptime`."
          type: string
        created_at:
          description: The date and time that the rule was created.
          format: date-time
          type: string
        created_by:
          description: The identifier for the user that created the rule.
          nullable: true
          type: string
        enabled:
          description: Indicates whether the rule is currently enabled.
          type: boolean
        execution_status:
          $ref: '#/components/schemas/rule_response_properties_execution_status'
        id:
          description: The identifier for the rule.
          type: string
        last_run:
          $ref: '#/components/schemas/rule_response_properties_last_run'
        muted_alert_ids:
          items:
            type: string
          type: array
        mute_all:
          type: boolean
        name:
          description: The name of the rule.
          type: string
        next_run:
          format: date-time
          nullable: true
          type: string
        notify_when:
          description: Indicates how often alerts generate actions.
          nullable: true
          type: string
        params:
          additionalProperties: true
          description: The parameters for the rule.
          type: object
        revision:
          description: The rule revision number.
          type: integer
        rule_type_id:
          description: |
            The identifier for the type of rule. For example, `.es-query`, `.index-threshold`, `logs.alert.document.count`, `monitoring_alert_cluster_health`, `siem.thresholdRule`, or `xpack.ml.anomaly_detection_alert`.
          type: string
        running:
          description: Indicates whether the rule is running.
          type: boolean
        schedule:
          $ref: '#/components/schemas/schedule'
        scheduled_task_id:
          type: string
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
        updated_at:
          description: The date and time that the rule was updated most recently.
          type: string
        updated_by:
          description: The identifier for the user that updated this rule most recently.
          nullable: true
          type: string
      required:
      - actions
      - api_key_owner
      - consumer
      - created_at
      - created_by
      - enabled
      - execution_status
      - id
      - mute_all
      - muted_alert_ids
      - name
      - params
      - rule_type_id
      - schedule
      - tags
      - throttle
      - updated_at
      - updated_by
      title: Rule response properties
    "401_response":
      properties:
        error:
          enum:
          - Unauthorized
          type: string
        message:
          type: string
        statusCode:
          enum:
          - 401
          type: integer
      title: Unsuccessful rule API response
    "404_response":
      properties:
        error:
          enum:
          - Not Found
          type: string
        message:
          type: string
        statusCode:
          enum:
          - 404
          type: integer
    update_rule_request:
      description: |
        The update rule API request body varies depending on the type of rule and actions.
      properties:
        actions:
          items:
            $ref: '#/components/schemas/actions_inner'
          type: array
        alert_delay:
          $ref: '#/components/schemas/alert_delay'
        name:
          description: The name of the rule.
          type: string
        notify_when:
          $ref: '#/components/schemas/notify_when'
        params:
          additionalProperties: true
          description: The parameters for the rule.
          type: object
        schedule:
          $ref: '#/components/schemas/schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          deprecated: true
          description: |
            Deprecated in 8.13.0. Use the `throttle` property in the action `frequency` object instead. The throttle interval, which defines how often an alert generates repeated actions. NOTE: You cannot specify the throttle interval at both the rule and action level. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - name
      - params
      - schedule
      title: Update rule request
    fieldmap_properties:
      example:
        path: path
        array: true
        format: format
        ignore_above: 0
        index: true
        dynamic: true
        scaling_factor: 6
        type: scaled_float
        properties:
          key:
            type: type
        required: true
      properties:
        array:
          description: Indicates whether the field is an array.
          type: boolean
        dynamic:
          description: Indicates whether it is a dynamic field mapping.
          type: boolean
        format:
          description: |
            Indicates the format of the field. For example, if the `type` is `date_range`, the `format` can be `epoch_millis||strict_date_optional_time`.
          type: string
        ignore_above:
          description: Specifies the maximum length of a string field. Longer strings
            are not indexed or stored.
          type: integer
        index:
          description: Indicates whether field values are indexed.
          type: boolean
        path:
          description: TBD
          type: string
        properties:
          additionalProperties:
            $ref: '#/components/schemas/fieldmap_properties_properties_value'
          description: |
            Details about the object properties. This property is applicable when `type` is `object`.
        required:
          description: Indicates whether the field is required.
          type: boolean
        scaling_factor:
          description: "The scaling factor to use when encoding values. This property\
            \ is applicable when `type` is `scaled_float`. Values will be multiplied\
            \ by this factor at index time and rounded to the closest long value.\
            \ \n"
          type: integer
        type:
          description: Specifies the data type for the field.
          example: scaled_float
          type: string
      title: Field map objects in the get rule types response
    "400_response":
      properties:
        error:
          enum:
          - Bad Request
          type: string
        message:
          type: string
        statusCode:
          enum:
          - 400
          type: integer
      required:
      - error
      - message
      - statusCode
      title: Bad request
    alert_response_properties:
      example:
        alertTypeId: alertTypeId
        throttle: throttle
        updatedBy: updatedBy
        executionStatus:
          lastExecutionDate: 2000-01-23T04:56:07.000+00:00
          status: status
        params:
          key: ""
        enabled: true
        mutedInstanceIds:
        - mutedInstanceIds
        - mutedInstanceIds
        tags:
        - tags
        - tags
        createdAt: 2000-01-23T04:56:07.000+00:00
        schedule:
          interval: interval
        notifyWhen: notifyWhen
        createdBy: createdBy
        muteAll: true
        name: name
        scheduledTaskId: scheduledTaskId
        id: id
        actions:
        - "{}"
        - "{}"
        apiKeyOwner: apiKeyOwner
        updatedAt: updatedAt
      properties:
        actions:
          items:
            type: object
          type: array
        alertTypeId:
          type: string
        apiKeyOwner:
          nullable: true
          type: string
        createdAt:
          description: The date and time that the alert was created.
          format: date-time
          type: string
        createdBy:
          description: The identifier for the user that created the alert.
          type: string
        enabled:
          description: Indicates whether the alert is currently enabled.
          type: boolean
        executionStatus:
          $ref: '#/components/schemas/alert_response_properties_executionStatus'
        id:
          description: The identifier for the alert.
          type: string
        muteAll:
          type: boolean
        mutedInstanceIds:
          items:
            type: string
          type: array
        name:
          description: The name of the alert.
          type: string
        notifyWhen:
          type: string
        params:
          additionalProperties: true
          type: object
        schedule:
          $ref: '#/components/schemas/alert_response_properties_schedule'
        scheduledTaskId:
          type: string
        tags:
          items:
            type: string
          type: array
        throttle:
          nullable: true
          type: string
        updatedAt:
          type: string
        updatedBy:
          description: The identifier for the user that updated this alert most recently.
          nullable: true
          type: string
      title: Legacy alert response properties
    findRules_has_reference_parameter:
      properties:
        id:
          type: string
        type:
          type: string
    findRules_200_response:
      example:
        per_page: 6
        total: 1
        data:
        - throttle: throttle
          created_at: 2000-01-23T04:56:07.000+00:00
          api_key_created_by_user: true
          enabled: true
          running: true
          notify_when: notify_when
          next_run: 2000-01-23T04:56:07.000+00:00
          updated_at: updated_at
          execution_status:
            last_execution_date: 2000-01-23T04:56:07.000+00:00
            last_duration: 6
            status: status
          scheduled_task_id: scheduled_task_id
          id: id
          consumer: consumer
          alert_delay:
            active: 3
          last_run:
            alerts_count:
              ignored: 5
              new: 5
              recovered: 2
              active: 1
            outcome_msg:
            - outcome_msg
            - outcome_msg
            outcome_order: 7
            warning: warning
            outcome: outcome
          params:
            key: ""
          created_by: created_by
          muted_alert_ids:
          - muted_alert_ids
          - muted_alert_ids
          rule_type_id: rule_type_id
          revision: 9
          tags:
          - tags
          - tags
          api_key_owner: api_key_owner
          schedule:
            interval: interval
          name: name
          updated_by: updated_by
          mute_all: true
          actions:
          - alerts_filter:
              timeframe:
                hours:
                  start: start
                  end: end
                timezone: timezone
                days:
                - 0
                - 0
              query:
                kql: kql
                filters:
                - $state: "{}"
                  meta:
                    field: field
                    controlledBy: controlledBy
                    negate: true
                    alias: alias
                    index: index
                    disabled: true
                    params: "{}"
                    type: type
                    value: value
                    isMultiIndex: true
                    key: key
                    group: group
                  query: "{}"
                - $state: "{}"
                  meta:
                    field: field
                    controlledBy: controlledBy
                    negate: true
                    alias: alias
                    index: index
                    disabled: true
                    params: "{}"
                    type: type
                    value: value
                    isMultiIndex: true
                    key: key
                    group: group
                  query: "{}"
            id: id
            params:
              key: ""
            uuid: uuid
            connector_type_id: connector_type_id
            frequency:
              summary: true
              throttle: throttle
              notify_when: null
            group: group
          - alerts_filter:
              timeframe:
                hours:
                  start: start
                  end: end
                timezone: timezone
                days:
                - 0
                - 0
              query:
                kql: kql
                filters:
                - $state: "{}"
                  meta:
                    field: field
                    controlledBy: controlledBy
                    negate: true
                    alias: alias
                    index: index
                    disabled: true
                    params: "{}"
                    type: type
                    value: value
                    isMultiIndex: true
                    key: key
                    group: group
                  query: "{}"
                - $state: "{}"
                  meta:
                    field: field
                    controlledBy: controlledBy
                    negate: true
                    alias: alias
                    index: index
                    disabled: true
                    params: "{}"
                    type: type
                    value: value
                    isMultiIndex: true
                    key: key
                    group: group
                  query: "{}"
            id: id
            params:
              key: ""
            uuid: uuid
            connector_type_id: connector_type_id
            frequency:
              summary: true
              throttle: throttle
              notify_when: null
            group: group
        - throttle: throttle
          created_at: 2000-01-23T04:56:07.000+00:00
          api_key_created_by_user: true
          enabled: true
          running: true
          notify_when: notify_when
          next_run: 2000-01-23T04:56:07.000+00:00
          updated_at: updated_at
          execution_status:
            last_execution_date: 2000-01-23T04:56:07.000+00:00
            last_duration: 6
            status: status
          scheduled_task_id: scheduled_task_id
          id: id
          consumer: consumer
          alert_delay:
            active: 3
          last_run:
            alerts_count:
              ignored: 5
              new: 5
              recovered: 2
              active: 1
            outcome_msg:
            - outcome_msg
            - outcome_msg
            outcome_order: 7
            warning: warning
            outcome: outcome
          params:
            key: ""
          created_by: created_by
          muted_alert_ids:
          - muted_alert_ids
          - muted_alert_ids
          rule_type_id: rule_type_id
          revision: 9
          tags:
          - tags
          - tags
          api_key_owner: api_key_owner
          schedule:
            interval: interval
          name: name
          updated_by: updated_by
          mute_all: true
          actions:
          - alerts_filter:
              timeframe:
                hours:
                  start: start
                  end: end
                timezone: timezone
                days:
                - 0
                - 0
              query:
                kql: kql
                filters:
                - $state: "{}"
                  meta:
                    field: field
                    controlledBy: controlledBy
                    negate: true
                    alias: alias
                    index: index
                    disabled: true
                    params: "{}"
                    type: type
                    value: value
                    isMultiIndex: true
                    key: key
                    group: group
                  query: "{}"
                - $state: "{}"
                  meta:
                    field: field
                    controlledBy: controlledBy
                    negate: true
                    alias: alias
                    index: index
                    disabled: true
                    params: "{}"
                    type: type
                    value: value
                    isMultiIndex: true
                    key: key
                    group: group
                  query: "{}"
            id: id
            params:
              key: ""
            uuid: uuid
            connector_type_id: connector_type_id
            frequency:
              summary: true
              throttle: throttle
              notify_when: null
            group: group
          - alerts_filter:
              timeframe:
                hours:
                  start: start
                  end: end
                timezone: timezone
                days:
                - 0
                - 0
              query:
                kql: kql
                filters:
                - $state: "{}"
                  meta:
                    field: field
                    controlledBy: controlledBy
                    negate: true
                    alias: alias
                    index: index
                    disabled: true
                    params: "{}"
                    type: type
                    value: value
                    isMultiIndex: true
                    key: key
                    group: group
                  query: "{}"
                - $state: "{}"
                  meta:
                    field: field
                    controlledBy: controlledBy
                    negate: true
                    alias: alias
                    index: index
                    disabled: true
                    params: "{}"
                    type: type
                    value: value
                    isMultiIndex: true
                    key: key
                    group: group
                  query: "{}"
            id: id
            params:
              key: ""
            uuid: uuid
            connector_type_id: connector_type_id
            frequency:
              summary: true
              throttle: throttle
              notify_when: null
            group: group
        page: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/rule_response_properties'
          type: array
        page:
          type: integer
        per_page:
          type: integer
        total:
          type: integer
    getAlertingHealth_200_response_alerting_framework_health_decryption_health:
      description: The timestamp and status of the rule decryption.
      example:
        status: error
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          enum:
          - error
          - ok
          - warn
          type: string
        timestamp:
          format: date-time
          type: string
    getAlertingHealth_200_response_alerting_framework_health_execution_health:
      description: The timestamp and status of the rule run.
      example:
        status: error
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          enum:
          - error
          - ok
          - warn
          type: string
        timestamp:
          format: date-time
          type: string
    getAlertingHealth_200_response_alerting_framework_health_read_health:
      description: The timestamp and status of the rule reading events.
      example:
        status: error
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          enum:
          - error
          - ok
          - warn
          type: string
        timestamp:
          format: date-time
          type: string
    getAlertingHealth_200_response_alerting_framework_health:
      description: |
        Three substates identify the health of the alerting framework: `decryption_health`, `execution_health`, and `read_health`.
      example:
        execution_health:
          status: error
          timestamp: 2000-01-23T04:56:07.000+00:00
        read_health:
          status: error
          timestamp: 2000-01-23T04:56:07.000+00:00
        decryption_health:
          status: error
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        decryption_health:
          $ref: '#/components/schemas/getAlertingHealth_200_response_alerting_framework_health_decryption_health'
        execution_health:
          $ref: '#/components/schemas/getAlertingHealth_200_response_alerting_framework_health_execution_health'
        read_health:
          $ref: '#/components/schemas/getAlertingHealth_200_response_alerting_framework_health_read_health'
    getAlertingHealth_200_response:
      example:
        alerting_framework_health:
          execution_health:
            status: error
            timestamp: 2000-01-23T04:56:07.000+00:00
          read_health:
            status: error
            timestamp: 2000-01-23T04:56:07.000+00:00
          decryption_health:
            status: error
            timestamp: 2000-01-23T04:56:07.000+00:00
        has_permanent_encryption_key: true
        is_sufficiently_secure: true
      properties:
        alerting_framework_health:
          $ref: '#/components/schemas/getAlertingHealth_200_response_alerting_framework_health'
        has_permanent_encryption_key:
          description: "If `false`, the encrypted saved object plugin does not have\
            \ a permanent encryption key."
          type: boolean
        is_sufficiently_secure:
          description: "If `false`, security is enabled but TLS is not."
          type: boolean
    getRuleTypes_200_response_inner_action_groups_inner:
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
    getRuleTypes_200_response_inner_action_variables_context_inner:
      example:
        name: name
        description: description
        useWithTripleBracesInTemplates: true
      properties:
        name:
          type: string
        description:
          type: string
        useWithTripleBracesInTemplates:
          type: boolean
    getRuleTypes_200_response_inner_action_variables_params_inner:
      example:
        name: name
        description: description
      properties:
        description:
          type: string
        name:
          type: string
    getRuleTypes_200_response_inner_action_variables:
      description: |
        A list of action variables that the rule type makes available via context and state in action parameter templates, and a short human readable description. When you create a rule in Kibana, it uses this information to prompt you for these variables in action parameter editors.
      example:
        context:
        - name: name
          description: description
          useWithTripleBracesInTemplates: true
        - name: name
          description: description
          useWithTripleBracesInTemplates: true
        state:
        - name: name
          description: description
        - name: name
          description: description
        params:
        - name: name
          description: description
        - name: name
          description: description
      properties:
        context:
          items:
            $ref: '#/components/schemas/getRuleTypes_200_response_inner_action_variables_context_inner'
          type: array
        params:
          items:
            $ref: '#/components/schemas/getRuleTypes_200_response_inner_action_variables_params_inner'
          type: array
        state:
          items:
            $ref: '#/components/schemas/getRuleTypes_200_response_inner_action_variables_params_inner'
          type: array
    getRuleTypes_200_response_inner_alerts_mappings:
      example:
        fieldMap:
          key:
            path: path
            array: true
            format: format
            ignore_above: 0
            index: true
            dynamic: true
            scaling_factor: 6
            type: scaled_float
            properties:
              key:
                type: type
            required: true
      properties:
        fieldMap:
          additionalProperties:
            $ref: '#/components/schemas/fieldmap_properties'
          description: |
            Mapping information for each field supported in alerts as data documents for this rule type. For more information about mapping parameters, refer to the Elasticsearch documentation.
    getRuleTypes_200_response_inner_alerts:
      description: |
        Details for writing alerts as data documents for this rule type.
      example:
        shouldWrite: true
        mappings:
          fieldMap:
            key:
              path: path
              array: true
              format: format
              ignore_above: 0
              index: true
              dynamic: true
              scaling_factor: 6
              type: scaled_float
              properties:
                key:
                  type: type
              required: true
        useEcs: true
        context: ml.anomaly-detection
        useLegacyAlerts: false
        dynamic: "false"
        isSpaceAware: true
        secondaryAlias: secondaryAlias
      properties:
        context:
          description: |
            The namespace for this rule type.
          enum:
          - ml.anomaly-detection
          - observability.apm
          - observability.logs
          - observability.metrics
          - observability.slo
          - observability.threshold
          - observability.uptime
          - security
          - stack
          type: string
        dynamic:
          description: Indicates whether new fields are added dynamically.
          enum:
          - "false"
          - runtime
          - strict
          - "true"
          type: string
        isSpaceAware:
          description: |
            Indicates whether the alerts are space-aware. If true, space-specific alert indices are used.
          type: boolean
        mappings:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_alerts_mappings'
        secondaryAlias:
          description: |
            A secondary alias. It is typically used to support the signals alias for detection rules.
          type: string
        shouldWrite:
          description: |
            Indicates whether the rule should write out alerts as data.
          type: boolean
        useEcs:
          description: |
            Indicates whether to include the ECS component template for the alerts.
          type: boolean
        useLegacyAlerts:
          default: false
          description: |
            Indicates whether to include the legacy component template for the alerts.
          type: boolean
    getRuleTypes_200_response_inner_authorized_consumers_alerts:
      example:
        all: true
        read: true
      properties:
        all:
          type: boolean
        read:
          type: boolean
    getRuleTypes_200_response_inner_authorized_consumers:
      description: The list of the plugins IDs that have access to the rule type.
      example:
        alerts:
          all: true
          read: true
        discover:
          all: true
          read: true
        stackAlerts:
          all: true
          read: true
        infrastructure:
          all: true
          read: true
        slo:
          all: true
          read: true
        siem:
          all: true
          read: true
        monitoring:
          all: true
          read: true
        logs:
          all: true
          read: true
        apm:
          all: true
          read: true
        ml:
          all: true
          read: true
        uptime:
          all: true
          read: true
      properties:
        alerts:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
        apm:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
        discover:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
        infrastructure:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
        logs:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
        ml:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
        monitoring:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
        siem:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
        slo:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
        stackAlerts:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
        uptime:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers_alerts'
    getRuleTypes_200_response_inner_recovery_action_group:
      description: An action group to use when an alert goes from an active state
        to an inactive one.
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
    getRuleTypes_200_response_inner:
      example:
        has_alerts_mappings: true
        has_fields_for_a_a_d: true
        recovery_action_group:
          name: name
          id: id
        does_set_recovery_context: true
        is_exportable: true
        authorized_consumers:
          alerts:
            all: true
            read: true
          discover:
            all: true
            read: true
          stackAlerts:
            all: true
            read: true
          infrastructure:
            all: true
            read: true
          slo:
            all: true
            read: true
          siem:
            all: true
            read: true
          monitoring:
            all: true
            read: true
          logs:
            all: true
            read: true
          apm:
            all: true
            read: true
          ml:
            all: true
            read: true
          uptime:
            all: true
            read: true
        action_groups:
        - name: name
          id: id
        - name: name
          id: id
        minimum_license_required: minimum_license_required
        action_variables:
          context:
          - name: name
            description: description
            useWithTripleBracesInTemplates: true
          - name: name
            description: description
            useWithTripleBracesInTemplates: true
          state:
          - name: name
            description: description
          - name: name
            description: description
          params:
          - name: name
            description: description
          - name: name
            description: description
        alerts:
          shouldWrite: true
          mappings:
            fieldMap:
              key:
                path: path
                array: true
                format: format
                ignore_above: 0
                index: true
                dynamic: true
                scaling_factor: 6
                type: scaled_float
                properties:
                  key:
                    type: type
                required: true
          useEcs: true
          context: ml.anomaly-detection
          useLegacyAlerts: false
          dynamic: "false"
          isSpaceAware: true
          secondaryAlias: secondaryAlias
        rule_task_timeout: rule_task_timeout
        name: name
        enabled_in_license: true
        producer: producer
        id: id
        category: management
        default_action_group_id: default_action_group_id
      properties:
        action_groups:
          items:
            $ref: '#/components/schemas/getRuleTypes_200_response_inner_action_groups_inner'
          type: array
        action_variables:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_action_variables'
        alerts:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_alerts'
        authorized_consumers:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_authorized_consumers'
        category:
          description: "The rule category, which is used by features such as category-specific\
            \ maintenance windows."
          enum:
          - management
          - observability
          - securitySolution
          type: string
        default_action_group_id:
          description: The default identifier for the rule type group.
          type: string
        does_set_recovery_context:
          description: Indicates whether the rule passes context variables to its
            recovery action.
          type: boolean
        enabled_in_license:
          description: Indicates whether the rule type is enabled or disabled based
            on the subscription.
          type: boolean
        has_alerts_mappings:
          description: Indicates whether the rule type has custom mappings for the
            alert data.
          type: boolean
        has_fields_for_a_a_d:
          type: boolean
        id:
          description: The unique identifier for the rule type.
          type: string
        is_exportable:
          description: Indicates whether the rule type is exportable in **Stack Management
            > Saved Objects**.
          type: boolean
        minimum_license_required:
          description: The subscriptions required to use the rule type.
          type: string
        name:
          description: The descriptive name of the rule type.
          type: string
        producer:
          description: An identifier for the application that produces this rule type.
          type: string
        recovery_action_group:
          $ref: '#/components/schemas/getRuleTypes_200_response_inner_recovery_action_group'
        rule_task_timeout:
          type: string
    Legacy_update_alert_request_properties_actions_inner:
      properties:
        actionTypeId:
          description: The identifier for the action type.
          type: string
        group:
          description: |
            Grouping actions is recommended for escalations for different types of alert instances. If you don't need this functionality, set it to `default`.
          type: string
        id:
          description: The ID of the action saved object to execute.
          type: string
        params:
          description: |
            The map to the `params` that the action type will receive. `params` are handled as Mustache templates and passed a default set of context.
          type: object
      required:
      - actionTypeId
      - group
      - id
      - params
    Legacy_update_alert_request_properties_schedule:
      description: |
        The schedule specifying when this alert should be run. A schedule is structured such that the key specifies the format you wish to use and its value specifies the schedule.
      properties:
        interval:
          description: "The interval format specifies the interval in seconds, minutes,\
            \ hours or days at which the alert should execute."
          type: string
    Legacy_update_alert_request_properties:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Legacy_update_alert_request_properties_actions_inner'
          type: array
        name:
          description: A name to reference and search.
          type: string
        notifyWhen:
          description: The condition for throttling the notification.
          enum:
          - onActionGroupChange
          - onActiveAlert
          - onThrottleInterval
          type: string
        params:
          description: "The parameters to pass to the alert type executor `params`\
            \ value. This will also validate against the alert type params validator,\
            \ if defined."
          type: object
        schedule:
          $ref: '#/components/schemas/Legacy_update_alert_request_properties_schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          description: |
            How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of `10m` or `1h` will prevent it from sending 90 notifications during this period.
          type: string
      required:
      - name
      - notifyWhen
      - params
      - schedule
      title: Legacy update alert request properties
    Legacy_create_alert_request_properties:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Legacy_update_alert_request_properties_actions_inner'
          type: array
        alertTypeId:
          description: The ID of the alert type that you want to call when the alert
            is scheduled to run.
          type: string
        consumer:
          description: "The name of the application that owns the alert. This name\
            \ has to match the Kibana feature name, as that dictates the required\
            \ role-based access control privileges."
          type: string
        enabled:
          description: Indicates if you want to run the alert on an interval basis
            after it is created.
          type: boolean
        name:
          description: A name to reference and search.
          type: string
        notifyWhen:
          description: The condition for throttling the notification.
          enum:
          - onActionGroupChange
          - onActiveAlert
          - onThrottleInterval
          type: string
        params:
          description: "The parameters to pass to the alert type executor `params`\
            \ value. This will also validate against the alert type params validator,\
            \ if defined."
          type: object
        schedule:
          $ref: '#/components/schemas/Legacy_update_alert_request_properties_schedule'
        tags:
          items:
            type: string
          type: array
        throttle:
          description: |
            How often this alert should fire the same actions. This will prevent the alert from sending out the same notification over and over. For example, if an alert with a schedule of 1 minute stays in a triggered state for 90 minutes, setting a throttle of `10m` or `1h` will prevent it from sending 90 notifications during this period.
          type: string
      required:
      - alertTypeId
      - consumer
      - name
      - notifyWhen
      - params
      - schedule
      title: Legacy create alert request properties
    legacyFindAlerts_200_response:
      example:
        total: 1
        perPage: 6
        data:
        - alertTypeId: alertTypeId
          throttle: throttle
          updatedBy: updatedBy
          executionStatus:
            lastExecutionDate: 2000-01-23T04:56:07.000+00:00
            status: status
          params:
            key: ""
          enabled: true
          mutedInstanceIds:
          - mutedInstanceIds
          - mutedInstanceIds
          tags:
          - tags
          - tags
          createdAt: 2000-01-23T04:56:07.000+00:00
          schedule:
            interval: interval
          notifyWhen: notifyWhen
          createdBy: createdBy
          muteAll: true
          name: name
          scheduledTaskId: scheduledTaskId
          id: id
          actions:
          - "{}"
          - "{}"
          apiKeyOwner: apiKeyOwner
          updatedAt: updatedAt
        - alertTypeId: alertTypeId
          throttle: throttle
          updatedBy: updatedBy
          executionStatus:
            lastExecutionDate: 2000-01-23T04:56:07.000+00:00
            status: status
          params:
            key: ""
          enabled: true
          mutedInstanceIds:
          - mutedInstanceIds
          - mutedInstanceIds
          tags:
          - tags
          - tags
          createdAt: 2000-01-23T04:56:07.000+00:00
          schedule:
            interval: interval
          notifyWhen: notifyWhen
          createdBy: createdBy
          muteAll: true
          name: name
          scheduledTaskId: scheduledTaskId
          id: id
          actions:
          - "{}"
          - "{}"
          apiKeyOwner: apiKeyOwner
          updatedAt: updatedAt
        page: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/alert_response_properties'
          type: array
        page:
          type: integer
        perPage:
          type: integer
        total:
          type: integer
    legacyGetAlertingHealth_200_response_alertingFrameworkHealth_decryptionHealth:
      description: The timestamp and status of the alert decryption.
      example:
        status: error
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          enum:
          - error
          - ok
          - warn
          type: string
        timestamp:
          format: date-time
          type: string
    legacyGetAlertingHealth_200_response_alertingFrameworkHealth_executionHealth:
      description: The timestamp and status of the alert execution.
      example:
        status: error
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          enum:
          - error
          - ok
          - warn
          type: string
        timestamp:
          format: date-time
          type: string
    legacyGetAlertingHealth_200_response_alertingFrameworkHealth_readHealth:
      description: The timestamp and status of the alert reading events.
      example:
        status: error
        timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        status:
          enum:
          - error
          - ok
          - warn
          type: string
        timestamp:
          format: date-time
          type: string
    legacyGetAlertingHealth_200_response_alertingFrameworkHealth:
      description: |
        Three substates identify the health of the alerting framework: `decryptionHealth`, `executionHealth`, and `readHealth`.
      example:
        executionHealth:
          status: error
          timestamp: 2000-01-23T04:56:07.000+00:00
        decryptionHealth:
          status: error
          timestamp: 2000-01-23T04:56:07.000+00:00
        readHealth:
          status: error
          timestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        decryptionHealth:
          $ref: '#/components/schemas/legacyGetAlertingHealth_200_response_alertingFrameworkHealth_decryptionHealth'
        executionHealth:
          $ref: '#/components/schemas/legacyGetAlertingHealth_200_response_alertingFrameworkHealth_executionHealth'
        readHealth:
          $ref: '#/components/schemas/legacyGetAlertingHealth_200_response_alertingFrameworkHealth_readHealth'
    legacyGetAlertingHealth_200_response:
      example:
        hasPermanentEncryptionKey: true
        alertingFrameworkHealth:
          executionHealth:
            status: error
            timestamp: 2000-01-23T04:56:07.000+00:00
          decryptionHealth:
            status: error
            timestamp: 2000-01-23T04:56:07.000+00:00
          readHealth:
            status: error
            timestamp: 2000-01-23T04:56:07.000+00:00
        isSufficientlySecure: true
      properties:
        alertingFrameworkHealth:
          $ref: '#/components/schemas/legacyGetAlertingHealth_200_response_alertingFrameworkHealth'
        hasPermanentEncryptionKey:
          description: "If `false`, the encrypted saved object plugin does not have\
            \ a permanent encryption key."
          type: boolean
        isSufficientlySecure:
          description: "If `false`, security is enabled but TLS is not."
          type: boolean
    legacyGetAlertTypes_200_response_inner_actionVariables:
      description: |
        A list of action variables that the alert type makes available via context and state in action parameter templates, and a short human readable description. The Alert UI will use this information to prompt users for these variables in action parameter editors.
      example:
        context:
        - name: name
          description: description
        - name: name
          description: description
        state: ""
        params: ""
      properties:
        context:
          items:
            $ref: '#/components/schemas/getRuleTypes_200_response_inner_action_variables_params_inner'
          type: array
        params:
          items:
            properties:
              description:
                type: string
              name:
                type: string
        state:
          items:
            properties:
              description:
                type: string
              name:
                type: string
    legacyGetAlertTypes_200_response_inner_recoveryActionGroup:
      description: |
        An action group to use when an alert instance goes from an active state to an inactive one. If it is not specified, the default recovered action group is used.
      example:
        name: name
        id: id
      properties:
        id:
          type: string
        name:
          type: string
    legacyGetAlertTypes_200_response_inner:
      example:
        defaultActionGroupId: defaultActionGroupId
        isExportable: true
        actionVariables:
          context:
          - name: name
            description: description
          - name: name
            description: description
          state: ""
          params: ""
        actionGroups:
        - name: name
          id: id
        - name: name
          id: id
        name: name
        producer: producer
        authorizedConsumers: "{}"
        recoveryActionGroup:
          name: name
          id: id
        enabledInLicense: true
        id: id
        minimumLicenseRequired: minimumLicenseRequired
      properties:
        actionGroups:
          items:
            $ref: '#/components/schemas/getRuleTypes_200_response_inner_action_groups_inner'
          type: array
        actionVariables:
          $ref: '#/components/schemas/legacyGetAlertTypes_200_response_inner_actionVariables'
        authorizedConsumers:
          description: The list of the plugins IDs that have access to the alert type.
          type: object
        defaultActionGroupId:
          description: The default identifier for the alert type group.
          type: string
        enabledInLicense:
          description: Indicates whether the rule type is enabled based on the subscription.
          type: boolean
        id:
          description: The unique identifier for the alert type.
          type: string
        isExportable:
          description: Indicates whether the alert type is exportable in Saved Objects
            Management UI.
          type: boolean
        minimumLicenseRequired:
          description: The subscriptions required to use the alert type.
          type: string
        name:
          description: The descriptive name of the alert type.
          type: string
        producer:
          description: An identifier for the application that produces this alert
            type.
          type: string
        recoveryActionGroup:
          $ref: '#/components/schemas/legacyGetAlertTypes_200_response_inner_recoveryActionGroup'
    filter_meta:
      example:
        field: field
        controlledBy: controlledBy
        negate: true
        alias: alias
        index: index
        disabled: true
        params: "{}"
        type: type
        value: value
        isMultiIndex: true
        key: key
        group: group
      properties:
        alias:
          nullable: true
          type: string
        controlledBy:
          type: string
        disabled:
          type: boolean
        field:
          type: string
        group:
          type: string
        index:
          type: string
        isMultiIndex:
          type: boolean
        key:
          type: string
        negate:
          type: boolean
        params:
          type: object
        type:
          type: string
        value:
          type: string
    actions_inner_alerts_filter_query:
      description: Defines a query filter that determines whether the action runs.
      example:
        kql: kql
        filters:
        - $state: "{}"
          meta:
            field: field
            controlledBy: controlledBy
            negate: true
            alias: alias
            index: index
            disabled: true
            params: "{}"
            type: type
            value: value
            isMultiIndex: true
            key: key
            group: group
          query: "{}"
        - $state: "{}"
          meta:
            field: field
            controlledBy: controlledBy
            negate: true
            alias: alias
            index: index
            disabled: true
            params: "{}"
            type: type
            value: value
            isMultiIndex: true
            key: key
            group: group
          query: "{}"
      properties:
        kql:
          description: A filter written in Kibana Query Language (KQL).
          type: string
        filters:
          items:
            $ref: '#/components/schemas/filter'
          type: array
    actions_inner_alerts_filter_timeframe_hours:
      description: |
        Defines the range of time in a day that the action can run. If the `start` value is `00:00` and the `end` value is `24:00`, actions be generated all day.
      example:
        start: start
        end: end
      properties:
        end:
          description: The end of the time frame in 24-hour notation (`hh:mm`).
          type: string
        start:
          description: The start of the time frame in 24-hour notation (`hh:mm`).
          type: string
    actions_inner_alerts_filter_timeframe:
      description: Defines a period that limits whether the action runs.
      example:
        hours:
          start: start
          end: end
        timezone: timezone
        days:
        - 0
        - 0
      properties:
        days:
          items:
            type: integer
          type: array
        hours:
          $ref: '#/components/schemas/actions_inner_alerts_filter_timeframe_hours'
        timezone:
          description: |
            The ISO time zone for the `hours` values. Values such as `UTC` and `UTC+1` also work but lack built-in daylight savings time support and are not recommended.
          type: string
    actions_inner_alerts_filter:
      description: |
        Conditions that affect whether the action runs. If you specify multiple conditions, all conditions must be met for the action to run. For example, if an alert occurs within the specified time frame and matches the query, the action runs.
      example:
        timeframe:
          hours:
            start: start
            end: end
          timezone: timezone
          days:
          - 0
          - 0
        query:
          kql: kql
          filters:
          - $state: "{}"
            meta:
              field: field
              controlledBy: controlledBy
              negate: true
              alias: alias
              index: index
              disabled: true
              params: "{}"
              type: type
              value: value
              isMultiIndex: true
              key: key
              group: group
            query: "{}"
          - $state: "{}"
            meta:
              field: field
              controlledBy: controlledBy
              negate: true
              alias: alias
              index: index
              disabled: true
              params: "{}"
              type: type
              value: value
              isMultiIndex: true
              key: key
              group: group
            query: "{}"
      properties:
        query:
          $ref: '#/components/schemas/actions_inner_alerts_filter_query'
        timeframe:
          $ref: '#/components/schemas/actions_inner_alerts_filter_timeframe'
    actions_inner_frequency:
      description: |
        The properties that affect how often actions are generated. If the rule type supports setting `summary` to `true`, the action can be a summary of alerts at the specified notification interval. Otherwise, an action runs for each alert at the specified notification interval. NOTE: You cannot specify these parameters when `notify_when` or `throttle` are defined at the rule level.
      example:
        summary: true
        throttle: throttle
        notify_when: null
      properties:
        notify_when:
          $ref: '#/components/schemas/notify_when_action'
        summary:
          description: Indicates whether the action is a summary.
          type: boolean
        throttle:
          description: |
            The throttle interval, which defines how often an alert generates repeated actions. It is specified in seconds, minutes, hours, or days and is applicable only if `notify_when` is set to `onThrottleInterval`. NOTE: You cannot specify the throttle interval at both the rule and action level. The recommended method is to set it for each action. If you set it at the rule level then update the rule in Kibana, it is automatically changed to use action-specific values.
          nullable: true
          type: string
      required:
      - notify_when
      - summary
    actions_inner:
      description: |
        An action that runs under defined conditions.
      example:
        alerts_filter:
          timeframe:
            hours:
              start: start
              end: end
            timezone: timezone
            days:
            - 0
            - 0
          query:
            kql: kql
            filters:
            - $state: "{}"
              meta:
                field: field
                controlledBy: controlledBy
                negate: true
                alias: alias
                index: index
                disabled: true
                params: "{}"
                type: type
                value: value
                isMultiIndex: true
                key: key
                group: group
              query: "{}"
            - $state: "{}"
              meta:
                field: field
                controlledBy: controlledBy
                negate: true
                alias: alias
                index: index
                disabled: true
                params: "{}"
                type: type
                value: value
                isMultiIndex: true
                key: key
                group: group
              query: "{}"
        id: id
        params:
          key: ""
        uuid: uuid
        connector_type_id: connector_type_id
        frequency:
          summary: true
          throttle: throttle
          notify_when: null
        group: group
      properties:
        alerts_filter:
          $ref: '#/components/schemas/actions_inner_alerts_filter'
        connector_type_id:
          description: The type of connector. This property appears in responses but
            cannot be set in requests.
          readOnly: true
          type: string
        frequency:
          $ref: '#/components/schemas/actions_inner_frequency'
        group:
          description: |
            The group name, which affects when the action runs (for example, when the threshold is met or when the alert is recovered). Each rule type has a list of valid action group names. If you don't need to group actions, set to `default`.
          type: string
        id:
          description: The identifier for the connector saved object.
          type: string
        params:
          additionalProperties: true
          description: "The parameters for the action, which are sent to the connector.\
            \ The `params` are handled as Mustache templates and passed a default\
            \ set of context."
          type: object
        uuid:
          description: A universally unique identifier (UUID) for the action.
          type: string
      required:
      - group
      - id
      - params
    params_property_infra_inventory_criteria_inner_customMetric:
      properties:
        type:
          enum:
          - custom
          type: string
        field:
          type: string
        aggregation:
          enum:
          - avg
          - max
          - min
          - rate
          type: string
        id:
          type: string
        label:
          type: string
    params_property_infra_inventory_criteria_inner:
      properties:
        metric:
          enum:
          - count
          - cpu
          - diskLatency
          - load
          - memory
          - memoryTotal
          - tx
          - rx
          - logRate
          - diskIOReadBytes
          - diskIOWriteBytes
          - s3TotalRequests
          - s3NumberOfObjects
          - s3BucketSize
          - s3DownloadBytes
          - s3UploadBytes
          - rdsConnections
          - rdsQueriesExecuted
          - rdsActiveTransactions
          - rdsLatency
          - sqsMessagesVisible
          - sqsMessagesDelayed
          - sqsMessagesSent
          - sqsMessagesEmpty
          - sqsOldestMessage
          - custom
          type: string
        timeSize:
          type: number
        timeUnit:
          enum:
          - s
          - m
          - h
          - d
          type: string
        sourceId:
          type: string
        threshold:
          items:
            type: number
          type: array
        comparator:
          enum:
          - <
          - <=
          - '>'
          - '>='
          - between
          - outside
          type: string
        customMetric:
          $ref: '#/components/schemas/params_property_infra_inventory_criteria_inner_customMetric'
        warningThreshold:
          items:
            type: number
          type: array
        warningComparator:
          enum:
          - <
          - <=
          - '>'
          - '>='
          - between
          - outside
          type: string
    params_property_slo_burn_rate_longWindow:
      description: The duration of the long window used to compute the burn rate
      properties:
        value:
          description: The duration value
          example: 6
          type: number
        unit:
          description: The duration unit
          example: h
          type: string
    params_property_slo_burn_rate_shortWindow:
      description: The duration of the short window used to compute the burn rate
      properties:
        value:
          description: The duration value
          example: 30
          type: number
        unit:
          description: The duration unit
          example: m
          type: string
    params_property_synthetics_monitor_status_availability:
      properties:
        range:
          type: number
        rangeUnit:
          type: string
        threshold:
          type: string
    params_property_synthetics_monitor_status_timerange:
      deprecated: true
      properties:
        from:
          type: string
        to:
          type: string
    rule_response_properties_execution_status:
      example:
        last_execution_date: 2000-01-23T04:56:07.000+00:00
        last_duration: 6
        status: status
      properties:
        last_duration:
          type: integer
        last_execution_date:
          format: date-time
          type: string
        status:
          type: string
    rule_response_properties_last_run_alerts_count:
      example:
        ignored: 5
        new: 5
        recovered: 2
        active: 1
      properties:
        active:
          type: integer
        ignored:
          type: integer
        new:
          type: integer
        recovered:
          type: integer
    rule_response_properties_last_run:
      example:
        alerts_count:
          ignored: 5
          new: 5
          recovered: 2
          active: 1
        outcome_msg:
        - outcome_msg
        - outcome_msg
        outcome_order: 7
        warning: warning
        outcome: outcome
      properties:
        alerts_count:
          $ref: '#/components/schemas/rule_response_properties_last_run_alerts_count'
        outcome:
          type: string
        outcome_msg:
          items:
            type: string
          type: array
        outcome_order:
          type: integer
        warning:
          nullable: true
          type: string
    fieldmap_properties_properties_value:
      example:
        type: type
      properties:
        type:
          description: The data type for each object property.
          type: string
    alert_response_properties_executionStatus:
      example:
        lastExecutionDate: 2000-01-23T04:56:07.000+00:00
        status: status
      properties:
        lastExecutionDate:
          format: date-time
          type: string
        status:
          type: string
    alert_response_properties_schedule:
      example:
        interval: interval
      properties:
        interval:
          type: string
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    apiKeyAuth:
      description: "e.g. Authorization: ApiKey base64AccessApiKey"
      in: header
      name: Authorization
      type: apiKey
