/*
Alerting

OpenAPI schema for alerting endpoints

API version: 0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package alerting

import (
	"encoding/json"
)

// checks if the ParamsPropertyInfraInventory type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParamsPropertyInfraInventory{}

// ParamsPropertyInfraInventory struct for ParamsPropertyInfraInventory
type ParamsPropertyInfraInventory struct {
	Criteria        []ParamsPropertyInfraInventoryCriteriaInner `json:"criteria,omitempty"`
	FilterQuery     *string                                     `json:"filterQuery,omitempty"`
	FilterQueryText *string                                     `json:"filterQueryText,omitempty"`
	NodeType        *string                                     `json:"nodeType,omitempty"`
	SourceId        *string                                     `json:"sourceId,omitempty"`
	AlertOnNoData   *bool                                       `json:"alertOnNoData,omitempty"`
}

// NewParamsPropertyInfraInventory instantiates a new ParamsPropertyInfraInventory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParamsPropertyInfraInventory() *ParamsPropertyInfraInventory {
	this := ParamsPropertyInfraInventory{}
	return &this
}

// NewParamsPropertyInfraInventoryWithDefaults instantiates a new ParamsPropertyInfraInventory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParamsPropertyInfraInventoryWithDefaults() *ParamsPropertyInfraInventory {
	this := ParamsPropertyInfraInventory{}
	return &this
}

// GetCriteria returns the Criteria field value if set, zero value otherwise.
func (o *ParamsPropertyInfraInventory) GetCriteria() []ParamsPropertyInfraInventoryCriteriaInner {
	if o == nil || IsNil(o.Criteria) {
		var ret []ParamsPropertyInfraInventoryCriteriaInner
		return ret
	}
	return o.Criteria
}

// GetCriteriaOk returns a tuple with the Criteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertyInfraInventory) GetCriteriaOk() ([]ParamsPropertyInfraInventoryCriteriaInner, bool) {
	if o == nil || IsNil(o.Criteria) {
		return nil, false
	}
	return o.Criteria, true
}

// HasCriteria returns a boolean if a field has been set.
func (o *ParamsPropertyInfraInventory) HasCriteria() bool {
	if o != nil && !IsNil(o.Criteria) {
		return true
	}

	return false
}

// SetCriteria gets a reference to the given []ParamsPropertyInfraInventoryCriteriaInner and assigns it to the Criteria field.
func (o *ParamsPropertyInfraInventory) SetCriteria(v []ParamsPropertyInfraInventoryCriteriaInner) {
	o.Criteria = v
}

// GetFilterQuery returns the FilterQuery field value if set, zero value otherwise.
func (o *ParamsPropertyInfraInventory) GetFilterQuery() string {
	if o == nil || IsNil(o.FilterQuery) {
		var ret string
		return ret
	}
	return *o.FilterQuery
}

// GetFilterQueryOk returns a tuple with the FilterQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertyInfraInventory) GetFilterQueryOk() (*string, bool) {
	if o == nil || IsNil(o.FilterQuery) {
		return nil, false
	}
	return o.FilterQuery, true
}

// HasFilterQuery returns a boolean if a field has been set.
func (o *ParamsPropertyInfraInventory) HasFilterQuery() bool {
	if o != nil && !IsNil(o.FilterQuery) {
		return true
	}

	return false
}

// SetFilterQuery gets a reference to the given string and assigns it to the FilterQuery field.
func (o *ParamsPropertyInfraInventory) SetFilterQuery(v string) {
	o.FilterQuery = &v
}

// GetFilterQueryText returns the FilterQueryText field value if set, zero value otherwise.
func (o *ParamsPropertyInfraInventory) GetFilterQueryText() string {
	if o == nil || IsNil(o.FilterQueryText) {
		var ret string
		return ret
	}
	return *o.FilterQueryText
}

// GetFilterQueryTextOk returns a tuple with the FilterQueryText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertyInfraInventory) GetFilterQueryTextOk() (*string, bool) {
	if o == nil || IsNil(o.FilterQueryText) {
		return nil, false
	}
	return o.FilterQueryText, true
}

// HasFilterQueryText returns a boolean if a field has been set.
func (o *ParamsPropertyInfraInventory) HasFilterQueryText() bool {
	if o != nil && !IsNil(o.FilterQueryText) {
		return true
	}

	return false
}

// SetFilterQueryText gets a reference to the given string and assigns it to the FilterQueryText field.
func (o *ParamsPropertyInfraInventory) SetFilterQueryText(v string) {
	o.FilterQueryText = &v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *ParamsPropertyInfraInventory) GetNodeType() string {
	if o == nil || IsNil(o.NodeType) {
		var ret string
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertyInfraInventory) GetNodeTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NodeType) {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *ParamsPropertyInfraInventory) HasNodeType() bool {
	if o != nil && !IsNil(o.NodeType) {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given string and assigns it to the NodeType field.
func (o *ParamsPropertyInfraInventory) SetNodeType(v string) {
	o.NodeType = &v
}

// GetSourceId returns the SourceId field value if set, zero value otherwise.
func (o *ParamsPropertyInfraInventory) GetSourceId() string {
	if o == nil || IsNil(o.SourceId) {
		var ret string
		return ret
	}
	return *o.SourceId
}

// GetSourceIdOk returns a tuple with the SourceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertyInfraInventory) GetSourceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceId) {
		return nil, false
	}
	return o.SourceId, true
}

// HasSourceId returns a boolean if a field has been set.
func (o *ParamsPropertyInfraInventory) HasSourceId() bool {
	if o != nil && !IsNil(o.SourceId) {
		return true
	}

	return false
}

// SetSourceId gets a reference to the given string and assigns it to the SourceId field.
func (o *ParamsPropertyInfraInventory) SetSourceId(v string) {
	o.SourceId = &v
}

// GetAlertOnNoData returns the AlertOnNoData field value if set, zero value otherwise.
func (o *ParamsPropertyInfraInventory) GetAlertOnNoData() bool {
	if o == nil || IsNil(o.AlertOnNoData) {
		var ret bool
		return ret
	}
	return *o.AlertOnNoData
}

// GetAlertOnNoDataOk returns a tuple with the AlertOnNoData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParamsPropertyInfraInventory) GetAlertOnNoDataOk() (*bool, bool) {
	if o == nil || IsNil(o.AlertOnNoData) {
		return nil, false
	}
	return o.AlertOnNoData, true
}

// HasAlertOnNoData returns a boolean if a field has been set.
func (o *ParamsPropertyInfraInventory) HasAlertOnNoData() bool {
	if o != nil && !IsNil(o.AlertOnNoData) {
		return true
	}

	return false
}

// SetAlertOnNoData gets a reference to the given bool and assigns it to the AlertOnNoData field.
func (o *ParamsPropertyInfraInventory) SetAlertOnNoData(v bool) {
	o.AlertOnNoData = &v
}

func (o ParamsPropertyInfraInventory) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParamsPropertyInfraInventory) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Criteria) {
		toSerialize["criteria"] = o.Criteria
	}
	if !IsNil(o.FilterQuery) {
		toSerialize["filterQuery"] = o.FilterQuery
	}
	if !IsNil(o.FilterQueryText) {
		toSerialize["filterQueryText"] = o.FilterQueryText
	}
	if !IsNil(o.NodeType) {
		toSerialize["nodeType"] = o.NodeType
	}
	if !IsNil(o.SourceId) {
		toSerialize["sourceId"] = o.SourceId
	}
	if !IsNil(o.AlertOnNoData) {
		toSerialize["alertOnNoData"] = o.AlertOnNoData
	}
	return toSerialize, nil
}

type NullableParamsPropertyInfraInventory struct {
	value *ParamsPropertyInfraInventory
	isSet bool
}

func (v NullableParamsPropertyInfraInventory) Get() *ParamsPropertyInfraInventory {
	return v.value
}

func (v *NullableParamsPropertyInfraInventory) Set(val *ParamsPropertyInfraInventory) {
	v.value = val
	v.isSet = true
}

func (v NullableParamsPropertyInfraInventory) IsSet() bool {
	return v.isSet
}

func (v *NullableParamsPropertyInfraInventory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParamsPropertyInfraInventory(val *ParamsPropertyInfraInventory) *NullableParamsPropertyInfraInventory {
	return &NullableParamsPropertyInfraInventory{value: val, isSet: true}
}

func (v NullableParamsPropertyInfraInventory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParamsPropertyInfraInventory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
