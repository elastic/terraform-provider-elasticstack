// Package geminikbapi provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package geminikbapi

import (
	"bytes"
	"context"
	"encoding/json"
	"fmt"
	"io"
	"net/http"
	"net/url"
	"strings"

	"github.com/oapi-codegen/runtime"
)

const (
	ApiKeyAuthScopes = "apiKeyAuth.Scopes"
	BasicAuthScopes  = "basicAuth.Scopes"
)

// Defines values for DataViews404ResponseError.
const (
	NotFound DataViews404ResponseError = "Not Found"
)

// Defines values for DataViews404ResponseStatusCode.
const (
	N404 DataViews404ResponseStatusCode = 404
)

// Defines values for KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevel.
const (
	KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevelAvailable   KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevel = "available"
	KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevelCritical    KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevel = "critical"
	KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevelDegraded    KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevel = "degraded"
	KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevelUnavailable KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevel = "unavailable"
)

// Defines values for KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevel.
const (
	KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevelAvailable   KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevel = "available"
	KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevelCritical    KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevel = "critical"
	KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevelDegraded    KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevel = "degraded"
	KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevelUnavailable KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevel = "unavailable"
)

// Defines values for KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevel.
const (
	KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevelAvailable   KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevel = "available"
	KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevelCritical    KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevel = "critical"
	KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevelDegraded    KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevel = "degraded"
	KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevelUnavailable KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevel = "unavailable"
)

// Defines values for KibanaHTTPAPIsCoreStatusResponseStatusOverallLevel.
const (
	KibanaHTTPAPIsCoreStatusResponseStatusOverallLevelAvailable   KibanaHTTPAPIsCoreStatusResponseStatusOverallLevel = "available"
	KibanaHTTPAPIsCoreStatusResponseStatusOverallLevelCritical    KibanaHTTPAPIsCoreStatusResponseStatusOverallLevel = "critical"
	KibanaHTTPAPIsCoreStatusResponseStatusOverallLevelDegraded    KibanaHTTPAPIsCoreStatusResponseStatusOverallLevel = "degraded"
	KibanaHTTPAPIsCoreStatusResponseStatusOverallLevelUnavailable KibanaHTTPAPIsCoreStatusResponseStatusOverallLevel = "unavailable"
)

// Defines values for KibanaHTTPAPIsCoreStatusResponseStatusPluginsLevel.
const (
	Available   KibanaHTTPAPIsCoreStatusResponseStatusPluginsLevel = "available"
	Critical    KibanaHTTPAPIsCoreStatusResponseStatusPluginsLevel = "critical"
	Degraded    KibanaHTTPAPIsCoreStatusResponseStatusPluginsLevel = "degraded"
	Unavailable KibanaHTTPAPIsCoreStatusResponseStatusPluginsLevel = "unavailable"
)

// Defines values for KibanaHTTPAPIsCoreStatusResponseVersionBuildFlavor.
const (
	Serverless  KibanaHTTPAPIsCoreStatusResponseVersionBuildFlavor = "serverless"
	Traditional KibanaHTTPAPIsCoreStatusResponseVersionBuildFlavor = "traditional"
)

// Defines values for GetFleetAgentPoliciesParamsSortOrder.
const (
	GetFleetAgentPoliciesParamsSortOrderAsc  GetFleetAgentPoliciesParamsSortOrder = "asc"
	GetFleetAgentPoliciesParamsSortOrderDesc GetFleetAgentPoliciesParamsSortOrder = "desc"
)

// Defines values for GetFleetAgentPoliciesParamsFormat.
const (
	GetFleetAgentPoliciesParamsFormatLegacy     GetFleetAgentPoliciesParamsFormat = "legacy"
	GetFleetAgentPoliciesParamsFormatSimplified GetFleetAgentPoliciesParamsFormat = "simplified"
)

// Defines values for PostFleetAgentPoliciesJSONBodyMonitoringEnabled.
const (
	PostFleetAgentPoliciesJSONBodyMonitoringEnabledLogs    PostFleetAgentPoliciesJSONBodyMonitoringEnabled = "logs"
	PostFleetAgentPoliciesJSONBodyMonitoringEnabledMetrics PostFleetAgentPoliciesJSONBodyMonitoringEnabled = "metrics"
	PostFleetAgentPoliciesJSONBodyMonitoringEnabledTraces  PostFleetAgentPoliciesJSONBodyMonitoringEnabled = "traces"
)

// Defines values for GetFleetAgentPoliciesAgentpolicyidParamsFormat.
const (
	GetFleetAgentPoliciesAgentpolicyidParamsFormatLegacy     GetFleetAgentPoliciesAgentpolicyidParamsFormat = "legacy"
	GetFleetAgentPoliciesAgentpolicyidParamsFormatSimplified GetFleetAgentPoliciesAgentpolicyidParamsFormat = "simplified"
)

// Defines values for PutFleetAgentPoliciesAgentpolicyidParamsFormat.
const (
	PutFleetAgentPoliciesAgentpolicyidParamsFormatLegacy     PutFleetAgentPoliciesAgentpolicyidParamsFormat = "legacy"
	PutFleetAgentPoliciesAgentpolicyidParamsFormatSimplified PutFleetAgentPoliciesAgentpolicyidParamsFormat = "simplified"
)

// Defines values for PutFleetAgentPoliciesAgentpolicyidJSONBodyMonitoringEnabled.
const (
	PutFleetAgentPoliciesAgentpolicyidJSONBodyMonitoringEnabledLogs    PutFleetAgentPoliciesAgentpolicyidJSONBodyMonitoringEnabled = "logs"
	PutFleetAgentPoliciesAgentpolicyidJSONBodyMonitoringEnabledMetrics PutFleetAgentPoliciesAgentpolicyidJSONBodyMonitoringEnabled = "metrics"
	PutFleetAgentPoliciesAgentpolicyidJSONBodyMonitoringEnabledTraces  PutFleetAgentPoliciesAgentpolicyidJSONBodyMonitoringEnabled = "traces"
)

// Defines values for PostFleetFleetServerHostsJSONBodySslClientAuth.
const (
	PostFleetFleetServerHostsJSONBodySslClientAuthNone     PostFleetFleetServerHostsJSONBodySslClientAuth = "none"
	PostFleetFleetServerHostsJSONBodySslClientAuthOptional PostFleetFleetServerHostsJSONBodySslClientAuth = "optional"
	PostFleetFleetServerHostsJSONBodySslClientAuthRequired PostFleetFleetServerHostsJSONBodySslClientAuth = "required"
)

// Defines values for PutFleetFleetServerHostsItemidJSONBodySslClientAuth.
const (
	PutFleetFleetServerHostsItemidJSONBodySslClientAuthNone     PutFleetFleetServerHostsItemidJSONBodySslClientAuth = "none"
	PutFleetFleetServerHostsItemidJSONBodySslClientAuthOptional PutFleetFleetServerHostsItemidJSONBodySslClientAuth = "optional"
	PutFleetFleetServerHostsItemidJSONBodySslClientAuthRequired PutFleetFleetServerHostsItemidJSONBodySslClientAuth = "required"
)

// Defines values for PostFleetOutputsJSONBody0Preset.
const (
	PostFleetOutputsJSONBody0PresetBalanced   PostFleetOutputsJSONBody0Preset = "balanced"
	PostFleetOutputsJSONBody0PresetCustom     PostFleetOutputsJSONBody0Preset = "custom"
	PostFleetOutputsJSONBody0PresetLatency    PostFleetOutputsJSONBody0Preset = "latency"
	PostFleetOutputsJSONBody0PresetScale      PostFleetOutputsJSONBody0Preset = "scale"
	PostFleetOutputsJSONBody0PresetThroughput PostFleetOutputsJSONBody0Preset = "throughput"
)

// Defines values for PostFleetOutputsJSONBody0SslVerificationMode.
const (
	PostFleetOutputsJSONBody0SslVerificationModeCertificate PostFleetOutputsJSONBody0SslVerificationMode = "certificate"
	PostFleetOutputsJSONBody0SslVerificationModeFull        PostFleetOutputsJSONBody0SslVerificationMode = "full"
	PostFleetOutputsJSONBody0SslVerificationModeNone        PostFleetOutputsJSONBody0SslVerificationMode = "none"
	PostFleetOutputsJSONBody0SslVerificationModeStrict      PostFleetOutputsJSONBody0SslVerificationMode = "strict"
)

// Defines values for PostFleetOutputsJSONBody0Type.
const (
	PostFleetOutputsJSONBody0TypeElasticsearch PostFleetOutputsJSONBody0Type = "elasticsearch"
)

// Defines values for PostFleetOutputsJSONBody1Preset.
const (
	PostFleetOutputsJSONBody1PresetBalanced   PostFleetOutputsJSONBody1Preset = "balanced"
	PostFleetOutputsJSONBody1PresetCustom     PostFleetOutputsJSONBody1Preset = "custom"
	PostFleetOutputsJSONBody1PresetLatency    PostFleetOutputsJSONBody1Preset = "latency"
	PostFleetOutputsJSONBody1PresetScale      PostFleetOutputsJSONBody1Preset = "scale"
	PostFleetOutputsJSONBody1PresetThroughput PostFleetOutputsJSONBody1Preset = "throughput"
)

// Defines values for PostFleetOutputsJSONBody1SslVerificationMode.
const (
	PostFleetOutputsJSONBody1SslVerificationModeCertificate PostFleetOutputsJSONBody1SslVerificationMode = "certificate"
	PostFleetOutputsJSONBody1SslVerificationModeFull        PostFleetOutputsJSONBody1SslVerificationMode = "full"
	PostFleetOutputsJSONBody1SslVerificationModeNone        PostFleetOutputsJSONBody1SslVerificationMode = "none"
	PostFleetOutputsJSONBody1SslVerificationModeStrict      PostFleetOutputsJSONBody1SslVerificationMode = "strict"
)

// Defines values for PostFleetOutputsJSONBody1Type.
const (
	PostFleetOutputsJSONBody1TypeRemoteElasticsearch PostFleetOutputsJSONBody1Type = "remote_elasticsearch"
)

// Defines values for PostFleetOutputsJSONBody2SslVerificationMode.
const (
	PostFleetOutputsJSONBody2SslVerificationModeCertificate PostFleetOutputsJSONBody2SslVerificationMode = "certificate"
	PostFleetOutputsJSONBody2SslVerificationModeFull        PostFleetOutputsJSONBody2SslVerificationMode = "full"
	PostFleetOutputsJSONBody2SslVerificationModeNone        PostFleetOutputsJSONBody2SslVerificationMode = "none"
	PostFleetOutputsJSONBody2SslVerificationModeStrict      PostFleetOutputsJSONBody2SslVerificationMode = "strict"
)

// Defines values for PostFleetOutputsJSONBody2Type.
const (
	PostFleetOutputsJSONBody2TypeLogstash PostFleetOutputsJSONBody2Type = "logstash"
)

// Defines values for PostFleetOutputsJSONBody3AuthType.
const (
	PostFleetOutputsJSONBody3AuthTypeKerberos PostFleetOutputsJSONBody3AuthType = "kerberos"
	PostFleetOutputsJSONBody3AuthTypeNone     PostFleetOutputsJSONBody3AuthType = "none"
	PostFleetOutputsJSONBody3AuthTypeSsl      PostFleetOutputsJSONBody3AuthType = "ssl"
	PostFleetOutputsJSONBody3AuthTypeUserPass PostFleetOutputsJSONBody3AuthType = "user_pass"
)

// Defines values for PostFleetOutputsJSONBody3Compression.
const (
	PostFleetOutputsJSONBody3CompressionGzip   PostFleetOutputsJSONBody3Compression = "gzip"
	PostFleetOutputsJSONBody3CompressionLz4    PostFleetOutputsJSONBody3Compression = "lz4"
	PostFleetOutputsJSONBody3CompressionNone   PostFleetOutputsJSONBody3Compression = "none"
	PostFleetOutputsJSONBody3CompressionSnappy PostFleetOutputsJSONBody3Compression = "snappy"
)

// Defines values for PostFleetOutputsJSONBody3Partition.
const (
	PostFleetOutputsJSONBody3PartitionHash       PostFleetOutputsJSONBody3Partition = "hash"
	PostFleetOutputsJSONBody3PartitionRandom     PostFleetOutputsJSONBody3Partition = "random"
	PostFleetOutputsJSONBody3PartitionRoundRobin PostFleetOutputsJSONBody3Partition = "round_robin"
)

// Defines values for PostFleetOutputsJSONBody3RequiredAcks.
const (
	PostFleetOutputsJSONBody3RequiredAcksMinus1 PostFleetOutputsJSONBody3RequiredAcks = -1
	PostFleetOutputsJSONBody3RequiredAcksN0     PostFleetOutputsJSONBody3RequiredAcks = 0
	PostFleetOutputsJSONBody3RequiredAcksN1     PostFleetOutputsJSONBody3RequiredAcks = 1
)

// Defines values for PostFleetOutputsJSONBody3SaslMechanism.
const (
	PostFleetOutputsJSONBody3SaslMechanismPLAIN       PostFleetOutputsJSONBody3SaslMechanism = "PLAIN"
	PostFleetOutputsJSONBody3SaslMechanismSCRAMSHA256 PostFleetOutputsJSONBody3SaslMechanism = "SCRAM-SHA-256"
	PostFleetOutputsJSONBody3SaslMechanismSCRAMSHA512 PostFleetOutputsJSONBody3SaslMechanism = "SCRAM-SHA-512"
)

// Defines values for PostFleetOutputsJSONBody3SslVerificationMode.
const (
	PostFleetOutputsJSONBody3SslVerificationModeCertificate PostFleetOutputsJSONBody3SslVerificationMode = "certificate"
	PostFleetOutputsJSONBody3SslVerificationModeFull        PostFleetOutputsJSONBody3SslVerificationMode = "full"
	PostFleetOutputsJSONBody3SslVerificationModeNone        PostFleetOutputsJSONBody3SslVerificationMode = "none"
	PostFleetOutputsJSONBody3SslVerificationModeStrict      PostFleetOutputsJSONBody3SslVerificationMode = "strict"
)

// Defines values for PostFleetOutputsJSONBody3Type.
const (
	PostFleetOutputsJSONBody3TypeKafka PostFleetOutputsJSONBody3Type = "kafka"
)

// Defines values for PutFleetOutputsOutputidJSONBody0Preset.
const (
	PutFleetOutputsOutputidJSONBody0PresetBalanced   PutFleetOutputsOutputidJSONBody0Preset = "balanced"
	PutFleetOutputsOutputidJSONBody0PresetCustom     PutFleetOutputsOutputidJSONBody0Preset = "custom"
	PutFleetOutputsOutputidJSONBody0PresetLatency    PutFleetOutputsOutputidJSONBody0Preset = "latency"
	PutFleetOutputsOutputidJSONBody0PresetScale      PutFleetOutputsOutputidJSONBody0Preset = "scale"
	PutFleetOutputsOutputidJSONBody0PresetThroughput PutFleetOutputsOutputidJSONBody0Preset = "throughput"
)

// Defines values for PutFleetOutputsOutputidJSONBody0SslVerificationMode.
const (
	PutFleetOutputsOutputidJSONBody0SslVerificationModeCertificate PutFleetOutputsOutputidJSONBody0SslVerificationMode = "certificate"
	PutFleetOutputsOutputidJSONBody0SslVerificationModeFull        PutFleetOutputsOutputidJSONBody0SslVerificationMode = "full"
	PutFleetOutputsOutputidJSONBody0SslVerificationModeNone        PutFleetOutputsOutputidJSONBody0SslVerificationMode = "none"
	PutFleetOutputsOutputidJSONBody0SslVerificationModeStrict      PutFleetOutputsOutputidJSONBody0SslVerificationMode = "strict"
)

// Defines values for PutFleetOutputsOutputidJSONBody0Type.
const (
	PutFleetOutputsOutputidJSONBody0TypeElasticsearch PutFleetOutputsOutputidJSONBody0Type = "elasticsearch"
)

// Defines values for PutFleetOutputsOutputidJSONBody1Preset.
const (
	PutFleetOutputsOutputidJSONBody1PresetBalanced   PutFleetOutputsOutputidJSONBody1Preset = "balanced"
	PutFleetOutputsOutputidJSONBody1PresetCustom     PutFleetOutputsOutputidJSONBody1Preset = "custom"
	PutFleetOutputsOutputidJSONBody1PresetLatency    PutFleetOutputsOutputidJSONBody1Preset = "latency"
	PutFleetOutputsOutputidJSONBody1PresetScale      PutFleetOutputsOutputidJSONBody1Preset = "scale"
	PutFleetOutputsOutputidJSONBody1PresetThroughput PutFleetOutputsOutputidJSONBody1Preset = "throughput"
)

// Defines values for PutFleetOutputsOutputidJSONBody1SslVerificationMode.
const (
	PutFleetOutputsOutputidJSONBody1SslVerificationModeCertificate PutFleetOutputsOutputidJSONBody1SslVerificationMode = "certificate"
	PutFleetOutputsOutputidJSONBody1SslVerificationModeFull        PutFleetOutputsOutputidJSONBody1SslVerificationMode = "full"
	PutFleetOutputsOutputidJSONBody1SslVerificationModeNone        PutFleetOutputsOutputidJSONBody1SslVerificationMode = "none"
	PutFleetOutputsOutputidJSONBody1SslVerificationModeStrict      PutFleetOutputsOutputidJSONBody1SslVerificationMode = "strict"
)

// Defines values for PutFleetOutputsOutputidJSONBody1Type.
const (
	PutFleetOutputsOutputidJSONBody1TypeRemoteElasticsearch PutFleetOutputsOutputidJSONBody1Type = "remote_elasticsearch"
)

// Defines values for PutFleetOutputsOutputidJSONBody2SslVerificationMode.
const (
	PutFleetOutputsOutputidJSONBody2SslVerificationModeCertificate PutFleetOutputsOutputidJSONBody2SslVerificationMode = "certificate"
	PutFleetOutputsOutputidJSONBody2SslVerificationModeFull        PutFleetOutputsOutputidJSONBody2SslVerificationMode = "full"
	PutFleetOutputsOutputidJSONBody2SslVerificationModeNone        PutFleetOutputsOutputidJSONBody2SslVerificationMode = "none"
	PutFleetOutputsOutputidJSONBody2SslVerificationModeStrict      PutFleetOutputsOutputidJSONBody2SslVerificationMode = "strict"
)

// Defines values for PutFleetOutputsOutputidJSONBody2Type.
const (
	PutFleetOutputsOutputidJSONBody2TypeLogstash PutFleetOutputsOutputidJSONBody2Type = "logstash"
)

// Defines values for PutFleetOutputsOutputidJSONBody3AuthType.
const (
	PutFleetOutputsOutputidJSONBody3AuthTypeKerberos PutFleetOutputsOutputidJSONBody3AuthType = "kerberos"
	PutFleetOutputsOutputidJSONBody3AuthTypeNone     PutFleetOutputsOutputidJSONBody3AuthType = "none"
	PutFleetOutputsOutputidJSONBody3AuthTypeSsl      PutFleetOutputsOutputidJSONBody3AuthType = "ssl"
	PutFleetOutputsOutputidJSONBody3AuthTypeUserPass PutFleetOutputsOutputidJSONBody3AuthType = "user_pass"
)

// Defines values for PutFleetOutputsOutputidJSONBody3Compression.
const (
	PutFleetOutputsOutputidJSONBody3CompressionGzip   PutFleetOutputsOutputidJSONBody3Compression = "gzip"
	PutFleetOutputsOutputidJSONBody3CompressionLz4    PutFleetOutputsOutputidJSONBody3Compression = "lz4"
	PutFleetOutputsOutputidJSONBody3CompressionNone   PutFleetOutputsOutputidJSONBody3Compression = "none"
	PutFleetOutputsOutputidJSONBody3CompressionSnappy PutFleetOutputsOutputidJSONBody3Compression = "snappy"
)

// Defines values for PutFleetOutputsOutputidJSONBody3Partition.
const (
	PutFleetOutputsOutputidJSONBody3PartitionHash       PutFleetOutputsOutputidJSONBody3Partition = "hash"
	PutFleetOutputsOutputidJSONBody3PartitionRandom     PutFleetOutputsOutputidJSONBody3Partition = "random"
	PutFleetOutputsOutputidJSONBody3PartitionRoundRobin PutFleetOutputsOutputidJSONBody3Partition = "round_robin"
)

// Defines values for PutFleetOutputsOutputidJSONBody3RequiredAcks.
const (
	PutFleetOutputsOutputidJSONBody3RequiredAcksMinus1 PutFleetOutputsOutputidJSONBody3RequiredAcks = -1
	PutFleetOutputsOutputidJSONBody3RequiredAcksN0     PutFleetOutputsOutputidJSONBody3RequiredAcks = 0
	PutFleetOutputsOutputidJSONBody3RequiredAcksN1     PutFleetOutputsOutputidJSONBody3RequiredAcks = 1
)

// Defines values for PutFleetOutputsOutputidJSONBody3SaslMechanism.
const (
	PutFleetOutputsOutputidJSONBody3SaslMechanismPLAIN       PutFleetOutputsOutputidJSONBody3SaslMechanism = "PLAIN"
	PutFleetOutputsOutputidJSONBody3SaslMechanismSCRAMSHA256 PutFleetOutputsOutputidJSONBody3SaslMechanism = "SCRAM-SHA-256"
	PutFleetOutputsOutputidJSONBody3SaslMechanismSCRAMSHA512 PutFleetOutputsOutputidJSONBody3SaslMechanism = "SCRAM-SHA-512"
)

// Defines values for PutFleetOutputsOutputidJSONBody3SslVerificationMode.
const (
	PutFleetOutputsOutputidJSONBody3SslVerificationModeCertificate PutFleetOutputsOutputidJSONBody3SslVerificationMode = "certificate"
	PutFleetOutputsOutputidJSONBody3SslVerificationModeFull        PutFleetOutputsOutputidJSONBody3SslVerificationMode = "full"
	PutFleetOutputsOutputidJSONBody3SslVerificationModeNone        PutFleetOutputsOutputidJSONBody3SslVerificationMode = "none"
	PutFleetOutputsOutputidJSONBody3SslVerificationModeStrict      PutFleetOutputsOutputidJSONBody3SslVerificationMode = "strict"
)

// Defines values for PutFleetOutputsOutputidJSONBody3Type.
const (
	PutFleetOutputsOutputidJSONBody3TypeKafka PutFleetOutputsOutputidJSONBody3Type = "kafka"
)

// Defines values for GetFleetPackagePoliciesParamsSortOrder.
const (
	GetFleetPackagePoliciesParamsSortOrderAsc  GetFleetPackagePoliciesParamsSortOrder = "asc"
	GetFleetPackagePoliciesParamsSortOrderDesc GetFleetPackagePoliciesParamsSortOrder = "desc"
)

// Defines values for GetFleetPackagePoliciesParamsFormat.
const (
	GetFleetPackagePoliciesParamsFormatLegacy     GetFleetPackagePoliciesParamsFormat = "legacy"
	GetFleetPackagePoliciesParamsFormatSimplified GetFleetPackagePoliciesParamsFormat = "simplified"
)

// Defines values for PostFleetPackagePoliciesParamsFormat.
const (
	PostFleetPackagePoliciesParamsFormatLegacy     PostFleetPackagePoliciesParamsFormat = "legacy"
	PostFleetPackagePoliciesParamsFormatSimplified PostFleetPackagePoliciesParamsFormat = "simplified"
)

// Defines values for PostFleetPackagePoliciesJSONBody0InputsStreamsRelease.
const (
	PostFleetPackagePoliciesJSONBody0InputsStreamsReleaseBeta         PostFleetPackagePoliciesJSONBody0InputsStreamsRelease = "beta"
	PostFleetPackagePoliciesJSONBody0InputsStreamsReleaseExperimental PostFleetPackagePoliciesJSONBody0InputsStreamsRelease = "experimental"
	PostFleetPackagePoliciesJSONBody0InputsStreamsReleaseGa           PostFleetPackagePoliciesJSONBody0InputsStreamsRelease = "ga"
)

// Defines values for GetFleetPackagePoliciesPackagepolicyidParamsFormat.
const (
	GetFleetPackagePoliciesPackagepolicyidParamsFormatLegacy     GetFleetPackagePoliciesPackagepolicyidParamsFormat = "legacy"
	GetFleetPackagePoliciesPackagepolicyidParamsFormatSimplified GetFleetPackagePoliciesPackagepolicyidParamsFormat = "simplified"
)

// Defines values for PutFleetPackagePoliciesPackagepolicyidParamsFormat.
const (
	Legacy     PutFleetPackagePoliciesPackagepolicyidParamsFormat = "legacy"
	Simplified PutFleetPackagePoliciesPackagepolicyidParamsFormat = "simplified"
)

// Defines values for PutFleetPackagePoliciesPackagepolicyidJSONBody0InputsStreamsRelease.
const (
	PutFleetPackagePoliciesPackagepolicyidJSONBody0InputsStreamsReleaseBeta         PutFleetPackagePoliciesPackagepolicyidJSONBody0InputsStreamsRelease = "beta"
	PutFleetPackagePoliciesPackagepolicyidJSONBody0InputsStreamsReleaseExperimental PutFleetPackagePoliciesPackagepolicyidJSONBody0InputsStreamsRelease = "experimental"
	PutFleetPackagePoliciesPackagepolicyidJSONBody0InputsStreamsReleaseGa           PutFleetPackagePoliciesPackagepolicyidJSONBody0InputsStreamsRelease = "ga"
)

// DataViews400Response defines model for Data_views_400_response.
type DataViews400Response struct {
	Error      string  `json:"error"`
	Message    string  `json:"message"`
	StatusCode float32 `json:"statusCode"`
}

// DataViews404Response defines model for Data_views_404_response.
type DataViews404Response struct {
	Error      *DataViews404ResponseError      `json:"error,omitempty"`
	Message    *string                         `json:"message,omitempty"`
	StatusCode *DataViews404ResponseStatusCode `json:"statusCode,omitempty"`
}

// DataViews404ResponseError defines model for DataViews404Response.Error.
type DataViews404ResponseError string

// DataViews404ResponseStatusCode defines model for DataViews404Response.StatusCode.
type DataViews404ResponseStatusCode int

// DataViewsAllownoindex Allows the data view saved object to exist before the data is available.
type DataViewsAllownoindex = bool

// DataViewsCreateDataViewRequestObject defines model for Data_views_create_data_view_request_object.
type DataViewsCreateDataViewRequestObject struct {
	// DataView The data view object.
	DataView struct {
		// AllowNoIndex Allows the data view saved object to exist before the data is available.
		AllowNoIndex *DataViewsAllownoindex          `json:"allowNoIndex,omitempty"`
		FieldAttrs   *map[string]DataViewsFieldattrs `json:"fieldAttrs,omitempty"`

		// FieldFormats A map of field formats by field name.
		FieldFormats *DataViewsFieldformats  `json:"fieldFormats,omitempty"`
		Fields       *map[string]interface{} `json:"fields,omitempty"`
		Id           *string                 `json:"id,omitempty"`

		// Name The data view name.
		Name *string `json:"name,omitempty"`

		// Namespaces An array of space identifiers for sharing the data view between multiple spaces.
		Namespaces      *DataViewsNamespaces                 `json:"namespaces,omitempty"`
		RuntimeFieldMap *map[string]DataViewsRuntimefieldmap `json:"runtimeFieldMap,omitempty"`

		// SourceFilters The array of field names you want to filter out in Discover.
		SourceFilters *DataViewsSourcefilters `json:"sourceFilters,omitempty"`

		// TimeFieldName The timestamp field name, which you use for time-based data views.
		TimeFieldName *DataViewsTimefieldname `json:"timeFieldName,omitempty"`

		// Title Comma-separated list of data streams, indices, and aliases that you want to search. Supports wildcards (`*`).
		Title DataViewsTitle `json:"title"`

		// Type When set to `rollup`, identifies the rollup data views.
		Type *DataViewsType `json:"type,omitempty"`

		// TypeMeta When you use rollup indices, contains the field list for the rollup data view API endpoints.
		TypeMeta *DataViewsTypemeta `json:"typeMeta,omitempty"`
		Version  *string            `json:"version,omitempty"`
	} `json:"data_view"`

	// Override Override an existing data view if a data view with the provided title already exists.
	Override *bool `json:"override,omitempty"`
}

// DataViewsDataViewResponseObject defines model for Data_views_data_view_response_object.
type DataViewsDataViewResponseObject struct {
	DataView *struct {
		// AllowNoIndex Allows the data view saved object to exist before the data is available.
		AllowNoIndex *DataViewsAllownoindex          `json:"allowNoIndex,omitempty"`
		FieldAttrs   *map[string]DataViewsFieldattrs `json:"fieldAttrs,omitempty"`

		// FieldFormats A map of field formats by field name.
		FieldFormats *DataViewsFieldformats  `json:"fieldFormats,omitempty"`
		Fields       *map[string]interface{} `json:"fields,omitempty"`
		Id           *string                 `json:"id,omitempty"`

		// Name The data view name.
		Name *string `json:"name,omitempty"`

		// Namespaces An array of space identifiers for sharing the data view between multiple spaces.
		Namespaces      *DataViewsNamespaces                 `json:"namespaces,omitempty"`
		RuntimeFieldMap *map[string]DataViewsRuntimefieldmap `json:"runtimeFieldMap,omitempty"`

		// SourceFilters The array of field names you want to filter out in Discover.
		SourceFilters *DataViewsSourcefilters `json:"sourceFilters,omitempty"`

		// TimeFieldName The timestamp field name, which you use for time-based data views.
		TimeFieldName *DataViewsTimefieldname `json:"timeFieldName,omitempty"`

		// Title Comma-separated list of data streams, indices, and aliases that you want to search. Supports wildcards (`*`).
		Title *DataViewsTitle `json:"title,omitempty"`

		// TypeMeta When you use rollup indices, contains the field list for the rollup data view API endpoints.
		TypeMeta *DataViewsTypemetaResponse `json:"typeMeta"`
		Version  *string                    `json:"version,omitempty"`
	} `json:"data_view,omitempty"`
}

// DataViewsFieldattrs A map of field attributes by field name.
type DataViewsFieldattrs struct {
	// Count Popularity count for the field.
	Count *int `json:"count,omitempty"`

	// CustomDescription Custom description for the field.
	CustomDescription *string `json:"customDescription,omitempty"`

	// CustomLabel Custom label for the field.
	CustomLabel *string `json:"customLabel,omitempty"`
}

// DataViewsFieldformats A map of field formats by field name.
type DataViewsFieldformats = map[string]interface{}

// DataViewsNamespaces An array of space identifiers for sharing the data view between multiple spaces.
type DataViewsNamespaces = []string

// DataViewsRuntimefieldmap A map of runtime field definitions by field name.
type DataViewsRuntimefieldmap struct {
	Script struct {
		// Source Script for the runtime field.
		Source *string `json:"source,omitempty"`
	} `json:"script"`

	// Type Mapping type of the runtime field.
	Type string `json:"type"`
}

// DataViewsSourcefilters The array of field names you want to filter out in Discover.
type DataViewsSourcefilters = []struct {
	Value string `json:"value"`
}

// DataViewsTimefieldname The timestamp field name, which you use for time-based data views.
type DataViewsTimefieldname = string

// DataViewsTitle Comma-separated list of data streams, indices, and aliases that you want to search. Supports wildcards (`*`).
type DataViewsTitle = string

// DataViewsType When set to `rollup`, identifies the rollup data views.
type DataViewsType = string

// DataViewsTypemeta When you use rollup indices, contains the field list for the rollup data view API endpoints.
type DataViewsTypemeta struct {
	// Aggs A map of rollup restrictions by aggregation type and field name.
	Aggs map[string]interface{} `json:"aggs"`

	// Params Properties for retrieving rollup fields.
	Params map[string]interface{} `json:"params"`
}

// DataViewsTypemetaResponse When you use rollup indices, contains the field list for the rollup data view API endpoints.
type DataViewsTypemetaResponse struct {
	// Aggs A map of rollup restrictions by aggregation type and field name.
	Aggs *map[string]interface{} `json:"aggs,omitempty"`

	// Params Properties for retrieving rollup fields.
	Params *map[string]interface{} `json:"params,omitempty"`
}

// DataViewsUpdateDataViewRequestObject defines model for Data_views_update_data_view_request_object.
type DataViewsUpdateDataViewRequestObject struct {
	// DataView The data view properties you want to update. Only the specified properties are updated in the data view. Unspecified fields stay as they are persisted.
	DataView struct {
		// AllowNoIndex Allows the data view saved object to exist before the data is available.
		AllowNoIndex *DataViewsAllownoindex `json:"allowNoIndex,omitempty"`

		// FieldFormats A map of field formats by field name.
		FieldFormats    *DataViewsFieldformats               `json:"fieldFormats,omitempty"`
		Fields          *map[string]interface{}              `json:"fields,omitempty"`
		Name            *string                              `json:"name,omitempty"`
		RuntimeFieldMap *map[string]DataViewsRuntimefieldmap `json:"runtimeFieldMap,omitempty"`

		// SourceFilters The array of field names you want to filter out in Discover.
		SourceFilters *DataViewsSourcefilters `json:"sourceFilters,omitempty"`

		// TimeFieldName The timestamp field name, which you use for time-based data views.
		TimeFieldName *DataViewsTimefieldname `json:"timeFieldName,omitempty"`

		// Title Comma-separated list of data streams, indices, and aliases that you want to search. Supports wildcards (`*`).
		Title *DataViewsTitle `json:"title,omitempty"`

		// Type When set to `rollup`, identifies the rollup data views.
		Type *DataViewsType `json:"type,omitempty"`

		// TypeMeta When you use rollup indices, contains the field list for the rollup data view API endpoints.
		TypeMeta *DataViewsTypemeta `json:"typeMeta,omitempty"`
	} `json:"data_view"`

	// RefreshFields Reloads the data view fields after the data view is updated.
	RefreshFields *bool `json:"refresh_fields,omitempty"`
}

// KibanaHTTPAPIsCoreStatusRedactedResponse A minimal representation of Kibana's operational status.
type KibanaHTTPAPIsCoreStatusRedactedResponse struct {
	Status struct {
		Overall struct {
			// Level Service status levels as human and machine readable values.
			Level KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevel `json:"level"`
		} `json:"overall"`
	} `json:"status"`
}

// KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevel Service status levels as human and machine readable values.
type KibanaHTTPAPIsCoreStatusRedactedResponseStatusOverallLevel string

// KibanaHTTPAPIsCoreStatusResponse Kibana's operational status as well as a detailed breakdown of plugin statuses indication of various loads (like event loop utilization and network traffic) at time of request.
type KibanaHTTPAPIsCoreStatusResponse struct {
	// Metrics Metric groups collected by Kibana.
	Metrics struct {
		// CollectionIntervalInMillis The interval at which metrics should be collected.
		CollectionIntervalInMillis float32 `json:"collection_interval_in_millis"`

		// ElasticsearchClient Current network metrics of Kibana's Elasticsearch client.
		ElasticsearchClient struct {
			// TotalActiveSockets Count of network sockets currently in use.
			TotalActiveSockets float32 `json:"totalActiveSockets"`

			// TotalIdleSockets Count of network sockets currently idle.
			TotalIdleSockets float32 `json:"totalIdleSockets"`

			// TotalQueuedRequests Count of requests not yet assigned to sockets.
			TotalQueuedRequests float32 `json:"totalQueuedRequests"`
		} `json:"elasticsearch_client"`

		// LastUpdated The time metrics were collected.
		LastUpdated string `json:"last_updated"`
	} `json:"metrics"`

	// Name Kibana instance name.
	Name   string `json:"name"`
	Status struct {
		// Core Statuses of core Kibana services.
		Core struct {
			Elasticsearch struct {
				// Detail Human readable detail of the service status.
				Detail *string `json:"detail,omitempty"`

				// DocumentationUrl A URL to further documentation regarding this service.
				DocumentationUrl *string `json:"documentationUrl,omitempty"`

				// Level Service status levels as human and machine readable values.
				Level KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevel `json:"level"`

				// Meta An unstructured set of extra metadata about this service.
				Meta map[string]interface{} `json:"meta"`

				// Summary A human readable summary of the service status.
				Summary string `json:"summary"`
			} `json:"elasticsearch"`
			SavedObjects struct {
				// Detail Human readable detail of the service status.
				Detail *string `json:"detail,omitempty"`

				// DocumentationUrl A URL to further documentation regarding this service.
				DocumentationUrl *string `json:"documentationUrl,omitempty"`

				// Level Service status levels as human and machine readable values.
				Level KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevel `json:"level"`

				// Meta An unstructured set of extra metadata about this service.
				Meta map[string]interface{} `json:"meta"`

				// Summary A human readable summary of the service status.
				Summary string `json:"summary"`
			} `json:"savedObjects"`
		} `json:"core"`
		Overall struct {
			// Detail Human readable detail of the service status.
			Detail *string `json:"detail,omitempty"`

			// DocumentationUrl A URL to further documentation regarding this service.
			DocumentationUrl *string `json:"documentationUrl,omitempty"`

			// Level Service status levels as human and machine readable values.
			Level KibanaHTTPAPIsCoreStatusResponseStatusOverallLevel `json:"level"`

			// Meta An unstructured set of extra metadata about this service.
			Meta map[string]interface{} `json:"meta"`

			// Summary A human readable summary of the service status.
			Summary string `json:"summary"`
		} `json:"overall"`

		// Plugins A dynamic mapping of plugin ID to plugin status.
		Plugins map[string]struct {
			// Detail Human readable detail of the service status.
			Detail *string `json:"detail,omitempty"`

			// DocumentationUrl A URL to further documentation regarding this service.
			DocumentationUrl *string `json:"documentationUrl,omitempty"`

			// Level Service status levels as human and machine readable values.
			Level KibanaHTTPAPIsCoreStatusResponseStatusPluginsLevel `json:"level"`

			// Meta An unstructured set of extra metadata about this service.
			Meta map[string]interface{} `json:"meta"`

			// Summary A human readable summary of the service status.
			Summary string `json:"summary"`
		} `json:"plugins"`
	} `json:"status"`

	// Uuid Unique, generated Kibana instance UUID. This UUID should persist even if the Kibana process restarts.
	Uuid    string `json:"uuid"`
	Version struct {
		// BuildDate The date and time of this build.
		BuildDate string `json:"build_date"`

		// BuildFlavor The build flavour determines configuration and behavior of Kibana. On premise users will almost always run the "traditional" flavour, while other flavours are reserved for Elastic-specific use cases.
		BuildFlavor KibanaHTTPAPIsCoreStatusResponseVersionBuildFlavor `json:"build_flavor"`

		// BuildHash A unique hash value representing the git commit of this Kibana build.
		BuildHash string `json:"build_hash"`

		// BuildNumber A monotonically increasing number, each subsequent build will have a higher number.
		BuildNumber float32 `json:"build_number"`

		// BuildSnapshot Whether this build is a snapshot build.
		BuildSnapshot bool `json:"build_snapshot"`

		// Number A semantic version number.
		Number string `json:"number"`
	} `json:"version"`
}

// KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevel Service status levels as human and machine readable values.
type KibanaHTTPAPIsCoreStatusResponseStatusCoreElasticsearchLevel string

// KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevel Service status levels as human and machine readable values.
type KibanaHTTPAPIsCoreStatusResponseStatusCoreSavedObjectsLevel string

// KibanaHTTPAPIsCoreStatusResponseStatusOverallLevel Service status levels as human and machine readable values.
type KibanaHTTPAPIsCoreStatusResponseStatusOverallLevel string

// KibanaHTTPAPIsCoreStatusResponseStatusPluginsLevel Service status levels as human and machine readable values.
type KibanaHTTPAPIsCoreStatusResponseStatusPluginsLevel string

// KibanaHTTPAPIsCoreStatusResponseVersionBuildFlavor The build flavour determines configuration and behavior of Kibana. On premise users will almost always run the "traditional" flavour, while other flavours are reserved for Elastic-specific use cases.
type KibanaHTTPAPIsCoreStatusResponseVersionBuildFlavor string

// SyntheticsGetParameterResponse defines model for Synthetics_getParameterResponse.
type SyntheticsGetParameterResponse struct {
	// Description The description of the parameter. It is included in the response if the user has read-only permissions to the Synthetics app.
	Description *string `json:"description,omitempty"`

	// Id The unique identifier of the parameter.
	Id *string `json:"id,omitempty"`

	// Key The key of the parameter.
	Key *string `json:"key,omitempty"`

	// Namespaces The namespaces associated with the parameter. It is included in the response if the user has read-only permissions to the Synthetics app.
	Namespaces *[]string `json:"namespaces,omitempty"`

	// Tags An array of tags associated with the parameter. It is included in the response if the user has read-only permissions to the Synthetics app.
	Tags *[]string `json:"tags,omitempty"`

	// Value The value associated with the parameter. It will be included in the response if the user has write permissions.
	Value *string `json:"value,omitempty"`
}

// SyntheticsParameterRequest defines model for Synthetics_parameterRequest.
type SyntheticsParameterRequest struct {
	// Description A description of the parameter.
	Description *string `json:"description,omitempty"`

	// Key The key of the parameter.
	Key string `json:"key"`

	// ShareAcrossSpaces Specify whether the parameter should be shared across spaces.
	ShareAcrossSpaces *bool `json:"share_across_spaces,omitempty"`

	// Tags An array of tags to categorize the parameter.
	Tags *[]string `json:"tags,omitempty"`

	// Value The value associated with the parameter.
	Value string `json:"value"`
}

// SyntheticsPostParameterResponse defines model for Synthetics_postParameterResponse.
type SyntheticsPostParameterResponse struct {
	// Description A description of the parameter.
	Description *string `json:"description,omitempty"`

	// Id The unique identifier for the parameter.
	Id *string `json:"id,omitempty"`

	// Key The parameter key.
	Key *string `json:"key,omitempty"`

	// ShareAcrossSpaces Indicates whether the parameter is shared across spaces.
	ShareAcrossSpaces *bool `json:"share_across_spaces,omitempty"`

	// Tags An array of tags associated with the parameter.
	Tags *[]string `json:"tags,omitempty"`

	// Value The value associated with the parameter.
	Value *string `json:"value,omitempty"`
}

// DataViewsKbnXsrf defines model for Data_views_kbn_xsrf.
type DataViewsKbnXsrf = string

// DataViewsViewId defines model for Data_views_view_id.
type DataViewsViewId = string

// CreateDataViewDefaultwParams defines parameters for CreateDataViewDefaultw.
type CreateDataViewDefaultwParams struct {
	// KbnXsrf Cross-site request forgery protection
	KbnXsrf DataViewsKbnXsrf `json:"kbn-xsrf"`
}

// DeleteDataViewDefaultParams defines parameters for DeleteDataViewDefault.
type DeleteDataViewDefaultParams struct {
	// KbnXsrf Cross-site request forgery protection
	KbnXsrf DataViewsKbnXsrf `json:"kbn-xsrf"`
}

// UpdateDataViewDefaultParams defines parameters for UpdateDataViewDefault.
type UpdateDataViewDefaultParams struct {
	// KbnXsrf Cross-site request forgery protection
	KbnXsrf DataViewsKbnXsrf `json:"kbn-xsrf"`
}

// GetFleetAgentPoliciesParams defines parameters for GetFleetAgentPolicies.
type GetFleetAgentPoliciesParams struct {
	Page            *float32                              `form:"page,omitempty" json:"page,omitempty"`
	PerPage         *float32                              `form:"perPage,omitempty" json:"perPage,omitempty"`
	SortField       *string                               `form:"sortField,omitempty" json:"sortField,omitempty"`
	SortOrder       *GetFleetAgentPoliciesParamsSortOrder `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
	ShowUpgradeable *bool                                 `form:"showUpgradeable,omitempty" json:"showUpgradeable,omitempty"`
	Kuery           *string                               `form:"kuery,omitempty" json:"kuery,omitempty"`

	// NoAgentCount use withAgentCount instead
	NoAgentCount *bool `form:"noAgentCount,omitempty" json:"noAgentCount,omitempty"`

	// WithAgentCount get policies with agent count
	WithAgentCount *bool `form:"withAgentCount,omitempty" json:"withAgentCount,omitempty"`

	// Full get full policies with package policies populated
	Full   *bool                              `form:"full,omitempty" json:"full,omitempty"`
	Format *GetFleetAgentPoliciesParamsFormat `form:"format,omitempty" json:"format,omitempty"`
}

// GetFleetAgentPoliciesParamsSortOrder defines parameters for GetFleetAgentPolicies.
type GetFleetAgentPoliciesParamsSortOrder string

// GetFleetAgentPoliciesParamsFormat defines parameters for GetFleetAgentPolicies.
type GetFleetAgentPoliciesParamsFormat string

// PostFleetAgentPoliciesJSONBody defines parameters for PostFleetAgentPolicies.
type PostFleetAgentPoliciesJSONBody struct {
	AdvancedSettings *struct {
		AgentDownloadTargetDirectory      *interface{} `json:"agent_download_target_directory,omitempty"`
		AgentDownloadTimeout              *interface{} `json:"agent_download_timeout,omitempty"`
		AgentLimitsGoMaxProcs             *interface{} `json:"agent_limits_go_max_procs,omitempty"`
		AgentLoggingFilesInterval         *interface{} `json:"agent_logging_files_interval,omitempty"`
		AgentLoggingFilesKeepfiles        *interface{} `json:"agent_logging_files_keepfiles,omitempty"`
		AgentLoggingFilesRotateeverybytes *interface{} `json:"agent_logging_files_rotateeverybytes,omitempty"`
		AgentLoggingLevel                 *interface{} `json:"agent_logging_level,omitempty"`
		AgentLoggingMetricsPeriod         *interface{} `json:"agent_logging_metrics_period,omitempty"`
		AgentLoggingToFiles               *interface{} `json:"agent_logging_to_files,omitempty"`
	} `json:"advanced_settings,omitempty"`
	AgentFeatures *[]struct {
		Enabled bool   `json:"enabled"`
		Name    string `json:"name"`
	} `json:"agent_features,omitempty"`
	Agentless *struct {
		CloudConnectors *struct {
			Enabled   bool    `json:"enabled"`
			TargetCsp *string `json:"target_csp,omitempty"`
		} `json:"cloud_connectors,omitempty"`
		Resources *struct {
			Requests *struct {
				Cpu    *string `json:"cpu,omitempty"`
				Memory *string `json:"memory,omitempty"`
			} `json:"requests,omitempty"`
		} `json:"resources,omitempty"`
	} `json:"agentless,omitempty"`
	DataOutputId      *string `json:"data_output_id,omitempty"`
	Description       *string `json:"description,omitempty"`
	DownloadSourceId  *string `json:"download_source_id,omitempty"`
	FleetServerHostId *string `json:"fleet_server_host_id,omitempty"`
	Force             *bool   `json:"force,omitempty"`

	// GlobalDataTags User defined data tags that are added to all of the inputs. The values can be strings or numbers.
	GlobalDataTags *[]struct {
		Name  string                                              `json:"name"`
		Value PostFleetAgentPoliciesJSONBody_GlobalDataTags_Value `json:"value"`
	} `json:"global_data_tags,omitempty"`
	HasFleetServer       *bool    `json:"has_fleet_server,omitempty"`
	Id                   *string  `json:"id,omitempty"`
	InactivityTimeout    *float32 `json:"inactivity_timeout,omitempty"`
	IsDefault            *bool    `json:"is_default,omitempty"`
	IsDefaultFleetServer *bool    `json:"is_default_fleet_server,omitempty"`
	IsManaged            *bool    `json:"is_managed,omitempty"`
	IsProtected          *bool    `json:"is_protected,omitempty"`

	// KeepMonitoringAlive When set to true, monitoring will be enabled but logs/metrics collection will be disabled
	KeepMonitoringAlive   *bool `json:"keep_monitoring_alive,omitempty"`
	MonitoringDiagnostics *struct {
		Limit *struct {
			Burst    *float32 `json:"burst,omitempty"`
			Interval *string  `json:"interval,omitempty"`
		} `json:"limit,omitempty"`
		Uploader *struct {
			InitDur    *string  `json:"init_dur,omitempty"`
			MaxDur     *string  `json:"max_dur,omitempty"`
			MaxRetries *float32 `json:"max_retries,omitempty"`
		} `json:"uploader,omitempty"`
	} `json:"monitoring_diagnostics,omitempty"`
	MonitoringEnabled *[]PostFleetAgentPoliciesJSONBodyMonitoringEnabled `json:"monitoring_enabled,omitempty"`
	MonitoringHttp    *struct {
		Buffer *struct {
			Enabled *bool `json:"enabled,omitempty"`
		} `json:"buffer,omitempty"`
		Enabled *bool    `json:"enabled,omitempty"`
		Host    *string  `json:"host,omitempty"`
		Port    *float32 `json:"port,omitempty"`
	} `json:"monitoring_http,omitempty"`
	MonitoringOutputId     *string `json:"monitoring_output_id,omitempty"`
	MonitoringPprofEnabled *bool   `json:"monitoring_pprof_enabled,omitempty"`
	Name                   string  `json:"name"`
	Namespace              string  `json:"namespace"`

	// Overrides Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.
	Overrides        *map[string]interface{} `json:"overrides,omitempty"`
	RequiredVersions *[]struct {
		// Percentage Target percentage of agents to auto upgrade
		Percentage float32 `json:"percentage"`

		// Version Target version for automatic agent upgrade
		Version string `json:"version"`
	} `json:"required_versions,omitempty"`
	SpaceIds *[]string `json:"space_ids,omitempty"`

	// SupportsAgentless Indicates whether the agent policy supports agentless integrations.
	SupportsAgentless *bool    `json:"supports_agentless,omitempty"`
	UnenrollTimeout   *float32 `json:"unenroll_timeout,omitempty"`
}

// PostFleetAgentPoliciesParams defines parameters for PostFleetAgentPolicies.
type PostFleetAgentPoliciesParams struct {
	SysMonitoring *bool `form:"sys_monitoring,omitempty" json:"sys_monitoring,omitempty"`

	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PostFleetAgentPoliciesJSONBodyGlobalDataTagsValue0 defines parameters for PostFleetAgentPolicies.
type PostFleetAgentPoliciesJSONBodyGlobalDataTagsValue0 = string

// PostFleetAgentPoliciesJSONBodyGlobalDataTagsValue1 defines parameters for PostFleetAgentPolicies.
type PostFleetAgentPoliciesJSONBodyGlobalDataTagsValue1 = float32

// PostFleetAgentPoliciesJSONBody_GlobalDataTags_Value defines parameters for PostFleetAgentPolicies.
type PostFleetAgentPoliciesJSONBody_GlobalDataTags_Value struct {
	union json.RawMessage
}

// PostFleetAgentPoliciesJSONBodyMonitoringEnabled defines parameters for PostFleetAgentPolicies.
type PostFleetAgentPoliciesJSONBodyMonitoringEnabled string

// PostFleetAgentPoliciesDeleteJSONBody defines parameters for PostFleetAgentPoliciesDelete.
type PostFleetAgentPoliciesDeleteJSONBody struct {
	AgentPolicyId string `json:"agentPolicyId"`

	// Force bypass validation checks that can prevent agent policy deletion
	Force *bool `json:"force,omitempty"`
}

// PostFleetAgentPoliciesDeleteParams defines parameters for PostFleetAgentPoliciesDelete.
type PostFleetAgentPoliciesDeleteParams struct {
	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// GetFleetAgentPoliciesAgentpolicyidParams defines parameters for GetFleetAgentPoliciesAgentpolicyid.
type GetFleetAgentPoliciesAgentpolicyidParams struct {
	Format *GetFleetAgentPoliciesAgentpolicyidParamsFormat `form:"format,omitempty" json:"format,omitempty"`
}

// GetFleetAgentPoliciesAgentpolicyidParamsFormat defines parameters for GetFleetAgentPoliciesAgentpolicyid.
type GetFleetAgentPoliciesAgentpolicyidParamsFormat string

// PutFleetAgentPoliciesAgentpolicyidJSONBody defines parameters for PutFleetAgentPoliciesAgentpolicyid.
type PutFleetAgentPoliciesAgentpolicyidJSONBody struct {
	AdvancedSettings *struct {
		AgentDownloadTargetDirectory      *interface{} `json:"agent_download_target_directory,omitempty"`
		AgentDownloadTimeout              *interface{} `json:"agent_download_timeout,omitempty"`
		AgentLimitsGoMaxProcs             *interface{} `json:"agent_limits_go_max_procs,omitempty"`
		AgentLoggingFilesInterval         *interface{} `json:"agent_logging_files_interval,omitempty"`
		AgentLoggingFilesKeepfiles        *interface{} `json:"agent_logging_files_keepfiles,omitempty"`
		AgentLoggingFilesRotateeverybytes *interface{} `json:"agent_logging_files_rotateeverybytes,omitempty"`
		AgentLoggingLevel                 *interface{} `json:"agent_logging_level,omitempty"`
		AgentLoggingMetricsPeriod         *interface{} `json:"agent_logging_metrics_period,omitempty"`
		AgentLoggingToFiles               *interface{} `json:"agent_logging_to_files,omitempty"`
	} `json:"advanced_settings,omitempty"`
	AgentFeatures *[]struct {
		Enabled bool   `json:"enabled"`
		Name    string `json:"name"`
	} `json:"agent_features,omitempty"`
	Agentless *struct {
		CloudConnectors *struct {
			Enabled   bool    `json:"enabled"`
			TargetCsp *string `json:"target_csp,omitempty"`
		} `json:"cloud_connectors,omitempty"`
		Resources *struct {
			Requests *struct {
				Cpu    *string `json:"cpu,omitempty"`
				Memory *string `json:"memory,omitempty"`
			} `json:"requests,omitempty"`
		} `json:"resources,omitempty"`
	} `json:"agentless,omitempty"`
	BumpRevision      *bool   `json:"bumpRevision,omitempty"`
	DataOutputId      *string `json:"data_output_id,omitempty"`
	Description       *string `json:"description,omitempty"`
	DownloadSourceId  *string `json:"download_source_id,omitempty"`
	FleetServerHostId *string `json:"fleet_server_host_id,omitempty"`
	Force             *bool   `json:"force,omitempty"`

	// GlobalDataTags User defined data tags that are added to all of the inputs. The values can be strings or numbers.
	GlobalDataTags *[]struct {
		Name  string                                                          `json:"name"`
		Value PutFleetAgentPoliciesAgentpolicyidJSONBody_GlobalDataTags_Value `json:"value"`
	} `json:"global_data_tags,omitempty"`
	HasFleetServer       *bool    `json:"has_fleet_server,omitempty"`
	Id                   *string  `json:"id,omitempty"`
	InactivityTimeout    *float32 `json:"inactivity_timeout,omitempty"`
	IsDefault            *bool    `json:"is_default,omitempty"`
	IsDefaultFleetServer *bool    `json:"is_default_fleet_server,omitempty"`
	IsManaged            *bool    `json:"is_managed,omitempty"`
	IsProtected          *bool    `json:"is_protected,omitempty"`

	// KeepMonitoringAlive When set to true, monitoring will be enabled but logs/metrics collection will be disabled
	KeepMonitoringAlive   *bool `json:"keep_monitoring_alive,omitempty"`
	MonitoringDiagnostics *struct {
		Limit *struct {
			Burst    *float32 `json:"burst,omitempty"`
			Interval *string  `json:"interval,omitempty"`
		} `json:"limit,omitempty"`
		Uploader *struct {
			InitDur    *string  `json:"init_dur,omitempty"`
			MaxDur     *string  `json:"max_dur,omitempty"`
			MaxRetries *float32 `json:"max_retries,omitempty"`
		} `json:"uploader,omitempty"`
	} `json:"monitoring_diagnostics,omitempty"`
	MonitoringEnabled *[]PutFleetAgentPoliciesAgentpolicyidJSONBodyMonitoringEnabled `json:"monitoring_enabled,omitempty"`
	MonitoringHttp    *struct {
		Buffer *struct {
			Enabled *bool `json:"enabled,omitempty"`
		} `json:"buffer,omitempty"`
		Enabled *bool    `json:"enabled,omitempty"`
		Host    *string  `json:"host,omitempty"`
		Port    *float32 `json:"port,omitempty"`
	} `json:"monitoring_http,omitempty"`
	MonitoringOutputId     *string `json:"monitoring_output_id,omitempty"`
	MonitoringPprofEnabled *bool   `json:"monitoring_pprof_enabled,omitempty"`
	Name                   string  `json:"name"`
	Namespace              string  `json:"namespace"`

	// Overrides Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.
	Overrides        *map[string]interface{} `json:"overrides,omitempty"`
	RequiredVersions *[]struct {
		// Percentage Target percentage of agents to auto upgrade
		Percentage float32 `json:"percentage"`

		// Version Target version for automatic agent upgrade
		Version string `json:"version"`
	} `json:"required_versions,omitempty"`
	SpaceIds *[]string `json:"space_ids,omitempty"`

	// SupportsAgentless Indicates whether the agent policy supports agentless integrations.
	SupportsAgentless *bool    `json:"supports_agentless,omitempty"`
	UnenrollTimeout   *float32 `json:"unenroll_timeout,omitempty"`
}

// PutFleetAgentPoliciesAgentpolicyidParams defines parameters for PutFleetAgentPoliciesAgentpolicyid.
type PutFleetAgentPoliciesAgentpolicyidParams struct {
	Format *PutFleetAgentPoliciesAgentpolicyidParamsFormat `form:"format,omitempty" json:"format,omitempty"`

	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PutFleetAgentPoliciesAgentpolicyidParamsFormat defines parameters for PutFleetAgentPoliciesAgentpolicyid.
type PutFleetAgentPoliciesAgentpolicyidParamsFormat string

// PutFleetAgentPoliciesAgentpolicyidJSONBodyGlobalDataTagsValue0 defines parameters for PutFleetAgentPoliciesAgentpolicyid.
type PutFleetAgentPoliciesAgentpolicyidJSONBodyGlobalDataTagsValue0 = string

// PutFleetAgentPoliciesAgentpolicyidJSONBodyGlobalDataTagsValue1 defines parameters for PutFleetAgentPoliciesAgentpolicyid.
type PutFleetAgentPoliciesAgentpolicyidJSONBodyGlobalDataTagsValue1 = float32

// PutFleetAgentPoliciesAgentpolicyidJSONBody_GlobalDataTags_Value defines parameters for PutFleetAgentPoliciesAgentpolicyid.
type PutFleetAgentPoliciesAgentpolicyidJSONBody_GlobalDataTags_Value struct {
	union json.RawMessage
}

// PutFleetAgentPoliciesAgentpolicyidJSONBodyMonitoringEnabled defines parameters for PutFleetAgentPoliciesAgentpolicyid.
type PutFleetAgentPoliciesAgentpolicyidJSONBodyMonitoringEnabled string

// GetFleetEnrollmentApiKeysParams defines parameters for GetFleetEnrollmentApiKeys.
type GetFleetEnrollmentApiKeysParams struct {
	Page    *float32 `form:"page,omitempty" json:"page,omitempty"`
	PerPage *float32 `form:"perPage,omitempty" json:"perPage,omitempty"`
	Kuery   *string  `form:"kuery,omitempty" json:"kuery,omitempty"`
}

// GetFleetEpmPackagesParams defines parameters for GetFleetEpmPackages.
type GetFleetEpmPackagesParams struct {
	Category                 *string `form:"category,omitempty" json:"category,omitempty"`
	Prerelease               *bool   `form:"prerelease,omitempty" json:"prerelease,omitempty"`
	ExcludeInstallStatus     *bool   `form:"excludeInstallStatus,omitempty" json:"excludeInstallStatus,omitempty"`
	WithPackagePoliciesCount *bool   `form:"withPackagePoliciesCount,omitempty" json:"withPackagePoliciesCount,omitempty"`
}

// PostFleetEpmPackagesParams defines parameters for PostFleetEpmPackages.
type PostFleetEpmPackagesParams struct {
	IgnoreMappingUpdateErrors *bool `form:"ignoreMappingUpdateErrors,omitempty" json:"ignoreMappingUpdateErrors,omitempty"`
	SkipDataStreamRollover    *bool `form:"skipDataStreamRollover,omitempty" json:"skipDataStreamRollover,omitempty"`

	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// DeleteFleetEpmPackagesPkgnamePkgversionParams defines parameters for DeleteFleetEpmPackagesPkgnamePkgversion.
type DeleteFleetEpmPackagesPkgnamePkgversionParams struct {
	Force *bool `form:"force,omitempty" json:"force,omitempty"`

	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// GetFleetEpmPackagesPkgnamePkgversionParams defines parameters for GetFleetEpmPackagesPkgnamePkgversion.
type GetFleetEpmPackagesPkgnamePkgversionParams struct {
	IgnoreUnverified *bool `form:"ignoreUnverified,omitempty" json:"ignoreUnverified,omitempty"`
	Prerelease       *bool `form:"prerelease,omitempty" json:"prerelease,omitempty"`
	Full             *bool `form:"full,omitempty" json:"full,omitempty"`
	WithMetadata     *bool `form:"withMetadata,omitempty" json:"withMetadata,omitempty"`
}

// PostFleetEpmPackagesPkgnamePkgversionJSONBody defines parameters for PostFleetEpmPackagesPkgnamePkgversion.
type PostFleetEpmPackagesPkgnamePkgversionJSONBody struct {
	Force             *bool `json:"force,omitempty"`
	IgnoreConstraints *bool `json:"ignore_constraints,omitempty"`
}

// PostFleetEpmPackagesPkgnamePkgversionParams defines parameters for PostFleetEpmPackagesPkgnamePkgversion.
type PostFleetEpmPackagesPkgnamePkgversionParams struct {
	Prerelease                *bool `form:"prerelease,omitempty" json:"prerelease,omitempty"`
	IgnoreMappingUpdateErrors *bool `form:"ignoreMappingUpdateErrors,omitempty" json:"ignoreMappingUpdateErrors,omitempty"`
	SkipDataStreamRollover    *bool `form:"skipDataStreamRollover,omitempty" json:"skipDataStreamRollover,omitempty"`

	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PostFleetFleetServerHostsJSONBody defines parameters for PostFleetFleetServerHosts.
type PostFleetFleetServerHostsJSONBody struct {
	HostUrls        []string `json:"host_urls"`
	Id              *string  `json:"id,omitempty"`
	IsDefault       *bool    `json:"is_default,omitempty"`
	IsInternal      *bool    `json:"is_internal,omitempty"`
	IsPreconfigured *bool    `json:"is_preconfigured,omitempty"`
	Name            string   `json:"name"`
	ProxyId         *string  `json:"proxy_id,omitempty"`
	Secrets         *struct {
		Ssl *struct {
			EsKey *PostFleetFleetServerHostsJSONBody_Secrets_Ssl_EsKey `json:"es_key,omitempty"`
			Key   *PostFleetFleetServerHostsJSONBody_Secrets_Ssl_Key   `json:"key,omitempty"`
		} `json:"ssl,omitempty"`
	} `json:"secrets,omitempty"`
	Ssl *struct {
		Certificate              *string                                         `json:"certificate,omitempty"`
		CertificateAuthorities   *[]string                                       `json:"certificate_authorities,omitempty"`
		ClientAuth               *PostFleetFleetServerHostsJSONBodySslClientAuth `json:"client_auth,omitempty"`
		EsCertificate            *string                                         `json:"es_certificate,omitempty"`
		EsCertificateAuthorities *[]string                                       `json:"es_certificate_authorities,omitempty"`
		EsKey                    *string                                         `json:"es_key,omitempty"`
		Key                      *string                                         `json:"key,omitempty"`
	} `json:"ssl,omitempty"`
}

// PostFleetFleetServerHostsParams defines parameters for PostFleetFleetServerHosts.
type PostFleetFleetServerHostsParams struct {
	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PostFleetFleetServerHostsJSONBodySecretsSslEsKey0 defines parameters for PostFleetFleetServerHosts.
type PostFleetFleetServerHostsJSONBodySecretsSslEsKey0 struct {
	Id string `json:"id"`
}

// PostFleetFleetServerHostsJSONBodySecretsSslEsKey1 defines parameters for PostFleetFleetServerHosts.
type PostFleetFleetServerHostsJSONBodySecretsSslEsKey1 = string

// PostFleetFleetServerHostsJSONBody_Secrets_Ssl_EsKey defines parameters for PostFleetFleetServerHosts.
type PostFleetFleetServerHostsJSONBody_Secrets_Ssl_EsKey struct {
	union json.RawMessage
}

// PostFleetFleetServerHostsJSONBodySecretsSslKey0 defines parameters for PostFleetFleetServerHosts.
type PostFleetFleetServerHostsJSONBodySecretsSslKey0 struct {
	Id string `json:"id"`
}

// PostFleetFleetServerHostsJSONBodySecretsSslKey1 defines parameters for PostFleetFleetServerHosts.
type PostFleetFleetServerHostsJSONBodySecretsSslKey1 = string

// PostFleetFleetServerHostsJSONBody_Secrets_Ssl_Key defines parameters for PostFleetFleetServerHosts.
type PostFleetFleetServerHostsJSONBody_Secrets_Ssl_Key struct {
	union json.RawMessage
}

// PostFleetFleetServerHostsJSONBodySslClientAuth defines parameters for PostFleetFleetServerHosts.
type PostFleetFleetServerHostsJSONBodySslClientAuth string

// DeleteFleetFleetServerHostsItemidParams defines parameters for DeleteFleetFleetServerHostsItemid.
type DeleteFleetFleetServerHostsItemidParams struct {
	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PutFleetFleetServerHostsItemidJSONBody defines parameters for PutFleetFleetServerHostsItemid.
type PutFleetFleetServerHostsItemidJSONBody struct {
	HostUrls   *[]string `json:"host_urls,omitempty"`
	IsDefault  *bool     `json:"is_default,omitempty"`
	IsInternal *bool     `json:"is_internal,omitempty"`
	Name       *string   `json:"name,omitempty"`
	ProxyId    *string   `json:"proxy_id,omitempty"`
	Secrets    *struct {
		Ssl *struct {
			EsKey *PutFleetFleetServerHostsItemidJSONBody_Secrets_Ssl_EsKey `json:"es_key,omitempty"`
			Key   *PutFleetFleetServerHostsItemidJSONBody_Secrets_Ssl_Key   `json:"key,omitempty"`
		} `json:"ssl,omitempty"`
	} `json:"secrets,omitempty"`
	Ssl *struct {
		Certificate              *string                                              `json:"certificate,omitempty"`
		CertificateAuthorities   *[]string                                            `json:"certificate_authorities,omitempty"`
		ClientAuth               *PutFleetFleetServerHostsItemidJSONBodySslClientAuth `json:"client_auth,omitempty"`
		EsCertificate            *string                                              `json:"es_certificate,omitempty"`
		EsCertificateAuthorities *[]string                                            `json:"es_certificate_authorities,omitempty"`
		EsKey                    *string                                              `json:"es_key,omitempty"`
		Key                      *string                                              `json:"key,omitempty"`
	} `json:"ssl,omitempty"`
}

// PutFleetFleetServerHostsItemidParams defines parameters for PutFleetFleetServerHostsItemid.
type PutFleetFleetServerHostsItemidParams struct {
	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PutFleetFleetServerHostsItemidJSONBodySecretsSslEsKey0 defines parameters for PutFleetFleetServerHostsItemid.
type PutFleetFleetServerHostsItemidJSONBodySecretsSslEsKey0 struct {
	Id string `json:"id"`
}

// PutFleetFleetServerHostsItemidJSONBodySecretsSslEsKey1 defines parameters for PutFleetFleetServerHostsItemid.
type PutFleetFleetServerHostsItemidJSONBodySecretsSslEsKey1 = string

// PutFleetFleetServerHostsItemidJSONBody_Secrets_Ssl_EsKey defines parameters for PutFleetFleetServerHostsItemid.
type PutFleetFleetServerHostsItemidJSONBody_Secrets_Ssl_EsKey struct {
	union json.RawMessage
}

// PutFleetFleetServerHostsItemidJSONBodySecretsSslKey0 defines parameters for PutFleetFleetServerHostsItemid.
type PutFleetFleetServerHostsItemidJSONBodySecretsSslKey0 struct {
	Id string `json:"id"`
}

// PutFleetFleetServerHostsItemidJSONBodySecretsSslKey1 defines parameters for PutFleetFleetServerHostsItemid.
type PutFleetFleetServerHostsItemidJSONBodySecretsSslKey1 = string

// PutFleetFleetServerHostsItemidJSONBody_Secrets_Ssl_Key defines parameters for PutFleetFleetServerHostsItemid.
type PutFleetFleetServerHostsItemidJSONBody_Secrets_Ssl_Key struct {
	union json.RawMessage
}

// PutFleetFleetServerHostsItemidJSONBodySslClientAuth defines parameters for PutFleetFleetServerHostsItemid.
type PutFleetFleetServerHostsItemidJSONBodySslClientAuth string

// PostFleetOutputsJSONBody defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody struct {
	union json.RawMessage
}

// PostFleetOutputsParams defines parameters for PostFleetOutputs.
type PostFleetOutputsParams struct {
	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PostFleetOutputsJSONBody0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody0 struct {
	AllowEdit            *[]string                        `json:"allow_edit,omitempty"`
	CaSha256             *string                          `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                          `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                          `json:"config_yaml,omitempty"`
	Hosts                []string                         `json:"hosts"`
	Id                   *string                          `json:"id,omitempty"`
	IsDefault            *bool                            `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                            `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                            `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                            `json:"is_preconfigured,omitempty"`
	Name                 string                           `json:"name"`
	Preset               *PostFleetOutputsJSONBody0Preset `json:"preset,omitempty"`
	ProxyId              *string                          `json:"proxy_id,omitempty"`
	Secrets              *struct {
		Ssl *struct {
			Key *PostFleetOutputsJSONBody_0_Secrets_Ssl_Key `json:"key,omitempty"`
		} `json:"ssl,omitempty"`
	} `json:"secrets,omitempty"`
	Shipper *struct {
		CompressionLevel            *float32 `json:"compression_level,omitempty"`
		DiskQueueCompressionEnabled *bool    `json:"disk_queue_compression_enabled,omitempty"`
		DiskQueueEnabled            *bool    `json:"disk_queue_enabled,omitempty"`
		DiskQueueEncryptionEnabled  *bool    `json:"disk_queue_encryption_enabled,omitempty"`
		DiskQueueMaxSize            *float32 `json:"disk_queue_max_size,omitempty"`
		DiskQueuePath               *string  `json:"disk_queue_path,omitempty"`
		Loadbalance                 *bool    `json:"loadbalance,omitempty"`
		MaxBatchBytes               *float32 `json:"max_batch_bytes,omitempty"`
		MemQueueEvents              *float32 `json:"mem_queue_events,omitempty"`
		QueueFlushTimeout           *float32 `json:"queue_flush_timeout,omitempty"`
	} `json:"shipper,omitempty"`
	Ssl *struct {
		Certificate            *string                                       `json:"certificate,omitempty"`
		CertificateAuthorities *[]string                                     `json:"certificate_authorities,omitempty"`
		Key                    *string                                       `json:"key,omitempty"`
		VerificationMode       *PostFleetOutputsJSONBody0SslVerificationMode `json:"verification_mode,omitempty"`
	} `json:"ssl,omitempty"`
	Type PostFleetOutputsJSONBody0Type `json:"type"`
}

// PostFleetOutputsJSONBody0Preset defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody0Preset string

// PostFleetOutputsJSONBody0SecretsSslKey0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody0SecretsSslKey0 struct {
	Id string `json:"id"`
}

// PostFleetOutputsJSONBody0SecretsSslKey1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody0SecretsSslKey1 = string

// PostFleetOutputsJSONBody_0_Secrets_Ssl_Key defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody_0_Secrets_Ssl_Key struct {
	union json.RawMessage
}

// PostFleetOutputsJSONBody0SslVerificationMode defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody0SslVerificationMode string

// PostFleetOutputsJSONBody0Type defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody0Type string

// PostFleetOutputsJSONBody1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody1 struct {
	AllowEdit            *[]string                        `json:"allow_edit,omitempty"`
	CaSha256             *string                          `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                          `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                          `json:"config_yaml,omitempty"`
	Hosts                []string                         `json:"hosts"`
	Id                   *string                          `json:"id,omitempty"`
	IsDefault            *bool                            `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                            `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                            `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                            `json:"is_preconfigured,omitempty"`
	KibanaApiKey         *string                          `json:"kibana_api_key,omitempty"`
	KibanaUrl            *string                          `json:"kibana_url,omitempty"`
	Name                 string                           `json:"name"`
	Preset               *PostFleetOutputsJSONBody1Preset `json:"preset,omitempty"`
	ProxyId              *string                          `json:"proxy_id,omitempty"`
	Secrets              *struct {
		ServiceToken *PostFleetOutputsJSONBody_1_Secrets_ServiceToken `json:"service_token,omitempty"`
		Ssl          *struct {
			Key *PostFleetOutputsJSONBody_1_Secrets_Ssl_Key `json:"key,omitempty"`
		} `json:"ssl,omitempty"`
	} `json:"secrets,omitempty"`
	ServiceToken *string `json:"service_token,omitempty"`
	Shipper      *struct {
		CompressionLevel            *float32 `json:"compression_level,omitempty"`
		DiskQueueCompressionEnabled *bool    `json:"disk_queue_compression_enabled,omitempty"`
		DiskQueueEnabled            *bool    `json:"disk_queue_enabled,omitempty"`
		DiskQueueEncryptionEnabled  *bool    `json:"disk_queue_encryption_enabled,omitempty"`
		DiskQueueMaxSize            *float32 `json:"disk_queue_max_size,omitempty"`
		DiskQueuePath               *string  `json:"disk_queue_path,omitempty"`
		Loadbalance                 *bool    `json:"loadbalance,omitempty"`
		MaxBatchBytes               *float32 `json:"max_batch_bytes,omitempty"`
		MemQueueEvents              *float32 `json:"mem_queue_events,omitempty"`
		QueueFlushTimeout           *float32 `json:"queue_flush_timeout,omitempty"`
	} `json:"shipper,omitempty"`
	Ssl *struct {
		Certificate            *string                                       `json:"certificate,omitempty"`
		CertificateAuthorities *[]string                                     `json:"certificate_authorities,omitempty"`
		Key                    *string                                       `json:"key,omitempty"`
		VerificationMode       *PostFleetOutputsJSONBody1SslVerificationMode `json:"verification_mode,omitempty"`
	} `json:"ssl,omitempty"`
	SyncIntegrations            *bool                         `json:"sync_integrations,omitempty"`
	SyncUninstalledIntegrations *bool                         `json:"sync_uninstalled_integrations,omitempty"`
	Type                        PostFleetOutputsJSONBody1Type `json:"type"`
}

// PostFleetOutputsJSONBody1Preset defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody1Preset string

// PostFleetOutputsJSONBody1SecretsServiceToken0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody1SecretsServiceToken0 struct {
	Id string `json:"id"`
}

// PostFleetOutputsJSONBody1SecretsServiceToken1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody1SecretsServiceToken1 = string

// PostFleetOutputsJSONBody_1_Secrets_ServiceToken defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody_1_Secrets_ServiceToken struct {
	union json.RawMessage
}

// PostFleetOutputsJSONBody1SecretsSslKey0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody1SecretsSslKey0 struct {
	Id string `json:"id"`
}

// PostFleetOutputsJSONBody1SecretsSslKey1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody1SecretsSslKey1 = string

// PostFleetOutputsJSONBody_1_Secrets_Ssl_Key defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody_1_Secrets_Ssl_Key struct {
	union json.RawMessage
}

// PostFleetOutputsJSONBody1SslVerificationMode defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody1SslVerificationMode string

// PostFleetOutputsJSONBody1Type defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody1Type string

// PostFleetOutputsJSONBody2 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody2 struct {
	AllowEdit            *[]string `json:"allow_edit,omitempty"`
	CaSha256             *string   `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string   `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string   `json:"config_yaml,omitempty"`
	Hosts                []string  `json:"hosts"`
	Id                   *string   `json:"id,omitempty"`
	IsDefault            *bool     `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool     `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool     `json:"is_internal,omitempty"`
	IsPreconfigured      *bool     `json:"is_preconfigured,omitempty"`
	Name                 string    `json:"name"`
	ProxyId              *string   `json:"proxy_id,omitempty"`
	Secrets              *struct {
		Ssl *struct {
			Key *PostFleetOutputsJSONBody_2_Secrets_Ssl_Key `json:"key,omitempty"`
		} `json:"ssl,omitempty"`
	} `json:"secrets,omitempty"`
	Shipper *struct {
		CompressionLevel            *float32 `json:"compression_level,omitempty"`
		DiskQueueCompressionEnabled *bool    `json:"disk_queue_compression_enabled,omitempty"`
		DiskQueueEnabled            *bool    `json:"disk_queue_enabled,omitempty"`
		DiskQueueEncryptionEnabled  *bool    `json:"disk_queue_encryption_enabled,omitempty"`
		DiskQueueMaxSize            *float32 `json:"disk_queue_max_size,omitempty"`
		DiskQueuePath               *string  `json:"disk_queue_path,omitempty"`
		Loadbalance                 *bool    `json:"loadbalance,omitempty"`
		MaxBatchBytes               *float32 `json:"max_batch_bytes,omitempty"`
		MemQueueEvents              *float32 `json:"mem_queue_events,omitempty"`
		QueueFlushTimeout           *float32 `json:"queue_flush_timeout,omitempty"`
	} `json:"shipper,omitempty"`
	Ssl *struct {
		Certificate            *string                                       `json:"certificate,omitempty"`
		CertificateAuthorities *[]string                                     `json:"certificate_authorities,omitempty"`
		Key                    *string                                       `json:"key,omitempty"`
		VerificationMode       *PostFleetOutputsJSONBody2SslVerificationMode `json:"verification_mode,omitempty"`
	} `json:"ssl,omitempty"`
	Type PostFleetOutputsJSONBody2Type `json:"type"`
}

// PostFleetOutputsJSONBody2SecretsSslKey0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody2SecretsSslKey0 struct {
	Id string `json:"id"`
}

// PostFleetOutputsJSONBody2SecretsSslKey1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody2SecretsSslKey1 = string

// PostFleetOutputsJSONBody_2_Secrets_Ssl_Key defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody_2_Secrets_Ssl_Key struct {
	union json.RawMessage
}

// PostFleetOutputsJSONBody2SslVerificationMode defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody2SslVerificationMode string

// PostFleetOutputsJSONBody2Type defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody2Type string

// PostFleetOutputsJSONBody3 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3 struct {
	AllowEdit            *[]string                                    `json:"allow_edit,omitempty"`
	AuthType             PostFleetOutputsJSONBody3AuthType            `json:"auth_type"`
	BrokerTimeout        *float32                                     `json:"broker_timeout,omitempty"`
	CaSha256             *string                                      `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                      `json:"ca_trusted_fingerprint,omitempty"`
	ClientId             *string                                      `json:"client_id,omitempty"`
	Compression          *PostFleetOutputsJSONBody3Compression        `json:"compression,omitempty"`
	CompressionLevel     *PostFleetOutputsJSONBody_3_CompressionLevel `json:"compression_level,omitempty"`
	ConfigYaml           *string                                      `json:"config_yaml,omitempty"`
	ConnectionType       *PostFleetOutputsJSONBody_3_ConnectionType   `json:"connection_type,omitempty"`
	Hash                 *struct {
		Hash   *string `json:"hash,omitempty"`
		Random *bool   `json:"random,omitempty"`
	} `json:"hash,omitempty"`
	Headers *[]struct {
		Key   string `json:"key"`
		Value string `json:"value"`
	} `json:"headers,omitempty"`
	Hosts               []string                             `json:"hosts"`
	Id                  *string                              `json:"id,omitempty"`
	IsDefault           *bool                                `json:"is_default,omitempty"`
	IsDefaultMonitoring *bool                                `json:"is_default_monitoring,omitempty"`
	IsInternal          *bool                                `json:"is_internal,omitempty"`
	IsPreconfigured     *bool                                `json:"is_preconfigured,omitempty"`
	Key                 *string                              `json:"key,omitempty"`
	Name                string                               `json:"name"`
	Partition           *PostFleetOutputsJSONBody3Partition  `json:"partition,omitempty"`
	Password            *PostFleetOutputsJSONBody_3_Password `json:"password,omitempty"`
	ProxyId             *string                              `json:"proxy_id,omitempty"`
	Random              *struct {
		GroupEvents *float32 `json:"group_events,omitempty"`
	} `json:"random,omitempty"`
	RequiredAcks *PostFleetOutputsJSONBody3RequiredAcks `json:"required_acks,omitempty"`
	RoundRobin   *struct {
		GroupEvents *float32 `json:"group_events,omitempty"`
	} `json:"round_robin,omitempty"`
	Sasl *struct {
		Mechanism *PostFleetOutputsJSONBody3SaslMechanism `json:"mechanism,omitempty"`
	} `json:"sasl,omitempty"`
	Secrets *struct {
		Password *PostFleetOutputsJSONBody_3_Secrets_Password `json:"password,omitempty"`
		Ssl      *struct {
			Key PostFleetOutputsJSONBody_3_Secrets_Ssl_Key `json:"key"`
		} `json:"ssl,omitempty"`
	} `json:"secrets,omitempty"`
	Shipper *struct {
		CompressionLevel            *float32 `json:"compression_level,omitempty"`
		DiskQueueCompressionEnabled *bool    `json:"disk_queue_compression_enabled,omitempty"`
		DiskQueueEnabled            *bool    `json:"disk_queue_enabled,omitempty"`
		DiskQueueEncryptionEnabled  *bool    `json:"disk_queue_encryption_enabled,omitempty"`
		DiskQueueMaxSize            *float32 `json:"disk_queue_max_size,omitempty"`
		DiskQueuePath               *string  `json:"disk_queue_path,omitempty"`
		Loadbalance                 *bool    `json:"loadbalance,omitempty"`
		MaxBatchBytes               *float32 `json:"max_batch_bytes,omitempty"`
		MemQueueEvents              *float32 `json:"mem_queue_events,omitempty"`
		QueueFlushTimeout           *float32 `json:"queue_flush_timeout,omitempty"`
	} `json:"shipper,omitempty"`
	Ssl *struct {
		Certificate            *string                                       `json:"certificate,omitempty"`
		CertificateAuthorities *[]string                                     `json:"certificate_authorities,omitempty"`
		Key                    *string                                       `json:"key,omitempty"`
		VerificationMode       *PostFleetOutputsJSONBody3SslVerificationMode `json:"verification_mode,omitempty"`
	} `json:"ssl,omitempty"`
	Timeout  *float32                             `json:"timeout,omitempty"`
	Topic    *string                              `json:"topic,omitempty"`
	Type     PostFleetOutputsJSONBody3Type        `json:"type"`
	Username *PostFleetOutputsJSONBody_3_Username `json:"username,omitempty"`
	Version  *string                              `json:"version,omitempty"`
}

// PostFleetOutputsJSONBody3AuthType defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3AuthType string

// PostFleetOutputsJSONBody3Compression defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Compression string

// PostFleetOutputsJSONBody3CompressionLevel0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3CompressionLevel0 = []interface{}

// PostFleetOutputsJSONBody3CompressionLevel1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3CompressionLevel1 = bool

// PostFleetOutputsJSONBody3CompressionLevel2 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3CompressionLevel2 = float32

// PostFleetOutputsJSONBody3CompressionLevel3 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3CompressionLevel3 = map[string]interface{}

// PostFleetOutputsJSONBody3CompressionLevel4 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3CompressionLevel4 = string

// PostFleetOutputsJSONBody3CompressionLevel0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3CompressionLevel0 = float32

// PostFleetOutputsJSONBody3CompressionLevel1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3CompressionLevel1 = interface{}

// PostFleetOutputsJSONBody_3_CompressionLevel defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody_3_CompressionLevel struct {
	union json.RawMessage
}

// PostFleetOutputsJSONBody3ConnectionType0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3ConnectionType0 = []interface{}

// PostFleetOutputsJSONBody3ConnectionType1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3ConnectionType1 = bool

// PostFleetOutputsJSONBody3ConnectionType2 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3ConnectionType2 = float32

// PostFleetOutputsJSONBody3ConnectionType3 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3ConnectionType3 = map[string]interface{}

// PostFleetOutputsJSONBody3ConnectionType4 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3ConnectionType4 = string

// PostFleetOutputsJSONBody3ConnectionType0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3ConnectionType0 string

// PostFleetOutputsJSONBody3ConnectionType1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3ConnectionType1 = interface{}

// PostFleetOutputsJSONBody_3_ConnectionType defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody_3_ConnectionType struct {
	union json.RawMessage
}

// PostFleetOutputsJSONBody3Partition defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Partition string

// PostFleetOutputsJSONBody3Password0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password0 = []interface{}

// PostFleetOutputsJSONBody3Password1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password1 = bool

// PostFleetOutputsJSONBody3Password2 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password2 = float32

// PostFleetOutputsJSONBody3Password3 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password3 = map[string]interface{}

// PostFleetOutputsJSONBody3Password4 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password4 = string

// PostFleetOutputsJSONBody3Password0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password0 = interface{}

// PostFleetOutputsJSONBody3Password1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password1 struct {
	union json.RawMessage
}

// PostFleetOutputsJSONBody3Password10 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password10 = []interface{}

// PostFleetOutputsJSONBody3Password11 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password11 = bool

// PostFleetOutputsJSONBody3Password12 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password12 = float32

// PostFleetOutputsJSONBody3Password13 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password13 = map[string]interface{}

// PostFleetOutputsJSONBody3Password14 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password14 = string

// PostFleetOutputsJSONBody3Password10 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password10 = string

// PostFleetOutputsJSONBody3Password11 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Password11 = interface{}

// PostFleetOutputsJSONBody_3_Password defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody_3_Password struct {
	union json.RawMessage
}

// PostFleetOutputsJSONBody3RequiredAcks defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3RequiredAcks int

// PostFleetOutputsJSONBody3SaslMechanism defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3SaslMechanism string

// PostFleetOutputsJSONBody3SecretsPassword0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3SecretsPassword0 struct {
	Id string `json:"id"`
}

// PostFleetOutputsJSONBody3SecretsPassword1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3SecretsPassword1 = string

// PostFleetOutputsJSONBody_3_Secrets_Password defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody_3_Secrets_Password struct {
	union json.RawMessage
}

// PostFleetOutputsJSONBody3SecretsSslKey0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3SecretsSslKey0 struct {
	Id string `json:"id"`
}

// PostFleetOutputsJSONBody3SecretsSslKey1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3SecretsSslKey1 = string

// PostFleetOutputsJSONBody_3_Secrets_Ssl_Key defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody_3_Secrets_Ssl_Key struct {
	union json.RawMessage
}

// PostFleetOutputsJSONBody3SslVerificationMode defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3SslVerificationMode string

// PostFleetOutputsJSONBody3Type defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Type string

// PostFleetOutputsJSONBody3Username0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Username0 = []interface{}

// PostFleetOutputsJSONBody3Username1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Username1 = bool

// PostFleetOutputsJSONBody3Username2 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Username2 = float32

// PostFleetOutputsJSONBody3Username3 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Username3 = map[string]interface{}

// PostFleetOutputsJSONBody3Username4 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Username4 = string

// PostFleetOutputsJSONBody3Username0 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Username0 = string

// PostFleetOutputsJSONBody3Username1 defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody3Username1 = interface{}

// PostFleetOutputsJSONBody_3_Username defines parameters for PostFleetOutputs.
type PostFleetOutputsJSONBody_3_Username struct {
	union json.RawMessage
}

// DeleteFleetOutputsOutputidParams defines parameters for DeleteFleetOutputsOutputid.
type DeleteFleetOutputsOutputidParams struct {
	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PutFleetOutputsOutputidJSONBody defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidParams defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidParams struct {
	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PutFleetOutputsOutputidJSONBody0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody0 struct {
	AllowEdit            *[]string                               `json:"allow_edit,omitempty"`
	CaSha256             *string                                 `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                 `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                                 `json:"config_yaml,omitempty"`
	Hosts                *[]string                               `json:"hosts,omitempty"`
	Id                   *string                                 `json:"id,omitempty"`
	IsDefault            *bool                                   `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                   `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                   `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                   `json:"is_preconfigured,omitempty"`
	Name                 *string                                 `json:"name,omitempty"`
	Preset               *PutFleetOutputsOutputidJSONBody0Preset `json:"preset,omitempty"`
	ProxyId              *string                                 `json:"proxy_id,omitempty"`
	Secrets              *struct {
		Ssl *struct {
			Key *PutFleetOutputsOutputidJSONBody_0_Secrets_Ssl_Key `json:"key,omitempty"`
		} `json:"ssl,omitempty"`
	} `json:"secrets,omitempty"`
	Shipper *struct {
		CompressionLevel            *float32 `json:"compression_level,omitempty"`
		DiskQueueCompressionEnabled *bool    `json:"disk_queue_compression_enabled,omitempty"`
		DiskQueueEnabled            *bool    `json:"disk_queue_enabled,omitempty"`
		DiskQueueEncryptionEnabled  *bool    `json:"disk_queue_encryption_enabled,omitempty"`
		DiskQueueMaxSize            *float32 `json:"disk_queue_max_size,omitempty"`
		DiskQueuePath               *string  `json:"disk_queue_path,omitempty"`
		Loadbalance                 *bool    `json:"loadbalance,omitempty"`
		MaxBatchBytes               *float32 `json:"max_batch_bytes,omitempty"`
		MemQueueEvents              *float32 `json:"mem_queue_events,omitempty"`
		QueueFlushTimeout           *float32 `json:"queue_flush_timeout,omitempty"`
	} `json:"shipper,omitempty"`
	Ssl *struct {
		Certificate            *string                                              `json:"certificate,omitempty"`
		CertificateAuthorities *[]string                                            `json:"certificate_authorities,omitempty"`
		Key                    *string                                              `json:"key,omitempty"`
		VerificationMode       *PutFleetOutputsOutputidJSONBody0SslVerificationMode `json:"verification_mode,omitempty"`
	} `json:"ssl,omitempty"`
	Type *PutFleetOutputsOutputidJSONBody0Type `json:"type,omitempty"`
}

// PutFleetOutputsOutputidJSONBody0Preset defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody0Preset string

// PutFleetOutputsOutputidJSONBody0SecretsSslKey0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody0SecretsSslKey0 struct {
	Id string `json:"id"`
}

// PutFleetOutputsOutputidJSONBody0SecretsSslKey1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody0SecretsSslKey1 = string

// PutFleetOutputsOutputidJSONBody_0_Secrets_Ssl_Key defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody_0_Secrets_Ssl_Key struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidJSONBody0SslVerificationMode defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody0SslVerificationMode string

// PutFleetOutputsOutputidJSONBody0Type defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody0Type string

// PutFleetOutputsOutputidJSONBody1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody1 struct {
	AllowEdit            *[]string                               `json:"allow_edit,omitempty"`
	CaSha256             *string                                 `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                 `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                                 `json:"config_yaml,omitempty"`
	Hosts                *[]string                               `json:"hosts,omitempty"`
	Id                   *string                                 `json:"id,omitempty"`
	IsDefault            *bool                                   `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                   `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                   `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                   `json:"is_preconfigured,omitempty"`
	KibanaApiKey         *string                                 `json:"kibana_api_key,omitempty"`
	KibanaUrl            *string                                 `json:"kibana_url,omitempty"`
	Name                 *string                                 `json:"name,omitempty"`
	Preset               *PutFleetOutputsOutputidJSONBody1Preset `json:"preset,omitempty"`
	ProxyId              *string                                 `json:"proxy_id,omitempty"`
	Secrets              *struct {
		ServiceToken *PutFleetOutputsOutputidJSONBody_1_Secrets_ServiceToken `json:"service_token,omitempty"`
		Ssl          *struct {
			Key *PutFleetOutputsOutputidJSONBody_1_Secrets_Ssl_Key `json:"key,omitempty"`
		} `json:"ssl,omitempty"`
	} `json:"secrets,omitempty"`
	ServiceToken *string `json:"service_token,omitempty"`
	Shipper      *struct {
		CompressionLevel            *float32 `json:"compression_level,omitempty"`
		DiskQueueCompressionEnabled *bool    `json:"disk_queue_compression_enabled,omitempty"`
		DiskQueueEnabled            *bool    `json:"disk_queue_enabled,omitempty"`
		DiskQueueEncryptionEnabled  *bool    `json:"disk_queue_encryption_enabled,omitempty"`
		DiskQueueMaxSize            *float32 `json:"disk_queue_max_size,omitempty"`
		DiskQueuePath               *string  `json:"disk_queue_path,omitempty"`
		Loadbalance                 *bool    `json:"loadbalance,omitempty"`
		MaxBatchBytes               *float32 `json:"max_batch_bytes,omitempty"`
		MemQueueEvents              *float32 `json:"mem_queue_events,omitempty"`
		QueueFlushTimeout           *float32 `json:"queue_flush_timeout,omitempty"`
	} `json:"shipper,omitempty"`
	Ssl *struct {
		Certificate            *string                                              `json:"certificate,omitempty"`
		CertificateAuthorities *[]string                                            `json:"certificate_authorities,omitempty"`
		Key                    *string                                              `json:"key,omitempty"`
		VerificationMode       *PutFleetOutputsOutputidJSONBody1SslVerificationMode `json:"verification_mode,omitempty"`
	} `json:"ssl,omitempty"`
	SyncIntegrations            *bool                                 `json:"sync_integrations,omitempty"`
	SyncUninstalledIntegrations *bool                                 `json:"sync_uninstalled_integrations,omitempty"`
	Type                        *PutFleetOutputsOutputidJSONBody1Type `json:"type,omitempty"`
}

// PutFleetOutputsOutputidJSONBody1Preset defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody1Preset string

// PutFleetOutputsOutputidJSONBody1SecretsServiceToken0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody1SecretsServiceToken0 struct {
	Id string `json:"id"`
}

// PutFleetOutputsOutputidJSONBody1SecretsServiceToken1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody1SecretsServiceToken1 = string

// PutFleetOutputsOutputidJSONBody_1_Secrets_ServiceToken defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody_1_Secrets_ServiceToken struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidJSONBody1SecretsSslKey0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody1SecretsSslKey0 struct {
	Id string `json:"id"`
}

// PutFleetOutputsOutputidJSONBody1SecretsSslKey1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody1SecretsSslKey1 = string

// PutFleetOutputsOutputidJSONBody_1_Secrets_Ssl_Key defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody_1_Secrets_Ssl_Key struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidJSONBody1SslVerificationMode defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody1SslVerificationMode string

// PutFleetOutputsOutputidJSONBody1Type defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody1Type string

// PutFleetOutputsOutputidJSONBody2 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody2 struct {
	AllowEdit            *[]string `json:"allow_edit,omitempty"`
	CaSha256             *string   `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string   `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string   `json:"config_yaml,omitempty"`
	Hosts                *[]string `json:"hosts,omitempty"`
	Id                   *string   `json:"id,omitempty"`
	IsDefault            *bool     `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool     `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool     `json:"is_internal,omitempty"`
	IsPreconfigured      *bool     `json:"is_preconfigured,omitempty"`
	Name                 *string   `json:"name,omitempty"`
	ProxyId              *string   `json:"proxy_id,omitempty"`
	Secrets              *struct {
		Ssl *struct {
			Key *PutFleetOutputsOutputidJSONBody_2_Secrets_Ssl_Key `json:"key,omitempty"`
		} `json:"ssl,omitempty"`
	} `json:"secrets,omitempty"`
	Shipper *struct {
		CompressionLevel            *float32 `json:"compression_level,omitempty"`
		DiskQueueCompressionEnabled *bool    `json:"disk_queue_compression_enabled,omitempty"`
		DiskQueueEnabled            *bool    `json:"disk_queue_enabled,omitempty"`
		DiskQueueEncryptionEnabled  *bool    `json:"disk_queue_encryption_enabled,omitempty"`
		DiskQueueMaxSize            *float32 `json:"disk_queue_max_size,omitempty"`
		DiskQueuePath               *string  `json:"disk_queue_path,omitempty"`
		Loadbalance                 *bool    `json:"loadbalance,omitempty"`
		MaxBatchBytes               *float32 `json:"max_batch_bytes,omitempty"`
		MemQueueEvents              *float32 `json:"mem_queue_events,omitempty"`
		QueueFlushTimeout           *float32 `json:"queue_flush_timeout,omitempty"`
	} `json:"shipper,omitempty"`
	Ssl *struct {
		Certificate            *string                                              `json:"certificate,omitempty"`
		CertificateAuthorities *[]string                                            `json:"certificate_authorities,omitempty"`
		Key                    *string                                              `json:"key,omitempty"`
		VerificationMode       *PutFleetOutputsOutputidJSONBody2SslVerificationMode `json:"verification_mode,omitempty"`
	} `json:"ssl,omitempty"`
	Type *PutFleetOutputsOutputidJSONBody2Type `json:"type,omitempty"`
}

// PutFleetOutputsOutputidJSONBody2SecretsSslKey0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody2SecretsSslKey0 struct {
	Id string `json:"id"`
}

// PutFleetOutputsOutputidJSONBody2SecretsSslKey1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody2SecretsSslKey1 = string

// PutFleetOutputsOutputidJSONBody_2_Secrets_Ssl_Key defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody_2_Secrets_Ssl_Key struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidJSONBody2SslVerificationMode defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody2SslVerificationMode string

// PutFleetOutputsOutputidJSONBody2Type defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody2Type string

// PutFleetOutputsOutputidJSONBody3 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3 struct {
	AllowEdit            *[]string                                           `json:"allow_edit,omitempty"`
	AuthType             *PutFleetOutputsOutputidJSONBody3AuthType           `json:"auth_type,omitempty"`
	BrokerTimeout        *float32                                            `json:"broker_timeout,omitempty"`
	CaSha256             *string                                             `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                             `json:"ca_trusted_fingerprint,omitempty"`
	ClientId             *string                                             `json:"client_id,omitempty"`
	Compression          *PutFleetOutputsOutputidJSONBody3Compression        `json:"compression,omitempty"`
	CompressionLevel     *PutFleetOutputsOutputidJSONBody_3_CompressionLevel `json:"compression_level,omitempty"`
	ConfigYaml           *string                                             `json:"config_yaml,omitempty"`
	ConnectionType       *PutFleetOutputsOutputidJSONBody_3_ConnectionType   `json:"connection_type,omitempty"`
	Hash                 *struct {
		Hash   *string `json:"hash,omitempty"`
		Random *bool   `json:"random,omitempty"`
	} `json:"hash,omitempty"`
	Headers *[]struct {
		Key   string `json:"key"`
		Value string `json:"value"`
	} `json:"headers,omitempty"`
	Hosts               *[]string                                   `json:"hosts,omitempty"`
	Id                  *string                                     `json:"id,omitempty"`
	IsDefault           *bool                                       `json:"is_default,omitempty"`
	IsDefaultMonitoring *bool                                       `json:"is_default_monitoring,omitempty"`
	IsInternal          *bool                                       `json:"is_internal,omitempty"`
	IsPreconfigured     *bool                                       `json:"is_preconfigured,omitempty"`
	Key                 *string                                     `json:"key,omitempty"`
	Name                string                                      `json:"name"`
	Partition           *PutFleetOutputsOutputidJSONBody3Partition  `json:"partition,omitempty"`
	Password            *PutFleetOutputsOutputidJSONBody_3_Password `json:"password,omitempty"`
	ProxyId             *string                                     `json:"proxy_id,omitempty"`
	Random              *struct {
		GroupEvents *float32 `json:"group_events,omitempty"`
	} `json:"random,omitempty"`
	RequiredAcks *PutFleetOutputsOutputidJSONBody3RequiredAcks `json:"required_acks,omitempty"`
	RoundRobin   *struct {
		GroupEvents *float32 `json:"group_events,omitempty"`
	} `json:"round_robin,omitempty"`
	Sasl *struct {
		Mechanism *PutFleetOutputsOutputidJSONBody3SaslMechanism `json:"mechanism,omitempty"`
	} `json:"sasl,omitempty"`
	Secrets *struct {
		Password *PutFleetOutputsOutputidJSONBody_3_Secrets_Password `json:"password,omitempty"`
		Ssl      *struct {
			Key PutFleetOutputsOutputidJSONBody_3_Secrets_Ssl_Key `json:"key"`
		} `json:"ssl,omitempty"`
	} `json:"secrets,omitempty"`
	Shipper *struct {
		CompressionLevel            *float32 `json:"compression_level,omitempty"`
		DiskQueueCompressionEnabled *bool    `json:"disk_queue_compression_enabled,omitempty"`
		DiskQueueEnabled            *bool    `json:"disk_queue_enabled,omitempty"`
		DiskQueueEncryptionEnabled  *bool    `json:"disk_queue_encryption_enabled,omitempty"`
		DiskQueueMaxSize            *float32 `json:"disk_queue_max_size,omitempty"`
		DiskQueuePath               *string  `json:"disk_queue_path,omitempty"`
		Loadbalance                 *bool    `json:"loadbalance,omitempty"`
		MaxBatchBytes               *float32 `json:"max_batch_bytes,omitempty"`
		MemQueueEvents              *float32 `json:"mem_queue_events,omitempty"`
		QueueFlushTimeout           *float32 `json:"queue_flush_timeout,omitempty"`
	} `json:"shipper,omitempty"`
	Ssl *struct {
		Certificate            *string                                              `json:"certificate,omitempty"`
		CertificateAuthorities *[]string                                            `json:"certificate_authorities,omitempty"`
		Key                    *string                                              `json:"key,omitempty"`
		VerificationMode       *PutFleetOutputsOutputidJSONBody3SslVerificationMode `json:"verification_mode,omitempty"`
	} `json:"ssl,omitempty"`
	Timeout  *float32                                    `json:"timeout,omitempty"`
	Topic    *string                                     `json:"topic,omitempty"`
	Type     *PutFleetOutputsOutputidJSONBody3Type       `json:"type,omitempty"`
	Username *PutFleetOutputsOutputidJSONBody_3_Username `json:"username,omitempty"`
	Version  *string                                     `json:"version,omitempty"`
}

// PutFleetOutputsOutputidJSONBody3AuthType defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3AuthType string

// PutFleetOutputsOutputidJSONBody3Compression defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Compression string

// PutFleetOutputsOutputidJSONBody3CompressionLevel0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3CompressionLevel0 = []interface{}

// PutFleetOutputsOutputidJSONBody3CompressionLevel1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3CompressionLevel1 = bool

// PutFleetOutputsOutputidJSONBody3CompressionLevel2 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3CompressionLevel2 = float32

// PutFleetOutputsOutputidJSONBody3CompressionLevel3 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3CompressionLevel3 = map[string]interface{}

// PutFleetOutputsOutputidJSONBody3CompressionLevel4 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3CompressionLevel4 = string

// PutFleetOutputsOutputidJSONBody3CompressionLevel0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3CompressionLevel0 = float32

// PutFleetOutputsOutputidJSONBody3CompressionLevel1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3CompressionLevel1 = interface{}

// PutFleetOutputsOutputidJSONBody_3_CompressionLevel defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody_3_CompressionLevel struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidJSONBody3ConnectionType0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3ConnectionType0 = []interface{}

// PutFleetOutputsOutputidJSONBody3ConnectionType1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3ConnectionType1 = bool

// PutFleetOutputsOutputidJSONBody3ConnectionType2 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3ConnectionType2 = float32

// PutFleetOutputsOutputidJSONBody3ConnectionType3 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3ConnectionType3 = map[string]interface{}

// PutFleetOutputsOutputidJSONBody3ConnectionType4 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3ConnectionType4 = string

// PutFleetOutputsOutputidJSONBody3ConnectionType0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3ConnectionType0 string

// PutFleetOutputsOutputidJSONBody3ConnectionType1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3ConnectionType1 = interface{}

// PutFleetOutputsOutputidJSONBody_3_ConnectionType defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody_3_ConnectionType struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidJSONBody3Partition defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Partition string

// PutFleetOutputsOutputidJSONBody3Password0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password0 = []interface{}

// PutFleetOutputsOutputidJSONBody3Password1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password1 = bool

// PutFleetOutputsOutputidJSONBody3Password2 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password2 = float32

// PutFleetOutputsOutputidJSONBody3Password3 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password3 = map[string]interface{}

// PutFleetOutputsOutputidJSONBody3Password4 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password4 = string

// PutFleetOutputsOutputidJSONBody3Password0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password0 = interface{}

// PutFleetOutputsOutputidJSONBody3Password1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password1 struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidJSONBody3Password10 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password10 = []interface{}

// PutFleetOutputsOutputidJSONBody3Password11 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password11 = bool

// PutFleetOutputsOutputidJSONBody3Password12 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password12 = float32

// PutFleetOutputsOutputidJSONBody3Password13 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password13 = map[string]interface{}

// PutFleetOutputsOutputidJSONBody3Password14 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password14 = string

// PutFleetOutputsOutputidJSONBody3Password10 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password10 = string

// PutFleetOutputsOutputidJSONBody3Password11 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Password11 = interface{}

// PutFleetOutputsOutputidJSONBody_3_Password defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody_3_Password struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidJSONBody3RequiredAcks defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3RequiredAcks int

// PutFleetOutputsOutputidJSONBody3SaslMechanism defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3SaslMechanism string

// PutFleetOutputsOutputidJSONBody3SecretsPassword0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3SecretsPassword0 struct {
	Id string `json:"id"`
}

// PutFleetOutputsOutputidJSONBody3SecretsPassword1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3SecretsPassword1 = string

// PutFleetOutputsOutputidJSONBody_3_Secrets_Password defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody_3_Secrets_Password struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidJSONBody3SecretsSslKey0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3SecretsSslKey0 struct {
	Id string `json:"id"`
}

// PutFleetOutputsOutputidJSONBody3SecretsSslKey1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3SecretsSslKey1 = string

// PutFleetOutputsOutputidJSONBody_3_Secrets_Ssl_Key defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody_3_Secrets_Ssl_Key struct {
	union json.RawMessage
}

// PutFleetOutputsOutputidJSONBody3SslVerificationMode defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3SslVerificationMode string

// PutFleetOutputsOutputidJSONBody3Type defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Type string

// PutFleetOutputsOutputidJSONBody3Username0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Username0 = []interface{}

// PutFleetOutputsOutputidJSONBody3Username1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Username1 = bool

// PutFleetOutputsOutputidJSONBody3Username2 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Username2 = float32

// PutFleetOutputsOutputidJSONBody3Username3 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Username3 = map[string]interface{}

// PutFleetOutputsOutputidJSONBody3Username4 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Username4 = string

// PutFleetOutputsOutputidJSONBody3Username0 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Username0 = string

// PutFleetOutputsOutputidJSONBody3Username1 defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody3Username1 = interface{}

// PutFleetOutputsOutputidJSONBody_3_Username defines parameters for PutFleetOutputsOutputid.
type PutFleetOutputsOutputidJSONBody_3_Username struct {
	union json.RawMessage
}

// GetFleetPackagePoliciesParams defines parameters for GetFleetPackagePolicies.
type GetFleetPackagePoliciesParams struct {
	Page            *float32                                `form:"page,omitempty" json:"page,omitempty"`
	PerPage         *float32                                `form:"perPage,omitempty" json:"perPage,omitempty"`
	SortField       *string                                 `form:"sortField,omitempty" json:"sortField,omitempty"`
	SortOrder       *GetFleetPackagePoliciesParamsSortOrder `form:"sortOrder,omitempty" json:"sortOrder,omitempty"`
	ShowUpgradeable *bool                                   `form:"showUpgradeable,omitempty" json:"showUpgradeable,omitempty"`
	Kuery           *string                                 `form:"kuery,omitempty" json:"kuery,omitempty"`
	Format          *GetFleetPackagePoliciesParamsFormat    `form:"format,omitempty" json:"format,omitempty"`
	WithAgentCount  *bool                                   `form:"withAgentCount,omitempty" json:"withAgentCount,omitempty"`
}

// GetFleetPackagePoliciesParamsSortOrder defines parameters for GetFleetPackagePolicies.
type GetFleetPackagePoliciesParamsSortOrder string

// GetFleetPackagePoliciesParamsFormat defines parameters for GetFleetPackagePolicies.
type GetFleetPackagePoliciesParamsFormat string

// PostFleetPackagePoliciesJSONBody defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody struct {
	union json.RawMessage
}

// PostFleetPackagePoliciesParams defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesParams struct {
	Format *PostFleetPackagePoliciesParamsFormat `form:"format,omitempty" json:"format,omitempty"`

	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PostFleetPackagePoliciesParamsFormat defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesParamsFormat string

// PostFleetPackagePoliciesJSONBody0 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody0 struct {
	// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
	AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`

	// Description Package policy description
	Description *string `json:"description,omitempty"`
	Enabled     *bool   `json:"enabled,omitempty"`

	// Force Force package policy creation even if package is not verified, or if the agent policy is managed.
	Force *bool `json:"force,omitempty"`

	// Id Package policy unique identifier
	Id     *string `json:"id,omitempty"`
	Inputs []struct {
		// Config Package variable (see integration documentation for more information)
		Config *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"config,omitempty"`
		Enabled        bool    `json:"enabled"`
		Id             *string `json:"id,omitempty"`
		KeepEnabled    *bool   `json:"keep_enabled,omitempty"`
		PolicyTemplate *string `json:"policy_template,omitempty"`
		Streams        *[]struct {
			CompiledStream interface{} `json:"compiled_stream"`

			// Config Package variable (see integration documentation for more information)
			Config *map[string]struct {
				Frozen *bool       `json:"frozen,omitempty"`
				Type   *string     `json:"type,omitempty"`
				Value  interface{} `json:"value"`
			} `json:"config,omitempty"`
			DataStream struct {
				Dataset       string `json:"dataset"`
				Elasticsearch *struct {
					DynamicDataset   *bool `json:"dynamic_dataset,omitempty"`
					DynamicNamespace *bool `json:"dynamic_namespace,omitempty"`
					Privileges       *struct {
						Indices *[]string `json:"indices,omitempty"`
					} `json:"privileges,omitempty"`
				} `json:"elasticsearch,omitempty"`
				Type string `json:"type"`
			} `json:"data_stream"`
			Enabled     bool                                                   `json:"enabled"`
			Id          *string                                                `json:"id,omitempty"`
			KeepEnabled *bool                                                  `json:"keep_enabled,omitempty"`
			Release     *PostFleetPackagePoliciesJSONBody0InputsStreamsRelease `json:"release,omitempty"`

			// Vars Package variable (see integration documentation for more information)
			Vars *map[string]struct {
				Frozen *bool       `json:"frozen,omitempty"`
				Type   *string     `json:"type,omitempty"`
				Value  interface{} `json:"value"`
			} `json:"vars,omitempty"`
		} `json:"streams,omitempty"`
		Type string `json:"type"`

		// Vars Package variable (see integration documentation for more information)
		Vars *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"vars,omitempty"`
	} `json:"inputs"`
	IsManaged *bool `json:"is_managed,omitempty"`

	// Name Package policy name (should be unique)
	Name string `json:"name"`

	// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
	Namespace *string `json:"namespace,omitempty"`
	OutputId  *string `json:"output_id,omitempty"`

	// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
	Overrides *struct {
		Inputs *map[string]interface{} `json:"inputs,omitempty"`
	} `json:"overrides,omitempty"`
	Package *struct {
		ExperimentalDataStreamFeatures *[]struct {
			DataStream string `json:"data_stream"`
			Features   struct {
				DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
				DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
				SyntheticSource     *bool `json:"synthetic_source,omitempty"`
				Tsdb                *bool `json:"tsdb,omitempty"`
			} `json:"features"`
		} `json:"experimental_data_stream_features,omitempty"`

		// Name Package name
		Name         string  `json:"name"`
		RequiresRoot *bool   `json:"requires_root,omitempty"`
		Title        *string `json:"title,omitempty"`

		// Version Package version
		Version string `json:"version"`
	} `json:"package,omitempty"`

	// PolicyId Agent policy ID where that package policy will be added
	// Deprecated:
	PolicyId  *string   `json:"policy_id,omitempty"`
	PolicyIds *[]string `json:"policy_ids,omitempty"`
	SpaceIds  *[]string `json:"spaceIds,omitempty"`

	// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
	SupportsAgentless *bool `json:"supports_agentless,omitempty"`

	// Vars Package variable (see integration documentation for more information)
	Vars *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"vars,omitempty"`
}

// PostFleetPackagePoliciesJSONBody0InputsStreamsRelease defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody0InputsStreamsRelease string

// PostFleetPackagePoliciesJSONBody1 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1 struct {
	// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
	AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
	Description                      *string   `json:"description,omitempty"`
	Force                            *bool     `json:"force,omitempty"`
	Id                               *string   `json:"id,omitempty"`

	// Inputs Package policy inputs (see integration documentation to know what inputs are available)
	Inputs *map[string]struct {
		// Enabled enable or disable that input, (default to true)
		Enabled *bool `json:"enabled,omitempty"`

		// Streams Input streams (see integration documentation to know what streams are available)
		Streams *map[string]struct {
			// Enabled enable or disable that stream, (default to true)
			Enabled *bool `json:"enabled,omitempty"`

			// Vars Input/stream level variable (see integration documentation for more information)
			Vars *map[string]*PostFleetPackagePoliciesJSONBody_1_Inputs_Streams_Vars_AdditionalProperties `json:"vars,omitempty"`
		} `json:"streams,omitempty"`

		// Vars Input/stream level variable (see integration documentation for more information)
		Vars *map[string]*PostFleetPackagePoliciesJSONBody_1_Inputs_Vars_AdditionalProperties `json:"vars,omitempty"`
	} `json:"inputs,omitempty"`
	Name      string  `json:"name"`
	Namespace *string `json:"namespace,omitempty"`
	OutputId  *string `json:"output_id,omitempty"`
	Package   struct {
		ExperimentalDataStreamFeatures *[]struct {
			DataStream string `json:"data_stream"`
			Features   struct {
				DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
				DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
				SyntheticSource     *bool `json:"synthetic_source,omitempty"`
				Tsdb                *bool `json:"tsdb,omitempty"`
			} `json:"features"`
		} `json:"experimental_data_stream_features,omitempty"`

		// Name Package name
		Name         string  `json:"name"`
		RequiresRoot *bool   `json:"requires_root,omitempty"`
		Title        *string `json:"title,omitempty"`

		// Version Package version
		Version string `json:"version"`
	} `json:"package"`
	PolicyId  *string   `json:"policy_id,omitempty"`
	PolicyIds *[]string `json:"policy_ids,omitempty"`

	// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
	SupportsAgentless *bool `json:"supports_agentless,omitempty"`

	// Vars Input/stream level variable (see integration documentation for more information)
	Vars *map[string]*PostFleetPackagePoliciesJSONBody_1_Vars_AdditionalProperties `json:"vars,omitempty"`
}

// PostFleetPackagePoliciesJSONBody1InputsStreamsVars0 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsStreamsVars0 = bool

// PostFleetPackagePoliciesJSONBody1InputsStreamsVars1 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsStreamsVars1 = string

// PostFleetPackagePoliciesJSONBody1InputsStreamsVars2 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsStreamsVars2 = float32

// PostFleetPackagePoliciesJSONBody1InputsStreamsVars3 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsStreamsVars3 = []string

// PostFleetPackagePoliciesJSONBody1InputsStreamsVars4 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsStreamsVars4 = []float32

// PostFleetPackagePoliciesJSONBody1InputsStreamsVars5 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsStreamsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}

// PostFleetPackagePoliciesJSONBody_1_Inputs_Streams_Vars_AdditionalProperties defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody_1_Inputs_Streams_Vars_AdditionalProperties struct {
	union json.RawMessage
}

// PostFleetPackagePoliciesJSONBody1InputsVars0 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsVars0 = bool

// PostFleetPackagePoliciesJSONBody1InputsVars1 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsVars1 = string

// PostFleetPackagePoliciesJSONBody1InputsVars2 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsVars2 = float32

// PostFleetPackagePoliciesJSONBody1InputsVars3 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsVars3 = []string

// PostFleetPackagePoliciesJSONBody1InputsVars4 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsVars4 = []float32

// PostFleetPackagePoliciesJSONBody1InputsVars5 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1InputsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}

// PostFleetPackagePoliciesJSONBody_1_Inputs_Vars_AdditionalProperties defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody_1_Inputs_Vars_AdditionalProperties struct {
	union json.RawMessage
}

// PostFleetPackagePoliciesJSONBody1Vars0 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1Vars0 = bool

// PostFleetPackagePoliciesJSONBody1Vars1 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1Vars1 = string

// PostFleetPackagePoliciesJSONBody1Vars2 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1Vars2 = float32

// PostFleetPackagePoliciesJSONBody1Vars3 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1Vars3 = []string

// PostFleetPackagePoliciesJSONBody1Vars4 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1Vars4 = []float32

// PostFleetPackagePoliciesJSONBody1Vars5 defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody1Vars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}

// PostFleetPackagePoliciesJSONBody_1_Vars_AdditionalProperties defines parameters for PostFleetPackagePolicies.
type PostFleetPackagePoliciesJSONBody_1_Vars_AdditionalProperties struct {
	union json.RawMessage
}

// DeleteFleetPackagePoliciesPackagepolicyidParams defines parameters for DeleteFleetPackagePoliciesPackagepolicyid.
type DeleteFleetPackagePoliciesPackagepolicyidParams struct {
	Force *bool `form:"force,omitempty" json:"force,omitempty"`

	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// GetFleetPackagePoliciesPackagepolicyidParams defines parameters for GetFleetPackagePoliciesPackagepolicyid.
type GetFleetPackagePoliciesPackagepolicyidParams struct {
	Format *GetFleetPackagePoliciesPackagepolicyidParamsFormat `form:"format,omitempty" json:"format,omitempty"`
}

// GetFleetPackagePoliciesPackagepolicyidParamsFormat defines parameters for GetFleetPackagePoliciesPackagepolicyid.
type GetFleetPackagePoliciesPackagepolicyidParamsFormat string

// PutFleetPackagePoliciesPackagepolicyidJSONBody defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody struct {
	union json.RawMessage
}

// PutFleetPackagePoliciesPackagepolicyidParams defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidParams struct {
	Format *PutFleetPackagePoliciesPackagepolicyidParamsFormat `form:"format,omitempty" json:"format,omitempty"`

	// KbnXsrf A required header to protect against CSRF attacks
	KbnXsrf string `json:"kbn-xsrf"`
}

// PutFleetPackagePoliciesPackagepolicyidParamsFormat defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidParamsFormat string

// PutFleetPackagePoliciesPackagepolicyidJSONBody0 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody0 struct {
	// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
	AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`

	// Description Package policy description
	Description *string `json:"description,omitempty"`
	Enabled     *bool   `json:"enabled,omitempty"`
	Force       *bool   `json:"force,omitempty"`
	Inputs      *[]struct {
		// Config Package variable (see integration documentation for more information)
		Config *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"config,omitempty"`
		Enabled        bool    `json:"enabled"`
		Id             *string `json:"id,omitempty"`
		KeepEnabled    *bool   `json:"keep_enabled,omitempty"`
		PolicyTemplate *string `json:"policy_template,omitempty"`
		Streams        *[]struct {
			CompiledStream interface{} `json:"compiled_stream"`

			// Config Package variable (see integration documentation for more information)
			Config *map[string]struct {
				Frozen *bool       `json:"frozen,omitempty"`
				Type   *string     `json:"type,omitempty"`
				Value  interface{} `json:"value"`
			} `json:"config,omitempty"`
			DataStream struct {
				Dataset       string `json:"dataset"`
				Elasticsearch *struct {
					DynamicDataset   *bool `json:"dynamic_dataset,omitempty"`
					DynamicNamespace *bool `json:"dynamic_namespace,omitempty"`
					Privileges       *struct {
						Indices *[]string `json:"indices,omitempty"`
					} `json:"privileges,omitempty"`
				} `json:"elasticsearch,omitempty"`
				Type string `json:"type"`
			} `json:"data_stream"`
			Enabled     bool                                                                 `json:"enabled"`
			Id          *string                                                              `json:"id,omitempty"`
			KeepEnabled *bool                                                                `json:"keep_enabled,omitempty"`
			Release     *PutFleetPackagePoliciesPackagepolicyidJSONBody0InputsStreamsRelease `json:"release,omitempty"`

			// Vars Package variable (see integration documentation for more information)
			Vars *map[string]struct {
				Frozen *bool       `json:"frozen,omitempty"`
				Type   *string     `json:"type,omitempty"`
				Value  interface{} `json:"value"`
			} `json:"vars,omitempty"`
		} `json:"streams,omitempty"`
		Type string `json:"type"`

		// Vars Package variable (see integration documentation for more information)
		Vars *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"vars,omitempty"`
	} `json:"inputs,omitempty"`
	IsManaged *bool   `json:"is_managed,omitempty"`
	Name      *string `json:"name,omitempty"`

	// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
	Namespace *string `json:"namespace,omitempty"`
	OutputId  *string `json:"output_id,omitempty"`

	// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
	Overrides *struct {
		Inputs *map[string]interface{} `json:"inputs,omitempty"`
	} `json:"overrides,omitempty"`
	Package *struct {
		ExperimentalDataStreamFeatures *[]struct {
			DataStream string `json:"data_stream"`
			Features   struct {
				DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
				DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
				SyntheticSource     *bool `json:"synthetic_source,omitempty"`
				Tsdb                *bool `json:"tsdb,omitempty"`
			} `json:"features"`
		} `json:"experimental_data_stream_features,omitempty"`

		// Name Package name
		Name         string  `json:"name"`
		RequiresRoot *bool   `json:"requires_root,omitempty"`
		Title        *string `json:"title,omitempty"`

		// Version Package version
		Version string `json:"version"`
	} `json:"package,omitempty"`

	// PolicyId Agent policy ID where that package policy will be added
	// Deprecated:
	PolicyId  *string   `json:"policy_id,omitempty"`
	PolicyIds *[]string `json:"policy_ids,omitempty"`
	SpaceIds  *[]string `json:"spaceIds,omitempty"`

	// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
	SupportsAgentless *bool `json:"supports_agentless,omitempty"`

	// Vars Package variable (see integration documentation for more information)
	Vars *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"vars,omitempty"`
	Version *string `json:"version,omitempty"`
}

// PutFleetPackagePoliciesPackagepolicyidJSONBody0InputsStreamsRelease defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody0InputsStreamsRelease string

// PutFleetPackagePoliciesPackagepolicyidJSONBody1 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1 struct {
	// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
	AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
	Description                      *string   `json:"description,omitempty"`
	Force                            *bool     `json:"force,omitempty"`
	Id                               *string   `json:"id,omitempty"`

	// Inputs Package policy inputs (see integration documentation to know what inputs are available)
	Inputs *map[string]struct {
		// Enabled enable or disable that input, (default to true)
		Enabled *bool `json:"enabled,omitempty"`

		// Streams Input streams (see integration documentation to know what streams are available)
		Streams *map[string]struct {
			// Enabled enable or disable that stream, (default to true)
			Enabled *bool `json:"enabled,omitempty"`

			// Vars Input/stream level variable (see integration documentation for more information)
			Vars *map[string]*PutFleetPackagePoliciesPackagepolicyidJSONBody_1_Inputs_Streams_Vars_AdditionalProperties `json:"vars,omitempty"`
		} `json:"streams,omitempty"`

		// Vars Input/stream level variable (see integration documentation for more information)
		Vars *map[string]*PutFleetPackagePoliciesPackagepolicyidJSONBody_1_Inputs_Vars_AdditionalProperties `json:"vars,omitempty"`
	} `json:"inputs,omitempty"`
	Name      string  `json:"name"`
	Namespace *string `json:"namespace,omitempty"`
	OutputId  *string `json:"output_id,omitempty"`
	Package   struct {
		ExperimentalDataStreamFeatures *[]struct {
			DataStream string `json:"data_stream"`
			Features   struct {
				DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
				DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
				SyntheticSource     *bool `json:"synthetic_source,omitempty"`
				Tsdb                *bool `json:"tsdb,omitempty"`
			} `json:"features"`
		} `json:"experimental_data_stream_features,omitempty"`

		// Name Package name
		Name         string  `json:"name"`
		RequiresRoot *bool   `json:"requires_root,omitempty"`
		Title        *string `json:"title,omitempty"`

		// Version Package version
		Version string `json:"version"`
	} `json:"package"`
	PolicyId  *string   `json:"policy_id,omitempty"`
	PolicyIds *[]string `json:"policy_ids,omitempty"`

	// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
	SupportsAgentless *bool `json:"supports_agentless,omitempty"`

	// Vars Input/stream level variable (see integration documentation for more information)
	Vars *map[string]*PutFleetPackagePoliciesPackagepolicyidJSONBody_1_Vars_AdditionalProperties `json:"vars,omitempty"`
}

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars0 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars0 = bool

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars1 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars1 = string

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars2 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars2 = float32

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars3 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars3 = []string

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars4 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars4 = []float32

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars5 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsStreamsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}

// PutFleetPackagePoliciesPackagepolicyidJSONBody_1_Inputs_Streams_Vars_AdditionalProperties defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody_1_Inputs_Streams_Vars_AdditionalProperties struct {
	union json.RawMessage
}

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars0 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars0 = bool

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars1 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars1 = string

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars2 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars2 = float32

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars3 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars3 = []string

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars4 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars4 = []float32

// PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars5 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1InputsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}

// PutFleetPackagePoliciesPackagepolicyidJSONBody_1_Inputs_Vars_AdditionalProperties defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody_1_Inputs_Vars_AdditionalProperties struct {
	union json.RawMessage
}

// PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars0 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars0 = bool

// PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars1 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars1 = string

// PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars2 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars2 = float32

// PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars3 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars3 = []string

// PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars4 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars4 = []float32

// PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars5 defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody1Vars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}

// PutFleetPackagePoliciesPackagepolicyidJSONBody_1_Vars_AdditionalProperties defines parameters for PutFleetPackagePoliciesPackagepolicyid.
type PutFleetPackagePoliciesPackagepolicyidJSONBody_1_Vars_AdditionalProperties struct {
	union json.RawMessage
}

// GetStatusParams defines parameters for GetStatus.
type GetStatusParams struct {
	// V7format Set to "true" to get the response in v7 format.
	V7format *bool `form:"v7format,omitempty" json:"v7format,omitempty"`

	// V8format Set to "true" to get the response in v8 format.
	V8format *bool `form:"v8format,omitempty" json:"v8format,omitempty"`
}

// PostParametersJSONBody defines parameters for PostParameters.
type PostParametersJSONBody struct {
	union json.RawMessage
}

// PostParametersJSONBody0 defines parameters for PostParameters.
type PostParametersJSONBody0 = []SyntheticsParameterRequest

// PutParameterJSONBody defines parameters for PutParameter.
type PutParameterJSONBody struct {
	// Description The updated description of the parameter.
	Description *string `json:"description,omitempty"`

	// Key The key of the parameter.
	Key *string `json:"key,omitempty"`

	// Tags An array of updated tags to categorize the parameter.
	Tags *[]string `json:"tags,omitempty"`

	// Value The updated value associated with the parameter.
	Value *string `json:"value,omitempty"`
}

// CreateDataViewDefaultwJSONRequestBody defines body for CreateDataViewDefaultw for application/json ContentType.
type CreateDataViewDefaultwJSONRequestBody = DataViewsCreateDataViewRequestObject

// UpdateDataViewDefaultJSONRequestBody defines body for UpdateDataViewDefault for application/json ContentType.
type UpdateDataViewDefaultJSONRequestBody = DataViewsUpdateDataViewRequestObject

// PostFleetAgentPoliciesJSONRequestBody defines body for PostFleetAgentPolicies for application/json ContentType.
type PostFleetAgentPoliciesJSONRequestBody PostFleetAgentPoliciesJSONBody

// PostFleetAgentPoliciesDeleteJSONRequestBody defines body for PostFleetAgentPoliciesDelete for application/json ContentType.
type PostFleetAgentPoliciesDeleteJSONRequestBody PostFleetAgentPoliciesDeleteJSONBody

// PutFleetAgentPoliciesAgentpolicyidJSONRequestBody defines body for PutFleetAgentPoliciesAgentpolicyid for application/json ContentType.
type PutFleetAgentPoliciesAgentpolicyidJSONRequestBody PutFleetAgentPoliciesAgentpolicyidJSONBody

// PostFleetEpmPackagesPkgnamePkgversionJSONRequestBody defines body for PostFleetEpmPackagesPkgnamePkgversion for application/json ContentType.
type PostFleetEpmPackagesPkgnamePkgversionJSONRequestBody PostFleetEpmPackagesPkgnamePkgversionJSONBody

// PostFleetFleetServerHostsJSONRequestBody defines body for PostFleetFleetServerHosts for application/json ContentType.
type PostFleetFleetServerHostsJSONRequestBody PostFleetFleetServerHostsJSONBody

// PutFleetFleetServerHostsItemidJSONRequestBody defines body for PutFleetFleetServerHostsItemid for application/json ContentType.
type PutFleetFleetServerHostsItemidJSONRequestBody PutFleetFleetServerHostsItemidJSONBody

// PostFleetOutputsJSONRequestBody defines body for PostFleetOutputs for application/json ContentType.
type PostFleetOutputsJSONRequestBody PostFleetOutputsJSONBody

// PutFleetOutputsOutputidJSONRequestBody defines body for PutFleetOutputsOutputid for application/json ContentType.
type PutFleetOutputsOutputidJSONRequestBody PutFleetOutputsOutputidJSONBody

// PostFleetPackagePoliciesJSONRequestBody defines body for PostFleetPackagePolicies for application/json ContentType.
type PostFleetPackagePoliciesJSONRequestBody PostFleetPackagePoliciesJSONBody

// PutFleetPackagePoliciesPackagepolicyidJSONRequestBody defines body for PutFleetPackagePoliciesPackagepolicyid for application/json ContentType.
type PutFleetPackagePoliciesPackagepolicyidJSONRequestBody PutFleetPackagePoliciesPackagepolicyidJSONBody

// PostParametersJSONRequestBody defines body for PostParameters for application/json ContentType.
type PostParametersJSONRequestBody PostParametersJSONBody

// PutParameterJSONRequestBody defines body for PutParameter for application/json ContentType.
type PutParameterJSONRequestBody PutParameterJSONBody

// RequestEditorFn  is the function signature for the RequestEditor callback function
type RequestEditorFn func(ctx context.Context, req *http.Request) error

// Doer performs HTTP requests.
//
// The standard http.Client implements this interface.
type HttpRequestDoer interface {
	Do(req *http.Request) (*http.Response, error)
}

// Client which conforms to the OpenAPI3 specification for this service.
type Client struct {
	// The endpoint of the server conforming to this interface, with scheme,
	// https://api.deepmap.com for example. This can contain a path relative
	// to the server, such as https://api.deepmap.com/dev-test, and all the
	// paths in the swagger spec will be appended to the server.
	Server string

	// Doer for performing requests, typically a *http.Client with any
	// customized settings, such as certificate chains.
	Client HttpRequestDoer

	// A list of callbacks for modifying requests which are generated before sending over
	// the network.
	RequestEditors []RequestEditorFn
}

// ClientOption allows setting custom parameters during construction
type ClientOption func(*Client) error

// Creates a new Client, with reasonable defaults
func NewClient(server string, opts ...ClientOption) (*Client, error) {
	// create a client with sane default values
	client := Client{
		Server: server,
	}
	// mutate client and add all optional params
	for _, o := range opts {
		if err := o(&client); err != nil {
			return nil, err
		}
	}
	// ensure the server URL always has a trailing slash
	if !strings.HasSuffix(client.Server, "/") {
		client.Server += "/"
	}
	// create httpClient, if not already present
	if client.Client == nil {
		client.Client = &http.Client{}
	}
	return &client, nil
}

// WithHTTPClient allows overriding the default Doer, which is
// automatically created using http.Client. This is useful for tests.
func WithHTTPClient(doer HttpRequestDoer) ClientOption {
	return func(c *Client) error {
		c.Client = doer
		return nil
	}
}

// WithRequestEditorFn allows setting up a callback function, which will be
// called right before sending the request. This can be used to mutate the request.
func WithRequestEditorFn(fn RequestEditorFn) ClientOption {
	return func(c *Client) error {
		c.RequestEditors = append(c.RequestEditors, fn)
		return nil
	}
}

// The interface specification for the client above.
type ClientInterface interface {
	// GetAllDataViewsDefault request
	GetAllDataViewsDefault(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// CreateDataViewDefaultwWithBody request with any body
	CreateDataViewDefaultwWithBody(ctx context.Context, params *CreateDataViewDefaultwParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	CreateDataViewDefaultw(ctx context.Context, params *CreateDataViewDefaultwParams, body CreateDataViewDefaultwJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteDataViewDefault request
	DeleteDataViewDefault(ctx context.Context, viewId DataViewsViewId, params *DeleteDataViewDefaultParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetDataViewDefault request
	GetDataViewDefault(ctx context.Context, viewId DataViewsViewId, reqEditors ...RequestEditorFn) (*http.Response, error)

	// UpdateDataViewDefaultWithBody request with any body
	UpdateDataViewDefaultWithBody(ctx context.Context, viewId DataViewsViewId, params *UpdateDataViewDefaultParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	UpdateDataViewDefault(ctx context.Context, viewId DataViewsViewId, params *UpdateDataViewDefaultParams, body UpdateDataViewDefaultJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetAgentPolicies request
	GetFleetAgentPolicies(ctx context.Context, params *GetFleetAgentPoliciesParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostFleetAgentPoliciesWithBody request with any body
	PostFleetAgentPoliciesWithBody(ctx context.Context, params *PostFleetAgentPoliciesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostFleetAgentPolicies(ctx context.Context, params *PostFleetAgentPoliciesParams, body PostFleetAgentPoliciesJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostFleetAgentPoliciesDeleteWithBody request with any body
	PostFleetAgentPoliciesDeleteWithBody(ctx context.Context, params *PostFleetAgentPoliciesDeleteParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostFleetAgentPoliciesDelete(ctx context.Context, params *PostFleetAgentPoliciesDeleteParams, body PostFleetAgentPoliciesDeleteJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetAgentPoliciesAgentpolicyid request
	GetFleetAgentPoliciesAgentpolicyid(ctx context.Context, agentPolicyId string, params *GetFleetAgentPoliciesAgentpolicyidParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PutFleetAgentPoliciesAgentpolicyidWithBody request with any body
	PutFleetAgentPoliciesAgentpolicyidWithBody(ctx context.Context, agentPolicyId string, params *PutFleetAgentPoliciesAgentpolicyidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PutFleetAgentPoliciesAgentpolicyid(ctx context.Context, agentPolicyId string, params *PutFleetAgentPoliciesAgentpolicyidParams, body PutFleetAgentPoliciesAgentpolicyidJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetEnrollmentApiKeys request
	GetFleetEnrollmentApiKeys(ctx context.Context, params *GetFleetEnrollmentApiKeysParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetEpmPackages request
	GetFleetEpmPackages(ctx context.Context, params *GetFleetEpmPackagesParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostFleetEpmPackagesWithBody request with any body
	PostFleetEpmPackagesWithBody(ctx context.Context, params *PostFleetEpmPackagesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteFleetEpmPackagesPkgnamePkgversion request
	DeleteFleetEpmPackagesPkgnamePkgversion(ctx context.Context, pkgName string, pkgVersion string, params *DeleteFleetEpmPackagesPkgnamePkgversionParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetEpmPackagesPkgnamePkgversion request
	GetFleetEpmPackagesPkgnamePkgversion(ctx context.Context, pkgName string, pkgVersion string, params *GetFleetEpmPackagesPkgnamePkgversionParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostFleetEpmPackagesPkgnamePkgversionWithBody request with any body
	PostFleetEpmPackagesPkgnamePkgversionWithBody(ctx context.Context, pkgName string, pkgVersion string, params *PostFleetEpmPackagesPkgnamePkgversionParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostFleetEpmPackagesPkgnamePkgversion(ctx context.Context, pkgName string, pkgVersion string, params *PostFleetEpmPackagesPkgnamePkgversionParams, body PostFleetEpmPackagesPkgnamePkgversionJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetFleetServerHosts request
	GetFleetFleetServerHosts(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostFleetFleetServerHostsWithBody request with any body
	PostFleetFleetServerHostsWithBody(ctx context.Context, params *PostFleetFleetServerHostsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostFleetFleetServerHosts(ctx context.Context, params *PostFleetFleetServerHostsParams, body PostFleetFleetServerHostsJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteFleetFleetServerHostsItemid request
	DeleteFleetFleetServerHostsItemid(ctx context.Context, itemId string, params *DeleteFleetFleetServerHostsItemidParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetFleetServerHostsItemid request
	GetFleetFleetServerHostsItemid(ctx context.Context, itemId string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PutFleetFleetServerHostsItemidWithBody request with any body
	PutFleetFleetServerHostsItemidWithBody(ctx context.Context, itemId string, params *PutFleetFleetServerHostsItemidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PutFleetFleetServerHostsItemid(ctx context.Context, itemId string, params *PutFleetFleetServerHostsItemidParams, body PutFleetFleetServerHostsItemidJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetOutputs request
	GetFleetOutputs(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostFleetOutputsWithBody request with any body
	PostFleetOutputsWithBody(ctx context.Context, params *PostFleetOutputsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostFleetOutputs(ctx context.Context, params *PostFleetOutputsParams, body PostFleetOutputsJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteFleetOutputsOutputid request
	DeleteFleetOutputsOutputid(ctx context.Context, outputId string, params *DeleteFleetOutputsOutputidParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetOutputsOutputid request
	GetFleetOutputsOutputid(ctx context.Context, outputId string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PutFleetOutputsOutputidWithBody request with any body
	PutFleetOutputsOutputidWithBody(ctx context.Context, outputId string, params *PutFleetOutputsOutputidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PutFleetOutputsOutputid(ctx context.Context, outputId string, params *PutFleetOutputsOutputidParams, body PutFleetOutputsOutputidJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetPackagePolicies request
	GetFleetPackagePolicies(ctx context.Context, params *GetFleetPackagePoliciesParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostFleetPackagePoliciesWithBody request with any body
	PostFleetPackagePoliciesWithBody(ctx context.Context, params *PostFleetPackagePoliciesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostFleetPackagePolicies(ctx context.Context, params *PostFleetPackagePoliciesParams, body PostFleetPackagePoliciesJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteFleetPackagePoliciesPackagepolicyid request
	DeleteFleetPackagePoliciesPackagepolicyid(ctx context.Context, packagePolicyId string, params *DeleteFleetPackagePoliciesPackagepolicyidParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetFleetPackagePoliciesPackagepolicyid request
	GetFleetPackagePoliciesPackagepolicyid(ctx context.Context, packagePolicyId string, params *GetFleetPackagePoliciesPackagepolicyidParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PutFleetPackagePoliciesPackagepolicyidWithBody request with any body
	PutFleetPackagePoliciesPackagepolicyidWithBody(ctx context.Context, packagePolicyId string, params *PutFleetPackagePoliciesPackagepolicyidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PutFleetPackagePoliciesPackagepolicyid(ctx context.Context, packagePolicyId string, params *PutFleetPackagePoliciesPackagepolicyidParams, body PutFleetPackagePoliciesPackagepolicyidJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetStatus request
	GetStatus(ctx context.Context, params *GetStatusParams, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PostParametersWithBody request with any body
	PostParametersWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PostParameters(ctx context.Context, body PostParametersJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)

	// DeleteParameter request
	DeleteParameter(ctx context.Context, id string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// GetParameter request
	GetParameter(ctx context.Context, id string, reqEditors ...RequestEditorFn) (*http.Response, error)

	// PutParameterWithBody request with any body
	PutParameterWithBody(ctx context.Context, id string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error)

	PutParameter(ctx context.Context, id string, body PutParameterJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error)
}

func (c *Client) GetAllDataViewsDefault(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetAllDataViewsDefaultRequest(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateDataViewDefaultwWithBody(ctx context.Context, params *CreateDataViewDefaultwParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateDataViewDefaultwRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) CreateDataViewDefaultw(ctx context.Context, params *CreateDataViewDefaultwParams, body CreateDataViewDefaultwJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewCreateDataViewDefaultwRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteDataViewDefault(ctx context.Context, viewId DataViewsViewId, params *DeleteDataViewDefaultParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteDataViewDefaultRequest(c.Server, viewId, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetDataViewDefault(ctx context.Context, viewId DataViewsViewId, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetDataViewDefaultRequest(c.Server, viewId)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateDataViewDefaultWithBody(ctx context.Context, viewId DataViewsViewId, params *UpdateDataViewDefaultParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateDataViewDefaultRequestWithBody(c.Server, viewId, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) UpdateDataViewDefault(ctx context.Context, viewId DataViewsViewId, params *UpdateDataViewDefaultParams, body UpdateDataViewDefaultJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewUpdateDataViewDefaultRequest(c.Server, viewId, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetAgentPolicies(ctx context.Context, params *GetFleetAgentPoliciesParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetAgentPoliciesRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetAgentPoliciesWithBody(ctx context.Context, params *PostFleetAgentPoliciesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetAgentPoliciesRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetAgentPolicies(ctx context.Context, params *PostFleetAgentPoliciesParams, body PostFleetAgentPoliciesJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetAgentPoliciesRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetAgentPoliciesDeleteWithBody(ctx context.Context, params *PostFleetAgentPoliciesDeleteParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetAgentPoliciesDeleteRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetAgentPoliciesDelete(ctx context.Context, params *PostFleetAgentPoliciesDeleteParams, body PostFleetAgentPoliciesDeleteJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetAgentPoliciesDeleteRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetAgentPoliciesAgentpolicyid(ctx context.Context, agentPolicyId string, params *GetFleetAgentPoliciesAgentpolicyidParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetAgentPoliciesAgentpolicyidRequest(c.Server, agentPolicyId, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PutFleetAgentPoliciesAgentpolicyidWithBody(ctx context.Context, agentPolicyId string, params *PutFleetAgentPoliciesAgentpolicyidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPutFleetAgentPoliciesAgentpolicyidRequestWithBody(c.Server, agentPolicyId, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PutFleetAgentPoliciesAgentpolicyid(ctx context.Context, agentPolicyId string, params *PutFleetAgentPoliciesAgentpolicyidParams, body PutFleetAgentPoliciesAgentpolicyidJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPutFleetAgentPoliciesAgentpolicyidRequest(c.Server, agentPolicyId, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetEnrollmentApiKeys(ctx context.Context, params *GetFleetEnrollmentApiKeysParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetEnrollmentApiKeysRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetEpmPackages(ctx context.Context, params *GetFleetEpmPackagesParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetEpmPackagesRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetEpmPackagesWithBody(ctx context.Context, params *PostFleetEpmPackagesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetEpmPackagesRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteFleetEpmPackagesPkgnamePkgversion(ctx context.Context, pkgName string, pkgVersion string, params *DeleteFleetEpmPackagesPkgnamePkgversionParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteFleetEpmPackagesPkgnamePkgversionRequest(c.Server, pkgName, pkgVersion, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetEpmPackagesPkgnamePkgversion(ctx context.Context, pkgName string, pkgVersion string, params *GetFleetEpmPackagesPkgnamePkgversionParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetEpmPackagesPkgnamePkgversionRequest(c.Server, pkgName, pkgVersion, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetEpmPackagesPkgnamePkgversionWithBody(ctx context.Context, pkgName string, pkgVersion string, params *PostFleetEpmPackagesPkgnamePkgversionParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetEpmPackagesPkgnamePkgversionRequestWithBody(c.Server, pkgName, pkgVersion, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetEpmPackagesPkgnamePkgversion(ctx context.Context, pkgName string, pkgVersion string, params *PostFleetEpmPackagesPkgnamePkgversionParams, body PostFleetEpmPackagesPkgnamePkgversionJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetEpmPackagesPkgnamePkgversionRequest(c.Server, pkgName, pkgVersion, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetFleetServerHosts(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetFleetServerHostsRequest(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetFleetServerHostsWithBody(ctx context.Context, params *PostFleetFleetServerHostsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetFleetServerHostsRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetFleetServerHosts(ctx context.Context, params *PostFleetFleetServerHostsParams, body PostFleetFleetServerHostsJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetFleetServerHostsRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteFleetFleetServerHostsItemid(ctx context.Context, itemId string, params *DeleteFleetFleetServerHostsItemidParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteFleetFleetServerHostsItemidRequest(c.Server, itemId, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetFleetServerHostsItemid(ctx context.Context, itemId string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetFleetServerHostsItemidRequest(c.Server, itemId)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PutFleetFleetServerHostsItemidWithBody(ctx context.Context, itemId string, params *PutFleetFleetServerHostsItemidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPutFleetFleetServerHostsItemidRequestWithBody(c.Server, itemId, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PutFleetFleetServerHostsItemid(ctx context.Context, itemId string, params *PutFleetFleetServerHostsItemidParams, body PutFleetFleetServerHostsItemidJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPutFleetFleetServerHostsItemidRequest(c.Server, itemId, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetOutputs(ctx context.Context, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetOutputsRequest(c.Server)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetOutputsWithBody(ctx context.Context, params *PostFleetOutputsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetOutputsRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetOutputs(ctx context.Context, params *PostFleetOutputsParams, body PostFleetOutputsJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetOutputsRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteFleetOutputsOutputid(ctx context.Context, outputId string, params *DeleteFleetOutputsOutputidParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteFleetOutputsOutputidRequest(c.Server, outputId, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetOutputsOutputid(ctx context.Context, outputId string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetOutputsOutputidRequest(c.Server, outputId)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PutFleetOutputsOutputidWithBody(ctx context.Context, outputId string, params *PutFleetOutputsOutputidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPutFleetOutputsOutputidRequestWithBody(c.Server, outputId, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PutFleetOutputsOutputid(ctx context.Context, outputId string, params *PutFleetOutputsOutputidParams, body PutFleetOutputsOutputidJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPutFleetOutputsOutputidRequest(c.Server, outputId, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetPackagePolicies(ctx context.Context, params *GetFleetPackagePoliciesParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetPackagePoliciesRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetPackagePoliciesWithBody(ctx context.Context, params *PostFleetPackagePoliciesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetPackagePoliciesRequestWithBody(c.Server, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostFleetPackagePolicies(ctx context.Context, params *PostFleetPackagePoliciesParams, body PostFleetPackagePoliciesJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostFleetPackagePoliciesRequest(c.Server, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteFleetPackagePoliciesPackagepolicyid(ctx context.Context, packagePolicyId string, params *DeleteFleetPackagePoliciesPackagepolicyidParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteFleetPackagePoliciesPackagepolicyidRequest(c.Server, packagePolicyId, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetFleetPackagePoliciesPackagepolicyid(ctx context.Context, packagePolicyId string, params *GetFleetPackagePoliciesPackagepolicyidParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetFleetPackagePoliciesPackagepolicyidRequest(c.Server, packagePolicyId, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PutFleetPackagePoliciesPackagepolicyidWithBody(ctx context.Context, packagePolicyId string, params *PutFleetPackagePoliciesPackagepolicyidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPutFleetPackagePoliciesPackagepolicyidRequestWithBody(c.Server, packagePolicyId, params, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PutFleetPackagePoliciesPackagepolicyid(ctx context.Context, packagePolicyId string, params *PutFleetPackagePoliciesPackagepolicyidParams, body PutFleetPackagePoliciesPackagepolicyidJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPutFleetPackagePoliciesPackagepolicyidRequest(c.Server, packagePolicyId, params, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetStatus(ctx context.Context, params *GetStatusParams, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetStatusRequest(c.Server, params)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostParametersWithBody(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostParametersRequestWithBody(c.Server, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PostParameters(ctx context.Context, body PostParametersJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPostParametersRequest(c.Server, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) DeleteParameter(ctx context.Context, id string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewDeleteParameterRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) GetParameter(ctx context.Context, id string, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewGetParameterRequest(c.Server, id)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PutParameterWithBody(ctx context.Context, id string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPutParameterRequestWithBody(c.Server, id, contentType, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

func (c *Client) PutParameter(ctx context.Context, id string, body PutParameterJSONRequestBody, reqEditors ...RequestEditorFn) (*http.Response, error) {
	req, err := NewPutParameterRequest(c.Server, id, body)
	if err != nil {
		return nil, err
	}
	req = req.WithContext(ctx)
	if err := c.applyEditors(ctx, req, reqEditors); err != nil {
		return nil, err
	}
	return c.Client.Do(req)
}

// NewGetAllDataViewsDefaultRequest generates requests for GetAllDataViewsDefault
func NewGetAllDataViewsDefaultRequest(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/data_views")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewCreateDataViewDefaultwRequest calls the generic CreateDataViewDefaultw builder with application/json body
func NewCreateDataViewDefaultwRequest(server string, params *CreateDataViewDefaultwParams, body CreateDataViewDefaultwJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewCreateDataViewDefaultwRequestWithBody(server, params, "application/json", bodyReader)
}

// NewCreateDataViewDefaultwRequestWithBody generates requests for CreateDataViewDefaultw with any type of body
func NewCreateDataViewDefaultwRequestWithBody(server string, params *CreateDataViewDefaultwParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/data_views/data_view")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewDeleteDataViewDefaultRequest generates requests for DeleteDataViewDefault
func NewDeleteDataViewDefaultRequest(server string, viewId DataViewsViewId, params *DeleteDataViewDefaultParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "viewId", runtime.ParamLocationPath, viewId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/data_views/data_view/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetDataViewDefaultRequest generates requests for GetDataViewDefault
func NewGetDataViewDefaultRequest(server string, viewId DataViewsViewId) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "viewId", runtime.ParamLocationPath, viewId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/data_views/data_view/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewUpdateDataViewDefaultRequest calls the generic UpdateDataViewDefault builder with application/json body
func NewUpdateDataViewDefaultRequest(server string, viewId DataViewsViewId, params *UpdateDataViewDefaultParams, body UpdateDataViewDefaultJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewUpdateDataViewDefaultRequestWithBody(server, viewId, params, "application/json", bodyReader)
}

// NewUpdateDataViewDefaultRequestWithBody generates requests for UpdateDataViewDefault with any type of body
func NewUpdateDataViewDefaultRequestWithBody(server string, viewId DataViewsViewId, params *UpdateDataViewDefaultParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "viewId", runtime.ParamLocationPath, viewId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/data_views/data_view/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetFleetAgentPoliciesRequest generates requests for GetFleetAgentPolicies
func NewGetFleetAgentPoliciesRequest(server string, params *GetFleetAgentPoliciesParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/agent_policies")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.PerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "perPage", runtime.ParamLocationQuery, *params.PerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.SortField != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sortField", runtime.ParamLocationQuery, *params.SortField); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.SortOrder != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sortOrder", runtime.ParamLocationQuery, *params.SortOrder); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ShowUpgradeable != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "showUpgradeable", runtime.ParamLocationQuery, *params.ShowUpgradeable); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Kuery != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "kuery", runtime.ParamLocationQuery, *params.Kuery); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.NoAgentCount != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "noAgentCount", runtime.ParamLocationQuery, *params.NoAgentCount); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.WithAgentCount != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "withAgentCount", runtime.ParamLocationQuery, *params.WithAgentCount); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Full != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "full", runtime.ParamLocationQuery, *params.Full); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Format != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "format", runtime.ParamLocationQuery, *params.Format); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPostFleetAgentPoliciesRequest calls the generic PostFleetAgentPolicies builder with application/json body
func NewPostFleetAgentPoliciesRequest(server string, params *PostFleetAgentPoliciesParams, body PostFleetAgentPoliciesJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostFleetAgentPoliciesRequestWithBody(server, params, "application/json", bodyReader)
}

// NewPostFleetAgentPoliciesRequestWithBody generates requests for PostFleetAgentPolicies with any type of body
func NewPostFleetAgentPoliciesRequestWithBody(server string, params *PostFleetAgentPoliciesParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/agent_policies")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.SysMonitoring != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sys_monitoring", runtime.ParamLocationQuery, *params.SysMonitoring); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewPostFleetAgentPoliciesDeleteRequest calls the generic PostFleetAgentPoliciesDelete builder with application/json body
func NewPostFleetAgentPoliciesDeleteRequest(server string, params *PostFleetAgentPoliciesDeleteParams, body PostFleetAgentPoliciesDeleteJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostFleetAgentPoliciesDeleteRequestWithBody(server, params, "application/json", bodyReader)
}

// NewPostFleetAgentPoliciesDeleteRequestWithBody generates requests for PostFleetAgentPoliciesDelete with any type of body
func NewPostFleetAgentPoliciesDeleteRequestWithBody(server string, params *PostFleetAgentPoliciesDeleteParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/agent_policies/delete")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetFleetAgentPoliciesAgentpolicyidRequest generates requests for GetFleetAgentPoliciesAgentpolicyid
func NewGetFleetAgentPoliciesAgentpolicyidRequest(server string, agentPolicyId string, params *GetFleetAgentPoliciesAgentpolicyidParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "agentPolicyId", runtime.ParamLocationPath, agentPolicyId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/agent_policies/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Format != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "format", runtime.ParamLocationQuery, *params.Format); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPutFleetAgentPoliciesAgentpolicyidRequest calls the generic PutFleetAgentPoliciesAgentpolicyid builder with application/json body
func NewPutFleetAgentPoliciesAgentpolicyidRequest(server string, agentPolicyId string, params *PutFleetAgentPoliciesAgentpolicyidParams, body PutFleetAgentPoliciesAgentpolicyidJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPutFleetAgentPoliciesAgentpolicyidRequestWithBody(server, agentPolicyId, params, "application/json", bodyReader)
}

// NewPutFleetAgentPoliciesAgentpolicyidRequestWithBody generates requests for PutFleetAgentPoliciesAgentpolicyid with any type of body
func NewPutFleetAgentPoliciesAgentpolicyidRequestWithBody(server string, agentPolicyId string, params *PutFleetAgentPoliciesAgentpolicyidParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "agentPolicyId", runtime.ParamLocationPath, agentPolicyId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/agent_policies/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Format != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "format", runtime.ParamLocationQuery, *params.Format); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("PUT", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetFleetEnrollmentApiKeysRequest generates requests for GetFleetEnrollmentApiKeys
func NewGetFleetEnrollmentApiKeysRequest(server string, params *GetFleetEnrollmentApiKeysParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/enrollment_api_keys")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.PerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "perPage", runtime.ParamLocationQuery, *params.PerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Kuery != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "kuery", runtime.ParamLocationQuery, *params.Kuery); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetFleetEpmPackagesRequest generates requests for GetFleetEpmPackages
func NewGetFleetEpmPackagesRequest(server string, params *GetFleetEpmPackagesParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/epm/packages")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Category != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "category", runtime.ParamLocationQuery, *params.Category); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Prerelease != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "prerelease", runtime.ParamLocationQuery, *params.Prerelease); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ExcludeInstallStatus != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "excludeInstallStatus", runtime.ParamLocationQuery, *params.ExcludeInstallStatus); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.WithPackagePoliciesCount != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "withPackagePoliciesCount", runtime.ParamLocationQuery, *params.WithPackagePoliciesCount); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPostFleetEpmPackagesRequestWithBody generates requests for PostFleetEpmPackages with any type of body
func NewPostFleetEpmPackagesRequestWithBody(server string, params *PostFleetEpmPackagesParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/epm/packages")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.IgnoreMappingUpdateErrors != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "ignoreMappingUpdateErrors", runtime.ParamLocationQuery, *params.IgnoreMappingUpdateErrors); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.SkipDataStreamRollover != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "skipDataStreamRollover", runtime.ParamLocationQuery, *params.SkipDataStreamRollover); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewDeleteFleetEpmPackagesPkgnamePkgversionRequest generates requests for DeleteFleetEpmPackagesPkgnamePkgversion
func NewDeleteFleetEpmPackagesPkgnamePkgversionRequest(server string, pkgName string, pkgVersion string, params *DeleteFleetEpmPackagesPkgnamePkgversionParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "pkgName", runtime.ParamLocationPath, pkgName)
	if err != nil {
		return nil, err
	}

	var pathParam1 string

	pathParam1, err = runtime.StyleParamWithLocation("simple", false, "pkgVersion", runtime.ParamLocationPath, pkgVersion)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/epm/packages/%s/%s", pathParam0, pathParam1)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Force != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "force", runtime.ParamLocationQuery, *params.Force); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetFleetEpmPackagesPkgnamePkgversionRequest generates requests for GetFleetEpmPackagesPkgnamePkgversion
func NewGetFleetEpmPackagesPkgnamePkgversionRequest(server string, pkgName string, pkgVersion string, params *GetFleetEpmPackagesPkgnamePkgversionParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "pkgName", runtime.ParamLocationPath, pkgName)
	if err != nil {
		return nil, err
	}

	var pathParam1 string

	pathParam1, err = runtime.StyleParamWithLocation("simple", false, "pkgVersion", runtime.ParamLocationPath, pkgVersion)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/epm/packages/%s/%s", pathParam0, pathParam1)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.IgnoreUnverified != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "ignoreUnverified", runtime.ParamLocationQuery, *params.IgnoreUnverified); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Prerelease != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "prerelease", runtime.ParamLocationQuery, *params.Prerelease); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Full != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "full", runtime.ParamLocationQuery, *params.Full); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.WithMetadata != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "withMetadata", runtime.ParamLocationQuery, *params.WithMetadata); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPostFleetEpmPackagesPkgnamePkgversionRequest calls the generic PostFleetEpmPackagesPkgnamePkgversion builder with application/json body
func NewPostFleetEpmPackagesPkgnamePkgversionRequest(server string, pkgName string, pkgVersion string, params *PostFleetEpmPackagesPkgnamePkgversionParams, body PostFleetEpmPackagesPkgnamePkgversionJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostFleetEpmPackagesPkgnamePkgversionRequestWithBody(server, pkgName, pkgVersion, params, "application/json", bodyReader)
}

// NewPostFleetEpmPackagesPkgnamePkgversionRequestWithBody generates requests for PostFleetEpmPackagesPkgnamePkgversion with any type of body
func NewPostFleetEpmPackagesPkgnamePkgversionRequestWithBody(server string, pkgName string, pkgVersion string, params *PostFleetEpmPackagesPkgnamePkgversionParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "pkgName", runtime.ParamLocationPath, pkgName)
	if err != nil {
		return nil, err
	}

	var pathParam1 string

	pathParam1, err = runtime.StyleParamWithLocation("simple", false, "pkgVersion", runtime.ParamLocationPath, pkgVersion)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/epm/packages/%s/%s", pathParam0, pathParam1)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Prerelease != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "prerelease", runtime.ParamLocationQuery, *params.Prerelease); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.IgnoreMappingUpdateErrors != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "ignoreMappingUpdateErrors", runtime.ParamLocationQuery, *params.IgnoreMappingUpdateErrors); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.SkipDataStreamRollover != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "skipDataStreamRollover", runtime.ParamLocationQuery, *params.SkipDataStreamRollover); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetFleetFleetServerHostsRequest generates requests for GetFleetFleetServerHosts
func NewGetFleetFleetServerHostsRequest(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/fleet_server_hosts")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPostFleetFleetServerHostsRequest calls the generic PostFleetFleetServerHosts builder with application/json body
func NewPostFleetFleetServerHostsRequest(server string, params *PostFleetFleetServerHostsParams, body PostFleetFleetServerHostsJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostFleetFleetServerHostsRequestWithBody(server, params, "application/json", bodyReader)
}

// NewPostFleetFleetServerHostsRequestWithBody generates requests for PostFleetFleetServerHosts with any type of body
func NewPostFleetFleetServerHostsRequestWithBody(server string, params *PostFleetFleetServerHostsParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/fleet_server_hosts")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewDeleteFleetFleetServerHostsItemidRequest generates requests for DeleteFleetFleetServerHostsItemid
func NewDeleteFleetFleetServerHostsItemidRequest(server string, itemId string, params *DeleteFleetFleetServerHostsItemidParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "itemId", runtime.ParamLocationPath, itemId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/fleet_server_hosts/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetFleetFleetServerHostsItemidRequest generates requests for GetFleetFleetServerHostsItemid
func NewGetFleetFleetServerHostsItemidRequest(server string, itemId string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "itemId", runtime.ParamLocationPath, itemId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/fleet_server_hosts/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPutFleetFleetServerHostsItemidRequest calls the generic PutFleetFleetServerHostsItemid builder with application/json body
func NewPutFleetFleetServerHostsItemidRequest(server string, itemId string, params *PutFleetFleetServerHostsItemidParams, body PutFleetFleetServerHostsItemidJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPutFleetFleetServerHostsItemidRequestWithBody(server, itemId, params, "application/json", bodyReader)
}

// NewPutFleetFleetServerHostsItemidRequestWithBody generates requests for PutFleetFleetServerHostsItemid with any type of body
func NewPutFleetFleetServerHostsItemidRequestWithBody(server string, itemId string, params *PutFleetFleetServerHostsItemidParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "itemId", runtime.ParamLocationPath, itemId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/fleet_server_hosts/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PUT", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetFleetOutputsRequest generates requests for GetFleetOutputs
func NewGetFleetOutputsRequest(server string) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/outputs")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPostFleetOutputsRequest calls the generic PostFleetOutputs builder with application/json body
func NewPostFleetOutputsRequest(server string, params *PostFleetOutputsParams, body PostFleetOutputsJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostFleetOutputsRequestWithBody(server, params, "application/json", bodyReader)
}

// NewPostFleetOutputsRequestWithBody generates requests for PostFleetOutputs with any type of body
func NewPostFleetOutputsRequestWithBody(server string, params *PostFleetOutputsParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/outputs")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewDeleteFleetOutputsOutputidRequest generates requests for DeleteFleetOutputsOutputid
func NewDeleteFleetOutputsOutputidRequest(server string, outputId string, params *DeleteFleetOutputsOutputidParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "outputId", runtime.ParamLocationPath, outputId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/outputs/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetFleetOutputsOutputidRequest generates requests for GetFleetOutputsOutputid
func NewGetFleetOutputsOutputidRequest(server string, outputId string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "outputId", runtime.ParamLocationPath, outputId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/outputs/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPutFleetOutputsOutputidRequest calls the generic PutFleetOutputsOutputid builder with application/json body
func NewPutFleetOutputsOutputidRequest(server string, outputId string, params *PutFleetOutputsOutputidParams, body PutFleetOutputsOutputidJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPutFleetOutputsOutputidRequestWithBody(server, outputId, params, "application/json", bodyReader)
}

// NewPutFleetOutputsOutputidRequestWithBody generates requests for PutFleetOutputsOutputid with any type of body
func NewPutFleetOutputsOutputidRequestWithBody(server string, outputId string, params *PutFleetOutputsOutputidParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "outputId", runtime.ParamLocationPath, outputId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/outputs/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PUT", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetFleetPackagePoliciesRequest generates requests for GetFleetPackagePolicies
func NewGetFleetPackagePoliciesRequest(server string, params *GetFleetPackagePoliciesParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/package_policies")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Page != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "page", runtime.ParamLocationQuery, *params.Page); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.PerPage != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "perPage", runtime.ParamLocationQuery, *params.PerPage); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.SortField != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sortField", runtime.ParamLocationQuery, *params.SortField); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.SortOrder != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "sortOrder", runtime.ParamLocationQuery, *params.SortOrder); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.ShowUpgradeable != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "showUpgradeable", runtime.ParamLocationQuery, *params.ShowUpgradeable); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Kuery != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "kuery", runtime.ParamLocationQuery, *params.Kuery); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.Format != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "format", runtime.ParamLocationQuery, *params.Format); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.WithAgentCount != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "withAgentCount", runtime.ParamLocationQuery, *params.WithAgentCount); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPostFleetPackagePoliciesRequest calls the generic PostFleetPackagePolicies builder with application/json body
func NewPostFleetPackagePoliciesRequest(server string, params *PostFleetPackagePoliciesParams, body PostFleetPackagePoliciesJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostFleetPackagePoliciesRequestWithBody(server, params, "application/json", bodyReader)
}

// NewPostFleetPackagePoliciesRequestWithBody generates requests for PostFleetPackagePolicies with any type of body
func NewPostFleetPackagePoliciesRequestWithBody(server string, params *PostFleetPackagePoliciesParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/package_policies")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Format != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "format", runtime.ParamLocationQuery, *params.Format); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewDeleteFleetPackagePoliciesPackagepolicyidRequest generates requests for DeleteFleetPackagePoliciesPackagepolicyid
func NewDeleteFleetPackagePoliciesPackagepolicyidRequest(server string, packagePolicyId string, params *DeleteFleetPackagePoliciesPackagepolicyidParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "packagePolicyId", runtime.ParamLocationPath, packagePolicyId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/package_policies/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Force != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "force", runtime.ParamLocationQuery, *params.Force); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetFleetPackagePoliciesPackagepolicyidRequest generates requests for GetFleetPackagePoliciesPackagepolicyid
func NewGetFleetPackagePoliciesPackagepolicyidRequest(server string, packagePolicyId string, params *GetFleetPackagePoliciesPackagepolicyidParams) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "packagePolicyId", runtime.ParamLocationPath, packagePolicyId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/package_policies/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Format != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "format", runtime.ParamLocationQuery, *params.Format); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPutFleetPackagePoliciesPackagepolicyidRequest calls the generic PutFleetPackagePoliciesPackagepolicyid builder with application/json body
func NewPutFleetPackagePoliciesPackagepolicyidRequest(server string, packagePolicyId string, params *PutFleetPackagePoliciesPackagepolicyidParams, body PutFleetPackagePoliciesPackagepolicyidJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPutFleetPackagePoliciesPackagepolicyidRequestWithBody(server, packagePolicyId, params, "application/json", bodyReader)
}

// NewPutFleetPackagePoliciesPackagepolicyidRequestWithBody generates requests for PutFleetPackagePoliciesPackagepolicyid with any type of body
func NewPutFleetPackagePoliciesPackagepolicyidRequestWithBody(server string, packagePolicyId string, params *PutFleetPackagePoliciesPackagepolicyidParams, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "packagePolicyId", runtime.ParamLocationPath, packagePolicyId)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/fleet/package_policies/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.Format != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "format", runtime.ParamLocationQuery, *params.Format); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("PUT", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	if params != nil {

		var headerParam0 string

		headerParam0, err = runtime.StyleParamWithLocation("simple", false, "kbn-xsrf", runtime.ParamLocationHeader, params.KbnXsrf)
		if err != nil {
			return nil, err
		}

		req.Header.Set("kbn-xsrf", headerParam0)

	}

	return req, nil
}

// NewGetStatusRequest generates requests for GetStatus
func NewGetStatusRequest(server string, params *GetStatusParams) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/status")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	if params != nil {
		queryValues := queryURL.Query()

		if params.V7format != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "v7format", runtime.ParamLocationQuery, *params.V7format); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		if params.V8format != nil {

			if queryFrag, err := runtime.StyleParamWithLocation("form", true, "v8format", runtime.ParamLocationQuery, *params.V8format); err != nil {
				return nil, err
			} else if parsed, err := url.ParseQuery(queryFrag); err != nil {
				return nil, err
			} else {
				for k, v := range parsed {
					for _, v2 := range v {
						queryValues.Add(k, v2)
					}
				}
			}

		}

		queryURL.RawQuery = queryValues.Encode()
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPostParametersRequest calls the generic PostParameters builder with application/json body
func NewPostParametersRequest(server string, body PostParametersJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPostParametersRequestWithBody(server, "application/json", bodyReader)
}

// NewPostParametersRequestWithBody generates requests for PostParameters with any type of body
func NewPostParametersRequestWithBody(server string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/synthetics/params")
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("POST", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

// NewDeleteParameterRequest generates requests for DeleteParameter
func NewDeleteParameterRequest(server string, id string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/synthetics/params/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("DELETE", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewGetParameterRequest generates requests for GetParameter
func NewGetParameterRequest(server string, id string) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/synthetics/params/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("GET", queryURL.String(), nil)
	if err != nil {
		return nil, err
	}

	return req, nil
}

// NewPutParameterRequest calls the generic PutParameter builder with application/json body
func NewPutParameterRequest(server string, id string, body PutParameterJSONRequestBody) (*http.Request, error) {
	var bodyReader io.Reader
	buf, err := json.Marshal(body)
	if err != nil {
		return nil, err
	}
	bodyReader = bytes.NewReader(buf)
	return NewPutParameterRequestWithBody(server, id, "application/json", bodyReader)
}

// NewPutParameterRequestWithBody generates requests for PutParameter with any type of body
func NewPutParameterRequestWithBody(server string, id string, contentType string, body io.Reader) (*http.Request, error) {
	var err error

	var pathParam0 string

	pathParam0, err = runtime.StyleParamWithLocation("simple", false, "id", runtime.ParamLocationPath, id)
	if err != nil {
		return nil, err
	}

	serverURL, err := url.Parse(server)
	if err != nil {
		return nil, err
	}

	operationPath := fmt.Sprintf("/api/synthetics/params/%s", pathParam0)
	if operationPath[0] == '/' {
		operationPath = "." + operationPath
	}

	queryURL, err := serverURL.Parse(operationPath)
	if err != nil {
		return nil, err
	}

	req, err := http.NewRequest("PUT", queryURL.String(), body)
	if err != nil {
		return nil, err
	}

	req.Header.Add("Content-Type", contentType)

	return req, nil
}

func (c *Client) applyEditors(ctx context.Context, req *http.Request, additionalEditors []RequestEditorFn) error {
	for _, r := range c.RequestEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	for _, r := range additionalEditors {
		if err := r(ctx, req); err != nil {
			return err
		}
	}
	return nil
}

// ClientWithResponses builds on ClientInterface to offer response payloads
type ClientWithResponses struct {
	ClientInterface
}

// NewClientWithResponses creates a new ClientWithResponses, which wraps
// Client with return type handling
func NewClientWithResponses(server string, opts ...ClientOption) (*ClientWithResponses, error) {
	client, err := NewClient(server, opts...)
	if err != nil {
		return nil, err
	}
	return &ClientWithResponses{client}, nil
}

// WithBaseURL overrides the baseURL.
func WithBaseURL(baseURL string) ClientOption {
	return func(c *Client) error {
		newBaseURL, err := url.Parse(baseURL)
		if err != nil {
			return err
		}
		c.Server = newBaseURL.String()
		return nil
	}
}

// ClientWithResponsesInterface is the interface specification for the client with responses above.
type ClientWithResponsesInterface interface {
	// GetAllDataViewsDefaultWithResponse request
	GetAllDataViewsDefaultWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*GetAllDataViewsDefaultResponse, error)

	// CreateDataViewDefaultwWithBodyWithResponse request with any body
	CreateDataViewDefaultwWithBodyWithResponse(ctx context.Context, params *CreateDataViewDefaultwParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateDataViewDefaultwResponse, error)

	CreateDataViewDefaultwWithResponse(ctx context.Context, params *CreateDataViewDefaultwParams, body CreateDataViewDefaultwJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateDataViewDefaultwResponse, error)

	// DeleteDataViewDefaultWithResponse request
	DeleteDataViewDefaultWithResponse(ctx context.Context, viewId DataViewsViewId, params *DeleteDataViewDefaultParams, reqEditors ...RequestEditorFn) (*DeleteDataViewDefaultResponse, error)

	// GetDataViewDefaultWithResponse request
	GetDataViewDefaultWithResponse(ctx context.Context, viewId DataViewsViewId, reqEditors ...RequestEditorFn) (*GetDataViewDefaultResponse, error)

	// UpdateDataViewDefaultWithBodyWithResponse request with any body
	UpdateDataViewDefaultWithBodyWithResponse(ctx context.Context, viewId DataViewsViewId, params *UpdateDataViewDefaultParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateDataViewDefaultResponse, error)

	UpdateDataViewDefaultWithResponse(ctx context.Context, viewId DataViewsViewId, params *UpdateDataViewDefaultParams, body UpdateDataViewDefaultJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateDataViewDefaultResponse, error)

	// GetFleetAgentPoliciesWithResponse request
	GetFleetAgentPoliciesWithResponse(ctx context.Context, params *GetFleetAgentPoliciesParams, reqEditors ...RequestEditorFn) (*GetFleetAgentPoliciesResponse, error)

	// PostFleetAgentPoliciesWithBodyWithResponse request with any body
	PostFleetAgentPoliciesWithBodyWithResponse(ctx context.Context, params *PostFleetAgentPoliciesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetAgentPoliciesResponse, error)

	PostFleetAgentPoliciesWithResponse(ctx context.Context, params *PostFleetAgentPoliciesParams, body PostFleetAgentPoliciesJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetAgentPoliciesResponse, error)

	// PostFleetAgentPoliciesDeleteWithBodyWithResponse request with any body
	PostFleetAgentPoliciesDeleteWithBodyWithResponse(ctx context.Context, params *PostFleetAgentPoliciesDeleteParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetAgentPoliciesDeleteResponse, error)

	PostFleetAgentPoliciesDeleteWithResponse(ctx context.Context, params *PostFleetAgentPoliciesDeleteParams, body PostFleetAgentPoliciesDeleteJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetAgentPoliciesDeleteResponse, error)

	// GetFleetAgentPoliciesAgentpolicyidWithResponse request
	GetFleetAgentPoliciesAgentpolicyidWithResponse(ctx context.Context, agentPolicyId string, params *GetFleetAgentPoliciesAgentpolicyidParams, reqEditors ...RequestEditorFn) (*GetFleetAgentPoliciesAgentpolicyidResponse, error)

	// PutFleetAgentPoliciesAgentpolicyidWithBodyWithResponse request with any body
	PutFleetAgentPoliciesAgentpolicyidWithBodyWithResponse(ctx context.Context, agentPolicyId string, params *PutFleetAgentPoliciesAgentpolicyidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PutFleetAgentPoliciesAgentpolicyidResponse, error)

	PutFleetAgentPoliciesAgentpolicyidWithResponse(ctx context.Context, agentPolicyId string, params *PutFleetAgentPoliciesAgentpolicyidParams, body PutFleetAgentPoliciesAgentpolicyidJSONRequestBody, reqEditors ...RequestEditorFn) (*PutFleetAgentPoliciesAgentpolicyidResponse, error)

	// GetFleetEnrollmentApiKeysWithResponse request
	GetFleetEnrollmentApiKeysWithResponse(ctx context.Context, params *GetFleetEnrollmentApiKeysParams, reqEditors ...RequestEditorFn) (*GetFleetEnrollmentApiKeysResponse, error)

	// GetFleetEpmPackagesWithResponse request
	GetFleetEpmPackagesWithResponse(ctx context.Context, params *GetFleetEpmPackagesParams, reqEditors ...RequestEditorFn) (*GetFleetEpmPackagesResponse, error)

	// PostFleetEpmPackagesWithBodyWithResponse request with any body
	PostFleetEpmPackagesWithBodyWithResponse(ctx context.Context, params *PostFleetEpmPackagesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetEpmPackagesResponse, error)

	// DeleteFleetEpmPackagesPkgnamePkgversionWithResponse request
	DeleteFleetEpmPackagesPkgnamePkgversionWithResponse(ctx context.Context, pkgName string, pkgVersion string, params *DeleteFleetEpmPackagesPkgnamePkgversionParams, reqEditors ...RequestEditorFn) (*DeleteFleetEpmPackagesPkgnamePkgversionResponse, error)

	// GetFleetEpmPackagesPkgnamePkgversionWithResponse request
	GetFleetEpmPackagesPkgnamePkgversionWithResponse(ctx context.Context, pkgName string, pkgVersion string, params *GetFleetEpmPackagesPkgnamePkgversionParams, reqEditors ...RequestEditorFn) (*GetFleetEpmPackagesPkgnamePkgversionResponse, error)

	// PostFleetEpmPackagesPkgnamePkgversionWithBodyWithResponse request with any body
	PostFleetEpmPackagesPkgnamePkgversionWithBodyWithResponse(ctx context.Context, pkgName string, pkgVersion string, params *PostFleetEpmPackagesPkgnamePkgversionParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetEpmPackagesPkgnamePkgversionResponse, error)

	PostFleetEpmPackagesPkgnamePkgversionWithResponse(ctx context.Context, pkgName string, pkgVersion string, params *PostFleetEpmPackagesPkgnamePkgversionParams, body PostFleetEpmPackagesPkgnamePkgversionJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetEpmPackagesPkgnamePkgversionResponse, error)

	// GetFleetFleetServerHostsWithResponse request
	GetFleetFleetServerHostsWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*GetFleetFleetServerHostsResponse, error)

	// PostFleetFleetServerHostsWithBodyWithResponse request with any body
	PostFleetFleetServerHostsWithBodyWithResponse(ctx context.Context, params *PostFleetFleetServerHostsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetFleetServerHostsResponse, error)

	PostFleetFleetServerHostsWithResponse(ctx context.Context, params *PostFleetFleetServerHostsParams, body PostFleetFleetServerHostsJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetFleetServerHostsResponse, error)

	// DeleteFleetFleetServerHostsItemidWithResponse request
	DeleteFleetFleetServerHostsItemidWithResponse(ctx context.Context, itemId string, params *DeleteFleetFleetServerHostsItemidParams, reqEditors ...RequestEditorFn) (*DeleteFleetFleetServerHostsItemidResponse, error)

	// GetFleetFleetServerHostsItemidWithResponse request
	GetFleetFleetServerHostsItemidWithResponse(ctx context.Context, itemId string, reqEditors ...RequestEditorFn) (*GetFleetFleetServerHostsItemidResponse, error)

	// PutFleetFleetServerHostsItemidWithBodyWithResponse request with any body
	PutFleetFleetServerHostsItemidWithBodyWithResponse(ctx context.Context, itemId string, params *PutFleetFleetServerHostsItemidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PutFleetFleetServerHostsItemidResponse, error)

	PutFleetFleetServerHostsItemidWithResponse(ctx context.Context, itemId string, params *PutFleetFleetServerHostsItemidParams, body PutFleetFleetServerHostsItemidJSONRequestBody, reqEditors ...RequestEditorFn) (*PutFleetFleetServerHostsItemidResponse, error)

	// GetFleetOutputsWithResponse request
	GetFleetOutputsWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*GetFleetOutputsResponse, error)

	// PostFleetOutputsWithBodyWithResponse request with any body
	PostFleetOutputsWithBodyWithResponse(ctx context.Context, params *PostFleetOutputsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetOutputsResponse, error)

	PostFleetOutputsWithResponse(ctx context.Context, params *PostFleetOutputsParams, body PostFleetOutputsJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetOutputsResponse, error)

	// DeleteFleetOutputsOutputidWithResponse request
	DeleteFleetOutputsOutputidWithResponse(ctx context.Context, outputId string, params *DeleteFleetOutputsOutputidParams, reqEditors ...RequestEditorFn) (*DeleteFleetOutputsOutputidResponse, error)

	// GetFleetOutputsOutputidWithResponse request
	GetFleetOutputsOutputidWithResponse(ctx context.Context, outputId string, reqEditors ...RequestEditorFn) (*GetFleetOutputsOutputidResponse, error)

	// PutFleetOutputsOutputidWithBodyWithResponse request with any body
	PutFleetOutputsOutputidWithBodyWithResponse(ctx context.Context, outputId string, params *PutFleetOutputsOutputidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PutFleetOutputsOutputidResponse, error)

	PutFleetOutputsOutputidWithResponse(ctx context.Context, outputId string, params *PutFleetOutputsOutputidParams, body PutFleetOutputsOutputidJSONRequestBody, reqEditors ...RequestEditorFn) (*PutFleetOutputsOutputidResponse, error)

	// GetFleetPackagePoliciesWithResponse request
	GetFleetPackagePoliciesWithResponse(ctx context.Context, params *GetFleetPackagePoliciesParams, reqEditors ...RequestEditorFn) (*GetFleetPackagePoliciesResponse, error)

	// PostFleetPackagePoliciesWithBodyWithResponse request with any body
	PostFleetPackagePoliciesWithBodyWithResponse(ctx context.Context, params *PostFleetPackagePoliciesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetPackagePoliciesResponse, error)

	PostFleetPackagePoliciesWithResponse(ctx context.Context, params *PostFleetPackagePoliciesParams, body PostFleetPackagePoliciesJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetPackagePoliciesResponse, error)

	// DeleteFleetPackagePoliciesPackagepolicyidWithResponse request
	DeleteFleetPackagePoliciesPackagepolicyidWithResponse(ctx context.Context, packagePolicyId string, params *DeleteFleetPackagePoliciesPackagepolicyidParams, reqEditors ...RequestEditorFn) (*DeleteFleetPackagePoliciesPackagepolicyidResponse, error)

	// GetFleetPackagePoliciesPackagepolicyidWithResponse request
	GetFleetPackagePoliciesPackagepolicyidWithResponse(ctx context.Context, packagePolicyId string, params *GetFleetPackagePoliciesPackagepolicyidParams, reqEditors ...RequestEditorFn) (*GetFleetPackagePoliciesPackagepolicyidResponse, error)

	// PutFleetPackagePoliciesPackagepolicyidWithBodyWithResponse request with any body
	PutFleetPackagePoliciesPackagepolicyidWithBodyWithResponse(ctx context.Context, packagePolicyId string, params *PutFleetPackagePoliciesPackagepolicyidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PutFleetPackagePoliciesPackagepolicyidResponse, error)

	PutFleetPackagePoliciesPackagepolicyidWithResponse(ctx context.Context, packagePolicyId string, params *PutFleetPackagePoliciesPackagepolicyidParams, body PutFleetPackagePoliciesPackagepolicyidJSONRequestBody, reqEditors ...RequestEditorFn) (*PutFleetPackagePoliciesPackagepolicyidResponse, error)

	// GetStatusWithResponse request
	GetStatusWithResponse(ctx context.Context, params *GetStatusParams, reqEditors ...RequestEditorFn) (*GetStatusResponse, error)

	// PostParametersWithBodyWithResponse request with any body
	PostParametersWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostParametersResponse, error)

	PostParametersWithResponse(ctx context.Context, body PostParametersJSONRequestBody, reqEditors ...RequestEditorFn) (*PostParametersResponse, error)

	// DeleteParameterWithResponse request
	DeleteParameterWithResponse(ctx context.Context, id string, reqEditors ...RequestEditorFn) (*DeleteParameterResponse, error)

	// GetParameterWithResponse request
	GetParameterWithResponse(ctx context.Context, id string, reqEditors ...RequestEditorFn) (*GetParameterResponse, error)

	// PutParameterWithBodyWithResponse request with any body
	PutParameterWithBodyWithResponse(ctx context.Context, id string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PutParameterResponse, error)

	PutParameterWithResponse(ctx context.Context, id string, body PutParameterJSONRequestBody, reqEditors ...RequestEditorFn) (*PutParameterResponse, error)
}

type GetAllDataViewsDefaultResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		DataView *[]struct {
			Id         *string                 `json:"id,omitempty"`
			Name       *string                 `json:"name,omitempty"`
			Namespaces *[]string               `json:"namespaces,omitempty"`
			Title      *string                 `json:"title,omitempty"`
			TypeMeta   *map[string]interface{} `json:"typeMeta,omitempty"`
		} `json:"data_view,omitempty"`
	}
	JSON400 *DataViews400Response
}

// Status returns HTTPResponse.Status
func (r GetAllDataViewsDefaultResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetAllDataViewsDefaultResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type CreateDataViewDefaultwResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *DataViewsDataViewResponseObject
	JSON400      *DataViews400Response
}

// Status returns HTTPResponse.Status
func (r CreateDataViewDefaultwResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r CreateDataViewDefaultwResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteDataViewDefaultResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON404      *DataViews404Response
}

// Status returns HTTPResponse.Status
func (r DeleteDataViewDefaultResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteDataViewDefaultResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetDataViewDefaultResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *DataViewsDataViewResponseObject
	JSON404      *DataViews404Response
}

// Status returns HTTPResponse.Status
func (r GetDataViewDefaultResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetDataViewDefaultResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type UpdateDataViewDefaultResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *DataViewsDataViewResponseObject
	JSON400      *DataViews400Response
}

// Status returns HTTPResponse.Status
func (r UpdateDataViewDefaultResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r UpdateDataViewDefaultResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetAgentPoliciesResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Items []struct {
			AdvancedSettings *struct {
				AgentDownloadTargetDirectory      *interface{} `json:"agent_download_target_directory,omitempty"`
				AgentDownloadTimeout              *interface{} `json:"agent_download_timeout,omitempty"`
				AgentLimitsGoMaxProcs             *interface{} `json:"agent_limits_go_max_procs,omitempty"`
				AgentLoggingFilesInterval         *interface{} `json:"agent_logging_files_interval,omitempty"`
				AgentLoggingFilesKeepfiles        *interface{} `json:"agent_logging_files_keepfiles,omitempty"`
				AgentLoggingFilesRotateeverybytes *interface{} `json:"agent_logging_files_rotateeverybytes,omitempty"`
				AgentLoggingLevel                 *interface{} `json:"agent_logging_level,omitempty"`
				AgentLoggingMetricsPeriod         *interface{} `json:"agent_logging_metrics_period,omitempty"`
				AgentLoggingToFiles               *interface{} `json:"agent_logging_to_files,omitempty"`
			} `json:"advanced_settings,omitempty"`
			AgentFeatures *[]struct {
				Enabled bool   `json:"enabled"`
				Name    string `json:"name"`
			} `json:"agent_features,omitempty"`
			Agentless *struct {
				CloudConnectors *struct {
					Enabled   bool    `json:"enabled"`
					TargetCsp *string `json:"target_csp,omitempty"`
				} `json:"cloud_connectors,omitempty"`
				Resources *struct {
					Requests *struct {
						Cpu    *string `json:"cpu,omitempty"`
						Memory *string `json:"memory,omitempty"`
					} `json:"requests,omitempty"`
				} `json:"resources,omitempty"`
			} `json:"agentless,omitempty"`
			Agents            *float32 `json:"agents,omitempty"`
			DataOutputId      *string  `json:"data_output_id,omitempty"`
			Description       *string  `json:"description,omitempty"`
			DownloadSourceId  *string  `json:"download_source_id,omitempty"`
			FleetServerHostId *string  `json:"fleet_server_host_id,omitempty"`

			// GlobalDataTags User defined data tags that are added to all of the inputs. The values can be strings or numbers.
			GlobalDataTags *[]struct {
				Name  string                                               `json:"name"`
				Value GetFleetAgentPolicies_200_Items_GlobalDataTags_Value `json:"value"`
			} `json:"global_data_tags,omitempty"`
			HasFleetServer       *bool    `json:"has_fleet_server,omitempty"`
			Id                   string   `json:"id"`
			InactivityTimeout    *float32 `json:"inactivity_timeout,omitempty"`
			IsDefault            *bool    `json:"is_default,omitempty"`
			IsDefaultFleetServer *bool    `json:"is_default_fleet_server,omitempty"`
			IsManaged            bool     `json:"is_managed"`
			IsPreconfigured      *bool    `json:"is_preconfigured,omitempty"`

			// IsProtected Indicates whether the agent policy has tamper protection enabled. Default false.
			IsProtected bool `json:"is_protected"`

			// KeepMonitoringAlive When set to true, monitoring will be enabled but logs/metrics collection will be disabled
			KeepMonitoringAlive   *bool `json:"keep_monitoring_alive,omitempty"`
			MonitoringDiagnostics *struct {
				Limit *struct {
					Burst    *float32 `json:"burst,omitempty"`
					Interval *string  `json:"interval,omitempty"`
				} `json:"limit,omitempty"`
				Uploader *struct {
					InitDur    *string  `json:"init_dur,omitempty"`
					MaxDur     *string  `json:"max_dur,omitempty"`
					MaxRetries *float32 `json:"max_retries,omitempty"`
				} `json:"uploader,omitempty"`
			} `json:"monitoring_diagnostics,omitempty"`
			MonitoringEnabled *[]GetFleetAgentPolicies200ItemsMonitoringEnabled `json:"monitoring_enabled,omitempty"`
			MonitoringHttp    *struct {
				Buffer *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"buffer,omitempty"`
				Enabled *bool    `json:"enabled,omitempty"`
				Host    *string  `json:"host,omitempty"`
				Port    *float32 `json:"port,omitempty"`
			} `json:"monitoring_http,omitempty"`
			MonitoringOutputId     *string `json:"monitoring_output_id,omitempty"`
			MonitoringPprofEnabled *bool   `json:"monitoring_pprof_enabled,omitempty"`
			Name                   string  `json:"name"`
			Namespace              string  `json:"namespace"`

			// Overrides Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.
			Overrides        *map[string]interface{}                          `json:"overrides,omitempty"`
			PackagePolicies  *GetFleetAgentPolicies_200_Items_PackagePolicies `json:"package_policies,omitempty"`
			RequiredVersions *[]struct {
				// Percentage Target percentage of agents to auto upgrade
				Percentage float32 `json:"percentage"`

				// Version Target version for automatic agent upgrade
				Version string `json:"version"`
			} `json:"required_versions,omitempty"`
			Revision      float32                             `json:"revision"`
			SchemaVersion *string                             `json:"schema_version,omitempty"`
			SpaceIds      *[]string                           `json:"space_ids,omitempty"`
			Status        GetFleetAgentPolicies200ItemsStatus `json:"status"`

			// SupportsAgentless Indicates whether the agent policy supports agentless integrations.
			SupportsAgentless  *bool    `json:"supports_agentless,omitempty"`
			UnenrollTimeout    *float32 `json:"unenroll_timeout,omitempty"`
			UnprivilegedAgents *float32 `json:"unprivileged_agents,omitempty"`
			UpdatedAt          string   `json:"updated_at"`
			UpdatedBy          string   `json:"updated_by"`
			Version            *string  `json:"version,omitempty"`
		} `json:"items"`
		Page    float32 `json:"page"`
		PerPage float32 `json:"perPage"`
		Total   float32 `json:"total"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type GetFleetAgentPolicies200ItemsGlobalDataTagsValue0 = string
type GetFleetAgentPolicies200ItemsGlobalDataTagsValue1 = float32
type GetFleetAgentPolicies_200_Items_GlobalDataTags_Value struct {
	union json.RawMessage
}
type GetFleetAgentPolicies200ItemsMonitoringEnabled string
type GetFleetAgentPolicies200ItemsPackagePolicies0 = []string
type GetFleetAgentPolicies200ItemsPackagePolicies1 = []struct {
	// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
	AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
	Agents                           *float32  `json:"agents,omitempty"`
	CreatedAt                        string    `json:"created_at"`
	CreatedBy                        string    `json:"created_by"`

	// Description Package policy description
	Description   *string                                                          `json:"description,omitempty"`
	Elasticsearch *GetFleetAgentPolicies_200_Items_PackagePolicies_1_Elasticsearch `json:"elasticsearch,omitempty"`
	Enabled       bool                                                             `json:"enabled"`
	Id            string                                                           `json:"id"`
	Inputs        GetFleetAgentPolicies_200_Items_PackagePolicies_1_Inputs         `json:"inputs"`
	IsManaged     *bool                                                            `json:"is_managed,omitempty"`

	// Name Package policy name (should be unique)
	Name string `json:"name"`

	// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
	Namespace *string `json:"namespace,omitempty"`
	OutputId  *string `json:"output_id,omitempty"`

	// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
	Overrides *struct {
		Inputs *map[string]interface{} `json:"inputs,omitempty"`
	} `json:"overrides,omitempty"`
	Package *struct {
		ExperimentalDataStreamFeatures *[]struct {
			DataStream string `json:"data_stream"`
			Features   struct {
				DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
				DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
				SyntheticSource     *bool `json:"synthetic_source,omitempty"`
				Tsdb                *bool `json:"tsdb,omitempty"`
			} `json:"features"`
		} `json:"experimental_data_stream_features,omitempty"`

		// Name Package name
		Name         string  `json:"name"`
		RequiresRoot *bool   `json:"requires_root,omitempty"`
		Title        *string `json:"title,omitempty"`

		// Version Package version
		Version string `json:"version"`
	} `json:"package,omitempty"`

	// PolicyId Agent policy ID where that package policy will be added
	// Deprecated:
	PolicyId         *string   `json:"policy_id,omitempty"`
	PolicyIds        *[]string `json:"policy_ids,omitempty"`
	Revision         float32   `json:"revision"`
	SecretReferences *[]struct {
		Id string `json:"id"`
	} `json:"secret_references,omitempty"`
	SpaceIds *[]string `json:"spaceIds,omitempty"`

	// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
	SupportsAgentless *bool                                                   `json:"supports_agentless,omitempty"`
	UpdatedAt         string                                                  `json:"updated_at"`
	UpdatedBy         string                                                  `json:"updated_by"`
	Vars              *GetFleetAgentPolicies_200_Items_PackagePolicies_1_Vars `json:"vars,omitempty"`
	Version           *string                                                 `json:"version,omitempty"`
}
type GetFleetAgentPolicies_200_Items_PackagePolicies_1_Elasticsearch_Privileges struct {
	Cluster              *[]string              `json:"cluster,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetAgentPolicies_200_Items_PackagePolicies_1_Elasticsearch struct {
	Privileges           *GetFleetAgentPolicies_200_Items_PackagePolicies_1_Elasticsearch_Privileges `json:"privileges,omitempty"`
	AdditionalProperties map[string]interface{}                                                      `json:"-"`
}
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs0 = []struct {
	CompiledInput interface{} `json:"compiled_input"`

	// Config Package variable (see integration documentation for more information)
	Config *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"config,omitempty"`
	Enabled        bool    `json:"enabled"`
	Id             *string `json:"id,omitempty"`
	KeepEnabled    *bool   `json:"keep_enabled,omitempty"`
	PolicyTemplate *string `json:"policy_template,omitempty"`
	Streams        []struct {
		CompiledStream interface{} `json:"compiled_stream"`

		// Config Package variable (see integration documentation for more information)
		Config *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"config,omitempty"`
		DataStream struct {
			Dataset       string `json:"dataset"`
			Elasticsearch *struct {
				DynamicDataset   *bool `json:"dynamic_dataset,omitempty"`
				DynamicNamespace *bool `json:"dynamic_namespace,omitempty"`
				Privileges       *struct {
					Indices *[]string `json:"indices,omitempty"`
				} `json:"privileges,omitempty"`
			} `json:"elasticsearch,omitempty"`
			Type string `json:"type"`
		} `json:"data_stream"`
		Enabled     bool                                                                `json:"enabled"`
		Id          *string                                                             `json:"id,omitempty"`
		KeepEnabled *bool                                                               `json:"keep_enabled,omitempty"`
		Release     *GetFleetAgentPolicies200ItemsPackagePolicies1Inputs0StreamsRelease `json:"release,omitempty"`

		// Vars Package variable (see integration documentation for more information)
		Vars *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"vars,omitempty"`
	} `json:"streams"`
	Type string `json:"type"`

	// Vars Package variable (see integration documentation for more information)
	Vars *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"vars,omitempty"`
}
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs0StreamsRelease string
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1 map[string]struct {
	// Enabled enable or disable that input, (default to true)
	Enabled *bool `json:"enabled,omitempty"`

	// Streams Input streams (see integration documentation to know what streams are available)
	Streams *map[string]struct {
		// Enabled enable or disable that stream, (default to true)
		Enabled *bool `json:"enabled,omitempty"`

		// Vars Input/stream level variable (see integration documentation for more information)
		Vars *map[string]*GetFleetAgentPolicies_200_Items_PackagePolicies_1_Inputs_1_Streams_Vars_AdditionalProperties `json:"vars,omitempty"`
	} `json:"streams,omitempty"`

	// Vars Input/stream level variable (see integration documentation for more information)
	Vars *map[string]*GetFleetAgentPolicies_200_Items_PackagePolicies_1_Inputs_1_Vars_AdditionalProperties `json:"vars,omitempty"`
}
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1StreamsVars0 = bool
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1StreamsVars1 = string
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1StreamsVars2 = float32
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1StreamsVars3 = []string
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1StreamsVars4 = []float32
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1StreamsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetAgentPolicies_200_Items_PackagePolicies_1_Inputs_1_Streams_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1Vars0 = bool
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1Vars1 = string
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1Vars2 = float32
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1Vars3 = []string
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1Vars4 = []float32
type GetFleetAgentPolicies200ItemsPackagePolicies1Inputs1Vars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetAgentPolicies_200_Items_PackagePolicies_1_Inputs_1_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetAgentPolicies_200_Items_PackagePolicies_1_Inputs struct {
	union json.RawMessage
}
type GetFleetAgentPolicies200ItemsPackagePolicies1Vars0 map[string]struct {
	Frozen *bool       `json:"frozen,omitempty"`
	Type   *string     `json:"type,omitempty"`
	Value  interface{} `json:"value"`
}
type GetFleetAgentPolicies200ItemsPackagePolicies1Vars1 map[string]*GetFleetAgentPolicies_200_Items_PackagePolicies_1_Vars_1_AdditionalProperties
type GetFleetAgentPolicies200ItemsPackagePolicies1Vars10 = bool
type GetFleetAgentPolicies200ItemsPackagePolicies1Vars11 = string
type GetFleetAgentPolicies200ItemsPackagePolicies1Vars12 = float32
type GetFleetAgentPolicies200ItemsPackagePolicies1Vars13 = []string
type GetFleetAgentPolicies200ItemsPackagePolicies1Vars14 = []float32
type GetFleetAgentPolicies200ItemsPackagePolicies1Vars15 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetAgentPolicies_200_Items_PackagePolicies_1_Vars_1_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetAgentPolicies_200_Items_PackagePolicies_1_Vars struct {
	union json.RawMessage
}
type GetFleetAgentPolicies_200_Items_PackagePolicies struct {
	union json.RawMessage
}
type GetFleetAgentPolicies200ItemsStatus string

// Status returns HTTPResponse.Status
func (r GetFleetAgentPoliciesResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetAgentPoliciesResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostFleetAgentPoliciesResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item struct {
			AdvancedSettings *struct {
				AgentDownloadTargetDirectory      *interface{} `json:"agent_download_target_directory,omitempty"`
				AgentDownloadTimeout              *interface{} `json:"agent_download_timeout,omitempty"`
				AgentLimitsGoMaxProcs             *interface{} `json:"agent_limits_go_max_procs,omitempty"`
				AgentLoggingFilesInterval         *interface{} `json:"agent_logging_files_interval,omitempty"`
				AgentLoggingFilesKeepfiles        *interface{} `json:"agent_logging_files_keepfiles,omitempty"`
				AgentLoggingFilesRotateeverybytes *interface{} `json:"agent_logging_files_rotateeverybytes,omitempty"`
				AgentLoggingLevel                 *interface{} `json:"agent_logging_level,omitempty"`
				AgentLoggingMetricsPeriod         *interface{} `json:"agent_logging_metrics_period,omitempty"`
				AgentLoggingToFiles               *interface{} `json:"agent_logging_to_files,omitempty"`
			} `json:"advanced_settings,omitempty"`
			AgentFeatures *[]struct {
				Enabled bool   `json:"enabled"`
				Name    string `json:"name"`
			} `json:"agent_features,omitempty"`
			Agentless *struct {
				CloudConnectors *struct {
					Enabled   bool    `json:"enabled"`
					TargetCsp *string `json:"target_csp,omitempty"`
				} `json:"cloud_connectors,omitempty"`
				Resources *struct {
					Requests *struct {
						Cpu    *string `json:"cpu,omitempty"`
						Memory *string `json:"memory,omitempty"`
					} `json:"requests,omitempty"`
				} `json:"resources,omitempty"`
			} `json:"agentless,omitempty"`
			Agents            *float32 `json:"agents,omitempty"`
			DataOutputId      *string  `json:"data_output_id,omitempty"`
			Description       *string  `json:"description,omitempty"`
			DownloadSourceId  *string  `json:"download_source_id,omitempty"`
			FleetServerHostId *string  `json:"fleet_server_host_id,omitempty"`

			// GlobalDataTags User defined data tags that are added to all of the inputs. The values can be strings or numbers.
			GlobalDataTags *[]struct {
				Name  string                                               `json:"name"`
				Value PostFleetAgentPolicies_200_Item_GlobalDataTags_Value `json:"value"`
			} `json:"global_data_tags,omitempty"`
			HasFleetServer       *bool    `json:"has_fleet_server,omitempty"`
			Id                   string   `json:"id"`
			InactivityTimeout    *float32 `json:"inactivity_timeout,omitempty"`
			IsDefault            *bool    `json:"is_default,omitempty"`
			IsDefaultFleetServer *bool    `json:"is_default_fleet_server,omitempty"`
			IsManaged            bool     `json:"is_managed"`
			IsPreconfigured      *bool    `json:"is_preconfigured,omitempty"`

			// IsProtected Indicates whether the agent policy has tamper protection enabled. Default false.
			IsProtected bool `json:"is_protected"`

			// KeepMonitoringAlive When set to true, monitoring will be enabled but logs/metrics collection will be disabled
			KeepMonitoringAlive   *bool `json:"keep_monitoring_alive,omitempty"`
			MonitoringDiagnostics *struct {
				Limit *struct {
					Burst    *float32 `json:"burst,omitempty"`
					Interval *string  `json:"interval,omitempty"`
				} `json:"limit,omitempty"`
				Uploader *struct {
					InitDur    *string  `json:"init_dur,omitempty"`
					MaxDur     *string  `json:"max_dur,omitempty"`
					MaxRetries *float32 `json:"max_retries,omitempty"`
				} `json:"uploader,omitempty"`
			} `json:"monitoring_diagnostics,omitempty"`
			MonitoringEnabled *[]PostFleetAgentPolicies200ItemMonitoringEnabled `json:"monitoring_enabled,omitempty"`
			MonitoringHttp    *struct {
				Buffer *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"buffer,omitempty"`
				Enabled *bool    `json:"enabled,omitempty"`
				Host    *string  `json:"host,omitempty"`
				Port    *float32 `json:"port,omitempty"`
			} `json:"monitoring_http,omitempty"`
			MonitoringOutputId     *string `json:"monitoring_output_id,omitempty"`
			MonitoringPprofEnabled *bool   `json:"monitoring_pprof_enabled,omitempty"`
			Name                   string  `json:"name"`
			Namespace              string  `json:"namespace"`

			// Overrides Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.
			Overrides        *map[string]interface{}                          `json:"overrides,omitempty"`
			PackagePolicies  *PostFleetAgentPolicies_200_Item_PackagePolicies `json:"package_policies,omitempty"`
			RequiredVersions *[]struct {
				// Percentage Target percentage of agents to auto upgrade
				Percentage float32 `json:"percentage"`

				// Version Target version for automatic agent upgrade
				Version string `json:"version"`
			} `json:"required_versions,omitempty"`
			Revision      float32                             `json:"revision"`
			SchemaVersion *string                             `json:"schema_version,omitempty"`
			SpaceIds      *[]string                           `json:"space_ids,omitempty"`
			Status        PostFleetAgentPolicies200ItemStatus `json:"status"`

			// SupportsAgentless Indicates whether the agent policy supports agentless integrations.
			SupportsAgentless  *bool    `json:"supports_agentless,omitempty"`
			UnenrollTimeout    *float32 `json:"unenroll_timeout,omitempty"`
			UnprivilegedAgents *float32 `json:"unprivileged_agents,omitempty"`
			UpdatedAt          string   `json:"updated_at"`
			UpdatedBy          string   `json:"updated_by"`
			Version            *string  `json:"version,omitempty"`
		} `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type PostFleetAgentPolicies200ItemGlobalDataTagsValue0 = string
type PostFleetAgentPolicies200ItemGlobalDataTagsValue1 = float32
type PostFleetAgentPolicies_200_Item_GlobalDataTags_Value struct {
	union json.RawMessage
}
type PostFleetAgentPolicies200ItemMonitoringEnabled string
type PostFleetAgentPolicies200ItemPackagePolicies0 = []string
type PostFleetAgentPolicies200ItemPackagePolicies1 = []struct {
	// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
	AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
	Agents                           *float32  `json:"agents,omitempty"`
	CreatedAt                        string    `json:"created_at"`
	CreatedBy                        string    `json:"created_by"`

	// Description Package policy description
	Description   *string                                                          `json:"description,omitempty"`
	Elasticsearch *PostFleetAgentPolicies_200_Item_PackagePolicies_1_Elasticsearch `json:"elasticsearch,omitempty"`
	Enabled       bool                                                             `json:"enabled"`
	Id            string                                                           `json:"id"`
	Inputs        PostFleetAgentPolicies_200_Item_PackagePolicies_1_Inputs         `json:"inputs"`
	IsManaged     *bool                                                            `json:"is_managed,omitempty"`

	// Name Package policy name (should be unique)
	Name string `json:"name"`

	// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
	Namespace *string `json:"namespace,omitempty"`
	OutputId  *string `json:"output_id,omitempty"`

	// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
	Overrides *struct {
		Inputs *map[string]interface{} `json:"inputs,omitempty"`
	} `json:"overrides,omitempty"`
	Package *struct {
		ExperimentalDataStreamFeatures *[]struct {
			DataStream string `json:"data_stream"`
			Features   struct {
				DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
				DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
				SyntheticSource     *bool `json:"synthetic_source,omitempty"`
				Tsdb                *bool `json:"tsdb,omitempty"`
			} `json:"features"`
		} `json:"experimental_data_stream_features,omitempty"`

		// Name Package name
		Name         string  `json:"name"`
		RequiresRoot *bool   `json:"requires_root,omitempty"`
		Title        *string `json:"title,omitempty"`

		// Version Package version
		Version string `json:"version"`
	} `json:"package,omitempty"`

	// PolicyId Agent policy ID where that package policy will be added
	// Deprecated:
	PolicyId         *string   `json:"policy_id,omitempty"`
	PolicyIds        *[]string `json:"policy_ids,omitempty"`
	Revision         float32   `json:"revision"`
	SecretReferences *[]struct {
		Id string `json:"id"`
	} `json:"secret_references,omitempty"`
	SpaceIds *[]string `json:"spaceIds,omitempty"`

	// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
	SupportsAgentless *bool                                                   `json:"supports_agentless,omitempty"`
	UpdatedAt         string                                                  `json:"updated_at"`
	UpdatedBy         string                                                  `json:"updated_by"`
	Vars              *PostFleetAgentPolicies_200_Item_PackagePolicies_1_Vars `json:"vars,omitempty"`
	Version           *string                                                 `json:"version,omitempty"`
}
type PostFleetAgentPolicies_200_Item_PackagePolicies_1_Elasticsearch_Privileges struct {
	Cluster              *[]string              `json:"cluster,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetAgentPolicies_200_Item_PackagePolicies_1_Elasticsearch struct {
	Privileges           *PostFleetAgentPolicies_200_Item_PackagePolicies_1_Elasticsearch_Privileges `json:"privileges,omitempty"`
	AdditionalProperties map[string]interface{}                                                      `json:"-"`
}
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs0 = []struct {
	CompiledInput interface{} `json:"compiled_input"`

	// Config Package variable (see integration documentation for more information)
	Config *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"config,omitempty"`
	Enabled        bool    `json:"enabled"`
	Id             *string `json:"id,omitempty"`
	KeepEnabled    *bool   `json:"keep_enabled,omitempty"`
	PolicyTemplate *string `json:"policy_template,omitempty"`
	Streams        []struct {
		CompiledStream interface{} `json:"compiled_stream"`

		// Config Package variable (see integration documentation for more information)
		Config *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"config,omitempty"`
		DataStream struct {
			Dataset       string `json:"dataset"`
			Elasticsearch *struct {
				DynamicDataset   *bool `json:"dynamic_dataset,omitempty"`
				DynamicNamespace *bool `json:"dynamic_namespace,omitempty"`
				Privileges       *struct {
					Indices *[]string `json:"indices,omitempty"`
				} `json:"privileges,omitempty"`
			} `json:"elasticsearch,omitempty"`
			Type string `json:"type"`
		} `json:"data_stream"`
		Enabled     bool                                                                `json:"enabled"`
		Id          *string                                                             `json:"id,omitempty"`
		KeepEnabled *bool                                                               `json:"keep_enabled,omitempty"`
		Release     *PostFleetAgentPolicies200ItemPackagePolicies1Inputs0StreamsRelease `json:"release,omitempty"`

		// Vars Package variable (see integration documentation for more information)
		Vars *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"vars,omitempty"`
	} `json:"streams"`
	Type string `json:"type"`

	// Vars Package variable (see integration documentation for more information)
	Vars *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"vars,omitempty"`
}
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs0StreamsRelease string
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1 map[string]struct {
	// Enabled enable or disable that input, (default to true)
	Enabled *bool `json:"enabled,omitempty"`

	// Streams Input streams (see integration documentation to know what streams are available)
	Streams *map[string]struct {
		// Enabled enable or disable that stream, (default to true)
		Enabled *bool `json:"enabled,omitempty"`

		// Vars Input/stream level variable (see integration documentation for more information)
		Vars *map[string]*PostFleetAgentPolicies_200_Item_PackagePolicies_1_Inputs_1_Streams_Vars_AdditionalProperties `json:"vars,omitempty"`
	} `json:"streams,omitempty"`

	// Vars Input/stream level variable (see integration documentation for more information)
	Vars *map[string]*PostFleetAgentPolicies_200_Item_PackagePolicies_1_Inputs_1_Vars_AdditionalProperties `json:"vars,omitempty"`
}
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1StreamsVars0 = bool
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1StreamsVars1 = string
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1StreamsVars2 = float32
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1StreamsVars3 = []string
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1StreamsVars4 = []float32
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1StreamsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PostFleetAgentPolicies_200_Item_PackagePolicies_1_Inputs_1_Streams_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1Vars0 = bool
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1Vars1 = string
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1Vars2 = float32
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1Vars3 = []string
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1Vars4 = []float32
type PostFleetAgentPolicies200ItemPackagePolicies1Inputs1Vars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PostFleetAgentPolicies_200_Item_PackagePolicies_1_Inputs_1_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type PostFleetAgentPolicies_200_Item_PackagePolicies_1_Inputs struct {
	union json.RawMessage
}
type PostFleetAgentPolicies200ItemPackagePolicies1Vars0 map[string]struct {
	Frozen *bool       `json:"frozen,omitempty"`
	Type   *string     `json:"type,omitempty"`
	Value  interface{} `json:"value"`
}
type PostFleetAgentPolicies200ItemPackagePolicies1Vars1 map[string]*PostFleetAgentPolicies_200_Item_PackagePolicies_1_Vars_1_AdditionalProperties
type PostFleetAgentPolicies200ItemPackagePolicies1Vars10 = bool
type PostFleetAgentPolicies200ItemPackagePolicies1Vars11 = string
type PostFleetAgentPolicies200ItemPackagePolicies1Vars12 = float32
type PostFleetAgentPolicies200ItemPackagePolicies1Vars13 = []string
type PostFleetAgentPolicies200ItemPackagePolicies1Vars14 = []float32
type PostFleetAgentPolicies200ItemPackagePolicies1Vars15 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PostFleetAgentPolicies_200_Item_PackagePolicies_1_Vars_1_AdditionalProperties struct {
	union json.RawMessage
}
type PostFleetAgentPolicies_200_Item_PackagePolicies_1_Vars struct {
	union json.RawMessage
}
type PostFleetAgentPolicies_200_Item_PackagePolicies struct {
	union json.RawMessage
}
type PostFleetAgentPolicies200ItemStatus string

// Status returns HTTPResponse.Status
func (r PostFleetAgentPoliciesResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostFleetAgentPoliciesResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostFleetAgentPoliciesDeleteResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Id   string `json:"id"`
		Name string `json:"name"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r PostFleetAgentPoliciesDeleteResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostFleetAgentPoliciesDeleteResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetAgentPoliciesAgentpolicyidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item struct {
			AdvancedSettings *struct {
				AgentDownloadTargetDirectory      *interface{} `json:"agent_download_target_directory,omitempty"`
				AgentDownloadTimeout              *interface{} `json:"agent_download_timeout,omitempty"`
				AgentLimitsGoMaxProcs             *interface{} `json:"agent_limits_go_max_procs,omitempty"`
				AgentLoggingFilesInterval         *interface{} `json:"agent_logging_files_interval,omitempty"`
				AgentLoggingFilesKeepfiles        *interface{} `json:"agent_logging_files_keepfiles,omitempty"`
				AgentLoggingFilesRotateeverybytes *interface{} `json:"agent_logging_files_rotateeverybytes,omitempty"`
				AgentLoggingLevel                 *interface{} `json:"agent_logging_level,omitempty"`
				AgentLoggingMetricsPeriod         *interface{} `json:"agent_logging_metrics_period,omitempty"`
				AgentLoggingToFiles               *interface{} `json:"agent_logging_to_files,omitempty"`
			} `json:"advanced_settings,omitempty"`
			AgentFeatures *[]struct {
				Enabled bool   `json:"enabled"`
				Name    string `json:"name"`
			} `json:"agent_features,omitempty"`
			Agentless *struct {
				CloudConnectors *struct {
					Enabled   bool    `json:"enabled"`
					TargetCsp *string `json:"target_csp,omitempty"`
				} `json:"cloud_connectors,omitempty"`
				Resources *struct {
					Requests *struct {
						Cpu    *string `json:"cpu,omitempty"`
						Memory *string `json:"memory,omitempty"`
					} `json:"requests,omitempty"`
				} `json:"resources,omitempty"`
			} `json:"agentless,omitempty"`
			Agents            *float32 `json:"agents,omitempty"`
			DataOutputId      *string  `json:"data_output_id,omitempty"`
			Description       *string  `json:"description,omitempty"`
			DownloadSourceId  *string  `json:"download_source_id,omitempty"`
			FleetServerHostId *string  `json:"fleet_server_host_id,omitempty"`

			// GlobalDataTags User defined data tags that are added to all of the inputs. The values can be strings or numbers.
			GlobalDataTags *[]struct {
				Name  string                                                           `json:"name"`
				Value GetFleetAgentPoliciesAgentpolicyid_200_Item_GlobalDataTags_Value `json:"value"`
			} `json:"global_data_tags,omitempty"`
			HasFleetServer       *bool    `json:"has_fleet_server,omitempty"`
			Id                   string   `json:"id"`
			InactivityTimeout    *float32 `json:"inactivity_timeout,omitempty"`
			IsDefault            *bool    `json:"is_default,omitempty"`
			IsDefaultFleetServer *bool    `json:"is_default_fleet_server,omitempty"`
			IsManaged            bool     `json:"is_managed"`
			IsPreconfigured      *bool    `json:"is_preconfigured,omitempty"`

			// IsProtected Indicates whether the agent policy has tamper protection enabled. Default false.
			IsProtected bool `json:"is_protected"`

			// KeepMonitoringAlive When set to true, monitoring will be enabled but logs/metrics collection will be disabled
			KeepMonitoringAlive   *bool `json:"keep_monitoring_alive,omitempty"`
			MonitoringDiagnostics *struct {
				Limit *struct {
					Burst    *float32 `json:"burst,omitempty"`
					Interval *string  `json:"interval,omitempty"`
				} `json:"limit,omitempty"`
				Uploader *struct {
					InitDur    *string  `json:"init_dur,omitempty"`
					MaxDur     *string  `json:"max_dur,omitempty"`
					MaxRetries *float32 `json:"max_retries,omitempty"`
				} `json:"uploader,omitempty"`
			} `json:"monitoring_diagnostics,omitempty"`
			MonitoringEnabled *[]GetFleetAgentPoliciesAgentpolicyid200ItemMonitoringEnabled `json:"monitoring_enabled,omitempty"`
			MonitoringHttp    *struct {
				Buffer *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"buffer,omitempty"`
				Enabled *bool    `json:"enabled,omitempty"`
				Host    *string  `json:"host,omitempty"`
				Port    *float32 `json:"port,omitempty"`
			} `json:"monitoring_http,omitempty"`
			MonitoringOutputId     *string `json:"monitoring_output_id,omitempty"`
			MonitoringPprofEnabled *bool   `json:"monitoring_pprof_enabled,omitempty"`
			Name                   string  `json:"name"`
			Namespace              string  `json:"namespace"`

			// Overrides Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.
			Overrides        *map[string]interface{}                                      `json:"overrides,omitempty"`
			PackagePolicies  *GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies `json:"package_policies,omitempty"`
			RequiredVersions *[]struct {
				// Percentage Target percentage of agents to auto upgrade
				Percentage float32 `json:"percentage"`

				// Version Target version for automatic agent upgrade
				Version string `json:"version"`
			} `json:"required_versions,omitempty"`
			Revision      float32                                         `json:"revision"`
			SchemaVersion *string                                         `json:"schema_version,omitempty"`
			SpaceIds      *[]string                                       `json:"space_ids,omitempty"`
			Status        GetFleetAgentPoliciesAgentpolicyid200ItemStatus `json:"status"`

			// SupportsAgentless Indicates whether the agent policy supports agentless integrations.
			SupportsAgentless  *bool    `json:"supports_agentless,omitempty"`
			UnenrollTimeout    *float32 `json:"unenroll_timeout,omitempty"`
			UnprivilegedAgents *float32 `json:"unprivileged_agents,omitempty"`
			UpdatedAt          string   `json:"updated_at"`
			UpdatedBy          string   `json:"updated_by"`
			Version            *string  `json:"version,omitempty"`
		} `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type GetFleetAgentPoliciesAgentpolicyid200ItemGlobalDataTagsValue0 = string
type GetFleetAgentPoliciesAgentpolicyid200ItemGlobalDataTagsValue1 = float32
type GetFleetAgentPoliciesAgentpolicyid_200_Item_GlobalDataTags_Value struct {
	union json.RawMessage
}
type GetFleetAgentPoliciesAgentpolicyid200ItemMonitoringEnabled string
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies0 = []string
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1 = []struct {
	// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
	AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
	Agents                           *float32  `json:"agents,omitempty"`
	CreatedAt                        string    `json:"created_at"`
	CreatedBy                        string    `json:"created_by"`

	// Description Package policy description
	Description   *string                                                                      `json:"description,omitempty"`
	Elasticsearch *GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Elasticsearch `json:"elasticsearch,omitempty"`
	Enabled       bool                                                                         `json:"enabled"`
	Id            string                                                                       `json:"id"`
	Inputs        GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs         `json:"inputs"`
	IsManaged     *bool                                                                        `json:"is_managed,omitempty"`

	// Name Package policy name (should be unique)
	Name string `json:"name"`

	// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
	Namespace *string `json:"namespace,omitempty"`
	OutputId  *string `json:"output_id,omitempty"`

	// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
	Overrides *struct {
		Inputs *map[string]interface{} `json:"inputs,omitempty"`
	} `json:"overrides,omitempty"`
	Package *struct {
		ExperimentalDataStreamFeatures *[]struct {
			DataStream string `json:"data_stream"`
			Features   struct {
				DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
				DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
				SyntheticSource     *bool `json:"synthetic_source,omitempty"`
				Tsdb                *bool `json:"tsdb,omitempty"`
			} `json:"features"`
		} `json:"experimental_data_stream_features,omitempty"`

		// Name Package name
		Name         string  `json:"name"`
		RequiresRoot *bool   `json:"requires_root,omitempty"`
		Title        *string `json:"title,omitempty"`

		// Version Package version
		Version string `json:"version"`
	} `json:"package,omitempty"`

	// PolicyId Agent policy ID where that package policy will be added
	// Deprecated:
	PolicyId         *string   `json:"policy_id,omitempty"`
	PolicyIds        *[]string `json:"policy_ids,omitempty"`
	Revision         float32   `json:"revision"`
	SecretReferences *[]struct {
		Id string `json:"id"`
	} `json:"secret_references,omitempty"`
	SpaceIds *[]string `json:"spaceIds,omitempty"`

	// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
	SupportsAgentless *bool                                                               `json:"supports_agentless,omitempty"`
	UpdatedAt         string                                                              `json:"updated_at"`
	UpdatedBy         string                                                              `json:"updated_by"`
	Vars              *GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Vars `json:"vars,omitempty"`
	Version           *string                                                             `json:"version,omitempty"`
}
type GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Elasticsearch_Privileges struct {
	Cluster              *[]string              `json:"cluster,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Elasticsearch struct {
	Privileges           *GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Elasticsearch_Privileges `json:"privileges,omitempty"`
	AdditionalProperties map[string]interface{}                                                                  `json:"-"`
}
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs0 = []struct {
	CompiledInput interface{} `json:"compiled_input"`

	// Config Package variable (see integration documentation for more information)
	Config *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"config,omitempty"`
	Enabled        bool    `json:"enabled"`
	Id             *string `json:"id,omitempty"`
	KeepEnabled    *bool   `json:"keep_enabled,omitempty"`
	PolicyTemplate *string `json:"policy_template,omitempty"`
	Streams        []struct {
		CompiledStream interface{} `json:"compiled_stream"`

		// Config Package variable (see integration documentation for more information)
		Config *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"config,omitempty"`
		DataStream struct {
			Dataset       string `json:"dataset"`
			Elasticsearch *struct {
				DynamicDataset   *bool `json:"dynamic_dataset,omitempty"`
				DynamicNamespace *bool `json:"dynamic_namespace,omitempty"`
				Privileges       *struct {
					Indices *[]string `json:"indices,omitempty"`
				} `json:"privileges,omitempty"`
			} `json:"elasticsearch,omitempty"`
			Type string `json:"type"`
		} `json:"data_stream"`
		Enabled     bool                                                                            `json:"enabled"`
		Id          *string                                                                         `json:"id,omitempty"`
		KeepEnabled *bool                                                                           `json:"keep_enabled,omitempty"`
		Release     *GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs0StreamsRelease `json:"release,omitempty"`

		// Vars Package variable (see integration documentation for more information)
		Vars *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"vars,omitempty"`
	} `json:"streams"`
	Type string `json:"type"`

	// Vars Package variable (see integration documentation for more information)
	Vars *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"vars,omitempty"`
}
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs0StreamsRelease string
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1 map[string]struct {
	// Enabled enable or disable that input, (default to true)
	Enabled *bool `json:"enabled,omitempty"`

	// Streams Input streams (see integration documentation to know what streams are available)
	Streams *map[string]struct {
		// Enabled enable or disable that stream, (default to true)
		Enabled *bool `json:"enabled,omitempty"`

		// Vars Input/stream level variable (see integration documentation for more information)
		Vars *map[string]*GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs_1_Streams_Vars_AdditionalProperties `json:"vars,omitempty"`
	} `json:"streams,omitempty"`

	// Vars Input/stream level variable (see integration documentation for more information)
	Vars *map[string]*GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs_1_Vars_AdditionalProperties `json:"vars,omitempty"`
}
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars0 = bool
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars1 = string
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars2 = float32
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars3 = []string
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars4 = []float32
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs_1_Streams_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars0 = bool
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars1 = string
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars2 = float32
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars3 = []string
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars4 = []float32
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs_1_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs struct {
	union json.RawMessage
}
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars0 map[string]struct {
	Frozen *bool       `json:"frozen,omitempty"`
	Type   *string     `json:"type,omitempty"`
	Value  interface{} `json:"value"`
}
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars1 map[string]*GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Vars_1_AdditionalProperties
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars10 = bool
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars11 = string
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars12 = float32
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars13 = []string
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars14 = []float32
type GetFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars15 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Vars_1_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Vars struct {
	union json.RawMessage
}
type GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies struct {
	union json.RawMessage
}
type GetFleetAgentPoliciesAgentpolicyid200ItemStatus string

// Status returns HTTPResponse.Status
func (r GetFleetAgentPoliciesAgentpolicyidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetAgentPoliciesAgentpolicyidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PutFleetAgentPoliciesAgentpolicyidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item struct {
			AdvancedSettings *struct {
				AgentDownloadTargetDirectory      *interface{} `json:"agent_download_target_directory,omitempty"`
				AgentDownloadTimeout              *interface{} `json:"agent_download_timeout,omitempty"`
				AgentLimitsGoMaxProcs             *interface{} `json:"agent_limits_go_max_procs,omitempty"`
				AgentLoggingFilesInterval         *interface{} `json:"agent_logging_files_interval,omitempty"`
				AgentLoggingFilesKeepfiles        *interface{} `json:"agent_logging_files_keepfiles,omitempty"`
				AgentLoggingFilesRotateeverybytes *interface{} `json:"agent_logging_files_rotateeverybytes,omitempty"`
				AgentLoggingLevel                 *interface{} `json:"agent_logging_level,omitempty"`
				AgentLoggingMetricsPeriod         *interface{} `json:"agent_logging_metrics_period,omitempty"`
				AgentLoggingToFiles               *interface{} `json:"agent_logging_to_files,omitempty"`
			} `json:"advanced_settings,omitempty"`
			AgentFeatures *[]struct {
				Enabled bool   `json:"enabled"`
				Name    string `json:"name"`
			} `json:"agent_features,omitempty"`
			Agentless *struct {
				CloudConnectors *struct {
					Enabled   bool    `json:"enabled"`
					TargetCsp *string `json:"target_csp,omitempty"`
				} `json:"cloud_connectors,omitempty"`
				Resources *struct {
					Requests *struct {
						Cpu    *string `json:"cpu,omitempty"`
						Memory *string `json:"memory,omitempty"`
					} `json:"requests,omitempty"`
				} `json:"resources,omitempty"`
			} `json:"agentless,omitempty"`
			Agents            *float32 `json:"agents,omitempty"`
			DataOutputId      *string  `json:"data_output_id,omitempty"`
			Description       *string  `json:"description,omitempty"`
			DownloadSourceId  *string  `json:"download_source_id,omitempty"`
			FleetServerHostId *string  `json:"fleet_server_host_id,omitempty"`

			// GlobalDataTags User defined data tags that are added to all of the inputs. The values can be strings or numbers.
			GlobalDataTags *[]struct {
				Name  string                                                           `json:"name"`
				Value PutFleetAgentPoliciesAgentpolicyid_200_Item_GlobalDataTags_Value `json:"value"`
			} `json:"global_data_tags,omitempty"`
			HasFleetServer       *bool    `json:"has_fleet_server,omitempty"`
			Id                   string   `json:"id"`
			InactivityTimeout    *float32 `json:"inactivity_timeout,omitempty"`
			IsDefault            *bool    `json:"is_default,omitempty"`
			IsDefaultFleetServer *bool    `json:"is_default_fleet_server,omitempty"`
			IsManaged            bool     `json:"is_managed"`
			IsPreconfigured      *bool    `json:"is_preconfigured,omitempty"`

			// IsProtected Indicates whether the agent policy has tamper protection enabled. Default false.
			IsProtected bool `json:"is_protected"`

			// KeepMonitoringAlive When set to true, monitoring will be enabled but logs/metrics collection will be disabled
			KeepMonitoringAlive   *bool `json:"keep_monitoring_alive,omitempty"`
			MonitoringDiagnostics *struct {
				Limit *struct {
					Burst    *float32 `json:"burst,omitempty"`
					Interval *string  `json:"interval,omitempty"`
				} `json:"limit,omitempty"`
				Uploader *struct {
					InitDur    *string  `json:"init_dur,omitempty"`
					MaxDur     *string  `json:"max_dur,omitempty"`
					MaxRetries *float32 `json:"max_retries,omitempty"`
				} `json:"uploader,omitempty"`
			} `json:"monitoring_diagnostics,omitempty"`
			MonitoringEnabled *[]PutFleetAgentPoliciesAgentpolicyid200ItemMonitoringEnabled `json:"monitoring_enabled,omitempty"`
			MonitoringHttp    *struct {
				Buffer *struct {
					Enabled *bool `json:"enabled,omitempty"`
				} `json:"buffer,omitempty"`
				Enabled *bool    `json:"enabled,omitempty"`
				Host    *string  `json:"host,omitempty"`
				Port    *float32 `json:"port,omitempty"`
			} `json:"monitoring_http,omitempty"`
			MonitoringOutputId     *string `json:"monitoring_output_id,omitempty"`
			MonitoringPprofEnabled *bool   `json:"monitoring_pprof_enabled,omitempty"`
			Name                   string  `json:"name"`
			Namespace              string  `json:"namespace"`

			// Overrides Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.
			Overrides        *map[string]interface{}                                      `json:"overrides,omitempty"`
			PackagePolicies  *PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies `json:"package_policies,omitempty"`
			RequiredVersions *[]struct {
				// Percentage Target percentage of agents to auto upgrade
				Percentage float32 `json:"percentage"`

				// Version Target version for automatic agent upgrade
				Version string `json:"version"`
			} `json:"required_versions,omitempty"`
			Revision      float32                                         `json:"revision"`
			SchemaVersion *string                                         `json:"schema_version,omitempty"`
			SpaceIds      *[]string                                       `json:"space_ids,omitempty"`
			Status        PutFleetAgentPoliciesAgentpolicyid200ItemStatus `json:"status"`

			// SupportsAgentless Indicates whether the agent policy supports agentless integrations.
			SupportsAgentless  *bool    `json:"supports_agentless,omitempty"`
			UnenrollTimeout    *float32 `json:"unenroll_timeout,omitempty"`
			UnprivilegedAgents *float32 `json:"unprivileged_agents,omitempty"`
			UpdatedAt          string   `json:"updated_at"`
			UpdatedBy          string   `json:"updated_by"`
			Version            *string  `json:"version,omitempty"`
		} `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type PutFleetAgentPoliciesAgentpolicyid200ItemGlobalDataTagsValue0 = string
type PutFleetAgentPoliciesAgentpolicyid200ItemGlobalDataTagsValue1 = float32
type PutFleetAgentPoliciesAgentpolicyid_200_Item_GlobalDataTags_Value struct {
	union json.RawMessage
}
type PutFleetAgentPoliciesAgentpolicyid200ItemMonitoringEnabled string
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies0 = []string
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1 = []struct {
	// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
	AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
	Agents                           *float32  `json:"agents,omitempty"`
	CreatedAt                        string    `json:"created_at"`
	CreatedBy                        string    `json:"created_by"`

	// Description Package policy description
	Description   *string                                                                      `json:"description,omitempty"`
	Elasticsearch *PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Elasticsearch `json:"elasticsearch,omitempty"`
	Enabled       bool                                                                         `json:"enabled"`
	Id            string                                                                       `json:"id"`
	Inputs        PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs         `json:"inputs"`
	IsManaged     *bool                                                                        `json:"is_managed,omitempty"`

	// Name Package policy name (should be unique)
	Name string `json:"name"`

	// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
	Namespace *string `json:"namespace,omitempty"`
	OutputId  *string `json:"output_id,omitempty"`

	// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
	Overrides *struct {
		Inputs *map[string]interface{} `json:"inputs,omitempty"`
	} `json:"overrides,omitempty"`
	Package *struct {
		ExperimentalDataStreamFeatures *[]struct {
			DataStream string `json:"data_stream"`
			Features   struct {
				DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
				DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
				SyntheticSource     *bool `json:"synthetic_source,omitempty"`
				Tsdb                *bool `json:"tsdb,omitempty"`
			} `json:"features"`
		} `json:"experimental_data_stream_features,omitempty"`

		// Name Package name
		Name         string  `json:"name"`
		RequiresRoot *bool   `json:"requires_root,omitempty"`
		Title        *string `json:"title,omitempty"`

		// Version Package version
		Version string `json:"version"`
	} `json:"package,omitempty"`

	// PolicyId Agent policy ID where that package policy will be added
	// Deprecated:
	PolicyId         *string   `json:"policy_id,omitempty"`
	PolicyIds        *[]string `json:"policy_ids,omitempty"`
	Revision         float32   `json:"revision"`
	SecretReferences *[]struct {
		Id string `json:"id"`
	} `json:"secret_references,omitempty"`
	SpaceIds *[]string `json:"spaceIds,omitempty"`

	// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
	SupportsAgentless *bool                                                               `json:"supports_agentless,omitempty"`
	UpdatedAt         string                                                              `json:"updated_at"`
	UpdatedBy         string                                                              `json:"updated_by"`
	Vars              *PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Vars `json:"vars,omitempty"`
	Version           *string                                                             `json:"version,omitempty"`
}
type PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Elasticsearch_Privileges struct {
	Cluster              *[]string              `json:"cluster,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Elasticsearch struct {
	Privileges           *PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Elasticsearch_Privileges `json:"privileges,omitempty"`
	AdditionalProperties map[string]interface{}                                                                  `json:"-"`
}
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs0 = []struct {
	CompiledInput interface{} `json:"compiled_input"`

	// Config Package variable (see integration documentation for more information)
	Config *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"config,omitempty"`
	Enabled        bool    `json:"enabled"`
	Id             *string `json:"id,omitempty"`
	KeepEnabled    *bool   `json:"keep_enabled,omitempty"`
	PolicyTemplate *string `json:"policy_template,omitempty"`
	Streams        []struct {
		CompiledStream interface{} `json:"compiled_stream"`

		// Config Package variable (see integration documentation for more information)
		Config *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"config,omitempty"`
		DataStream struct {
			Dataset       string `json:"dataset"`
			Elasticsearch *struct {
				DynamicDataset   *bool `json:"dynamic_dataset,omitempty"`
				DynamicNamespace *bool `json:"dynamic_namespace,omitempty"`
				Privileges       *struct {
					Indices *[]string `json:"indices,omitempty"`
				} `json:"privileges,omitempty"`
			} `json:"elasticsearch,omitempty"`
			Type string `json:"type"`
		} `json:"data_stream"`
		Enabled     bool                                                                            `json:"enabled"`
		Id          *string                                                                         `json:"id,omitempty"`
		KeepEnabled *bool                                                                           `json:"keep_enabled,omitempty"`
		Release     *PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs0StreamsRelease `json:"release,omitempty"`

		// Vars Package variable (see integration documentation for more information)
		Vars *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"vars,omitempty"`
	} `json:"streams"`
	Type string `json:"type"`

	// Vars Package variable (see integration documentation for more information)
	Vars *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"vars,omitempty"`
}
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs0StreamsRelease string
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1 map[string]struct {
	// Enabled enable or disable that input, (default to true)
	Enabled *bool `json:"enabled,omitempty"`

	// Streams Input streams (see integration documentation to know what streams are available)
	Streams *map[string]struct {
		// Enabled enable or disable that stream, (default to true)
		Enabled *bool `json:"enabled,omitempty"`

		// Vars Input/stream level variable (see integration documentation for more information)
		Vars *map[string]*PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs_1_Streams_Vars_AdditionalProperties `json:"vars,omitempty"`
	} `json:"streams,omitempty"`

	// Vars Input/stream level variable (see integration documentation for more information)
	Vars *map[string]*PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs_1_Vars_AdditionalProperties `json:"vars,omitempty"`
}
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars0 = bool
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars1 = string
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars2 = float32
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars3 = []string
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars4 = []float32
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1StreamsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs_1_Streams_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars0 = bool
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars1 = string
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars2 = float32
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars3 = []string
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars4 = []float32
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Inputs1Vars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs_1_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Inputs struct {
	union json.RawMessage
}
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars0 map[string]struct {
	Frozen *bool       `json:"frozen,omitempty"`
	Type   *string     `json:"type,omitempty"`
	Value  interface{} `json:"value"`
}
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars1 map[string]*PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Vars_1_AdditionalProperties
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars10 = bool
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars11 = string
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars12 = float32
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars13 = []string
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars14 = []float32
type PutFleetAgentPoliciesAgentpolicyid200ItemPackagePolicies1Vars15 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Vars_1_AdditionalProperties struct {
	union json.RawMessage
}
type PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies_1_Vars struct {
	union json.RawMessage
}
type PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies struct {
	union json.RawMessage
}
type PutFleetAgentPoliciesAgentpolicyid200ItemStatus string

// Status returns HTTPResponse.Status
func (r PutFleetAgentPoliciesAgentpolicyidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PutFleetAgentPoliciesAgentpolicyidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetEnrollmentApiKeysResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Items []struct {
			// Active When false, the enrollment API key is revoked and cannot be used for enrolling Elastic Agents.
			Active bool `json:"active"`

			// ApiKey The enrollment API key (token) used for enrolling Elastic Agents.
			ApiKey string `json:"api_key"`

			// ApiKeyId The ID of the API key in the Security API.
			ApiKeyId  string `json:"api_key_id"`
			CreatedAt string `json:"created_at"`
			Hidden    *bool  `json:"hidden,omitempty"`
			Id        string `json:"id"`

			// Name The name of the enrollment API key.
			Name *string `json:"name,omitempty"`

			// PolicyId The ID of the agent policy the Elastic Agent will be enrolled in.
			PolicyId *string `json:"policy_id,omitempty"`
		} `json:"items"`
		// Deprecated:
		List []struct {
			// Active When false, the enrollment API key is revoked and cannot be used for enrolling Elastic Agents.
			Active bool `json:"active"`

			// ApiKey The enrollment API key (token) used for enrolling Elastic Agents.
			ApiKey string `json:"api_key"`

			// ApiKeyId The ID of the API key in the Security API.
			ApiKeyId  string `json:"api_key_id"`
			CreatedAt string `json:"created_at"`
			Hidden    *bool  `json:"hidden,omitempty"`
			Id        string `json:"id"`

			// Name The name of the enrollment API key.
			Name *string `json:"name,omitempty"`

			// PolicyId The ID of the agent policy the Elastic Agent will be enrolled in.
			PolicyId *string `json:"policy_id,omitempty"`
		} `json:"list"`
		Page    float32 `json:"page"`
		PerPage float32 `json:"perPage"`
		Total   float32 `json:"total"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r GetFleetEnrollmentApiKeysResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetEnrollmentApiKeysResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetEpmPackagesResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Items []GetFleetEpmPackages_200_Items_Item `json:"items"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type GetFleetEpmPackages_200_Items_Conditions_Elastic struct {
	Capabilities         *[]string              `json:"capabilities,omitempty"`
	Subscription         *string                `json:"subscription,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackages_200_Items_Conditions_Kibana struct {
	Version              *string                `json:"version,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackages_200_Items_Conditions struct {
	Elastic              *GetFleetEpmPackages_200_Items_Conditions_Elastic `json:"elastic,omitempty"`
	Kibana               *GetFleetEpmPackages_200_Items_Conditions_Kibana  `json:"kibana,omitempty"`
	AdditionalProperties map[string]interface{}                            `json:"-"`
}
type GetFleetEpmPackages_200_Items_Discovery_Fields_Item struct {
	Name                 string                 `json:"name"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackages_200_Items_Discovery struct {
	Fields               *[]GetFleetEpmPackages_200_Items_Discovery_Fields_Item `json:"fields,omitempty"`
	AdditionalProperties map[string]interface{}                                 `json:"-"`
}
type GetFleetEpmPackages_200_Items_Icons_Item struct {
	DarkMode             *bool                  `json:"dark_mode,omitempty"`
	Path                 *string                `json:"path,omitempty"`
	Size                 *string                `json:"size,omitempty"`
	Src                  string                 `json:"src"`
	Title                *string                `json:"title,omitempty"`
	Type                 *string                `json:"type,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackages200ItemsInstallationInfoAdditionalSpacesInstalledKibanaType0 string
type GetFleetEpmPackages200ItemsInstallationInfoAdditionalSpacesInstalledKibanaType1 = string
type GetFleetEpmPackages_200_Items_InstallationInfo_AdditionalSpacesInstalledKibana_Type struct {
	union json.RawMessage
}
type GetFleetEpmPackages_200_Items_InstallationInfo_AdditionalSpacesInstalledKibana_Item struct {
	Id                   string                                                                              `json:"id"`
	OriginId             *string                                                                             `json:"originId,omitempty"`
	Type                 GetFleetEpmPackages_200_Items_InstallationInfo_AdditionalSpacesInstalledKibana_Type `json:"type"`
	AdditionalProperties map[string]interface{}                                                              `json:"-"`
}
type GetFleetEpmPackages_200_Items_InstallationInfo_ExperimentalDataStreamFeatures_Features struct {
	DocValueOnlyNumeric  *bool                  `json:"doc_value_only_numeric,omitempty"`
	DocValueOnlyOther    *bool                  `json:"doc_value_only_other,omitempty"`
	SyntheticSource      *bool                  `json:"synthetic_source,omitempty"`
	Tsdb                 *bool                  `json:"tsdb,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackages_200_Items_InstallationInfo_ExperimentalDataStreamFeatures_Item struct {
	DataStream           string                                                                                 `json:"data_stream"`
	Features             GetFleetEpmPackages_200_Items_InstallationInfo_ExperimentalDataStreamFeatures_Features `json:"features"`
	AdditionalProperties map[string]interface{}                                                                 `json:"-"`
}
type GetFleetEpmPackages200ItemsInstallationInfoInstallSource string
type GetFleetEpmPackages200ItemsInstallationInfoInstallStatus string
type GetFleetEpmPackages200ItemsInstallationInfoInstalledEsType string
type GetFleetEpmPackages_200_Items_InstallationInfo_InstalledEs_Item struct {
	Deferred             *bool                                                      `json:"deferred,omitempty"`
	Id                   string                                                     `json:"id"`
	Type                 GetFleetEpmPackages200ItemsInstallationInfoInstalledEsType `json:"type"`
	Version              *string                                                    `json:"version,omitempty"`
	AdditionalProperties map[string]interface{}                                     `json:"-"`
}
type GetFleetEpmPackages200ItemsInstallationInfoInstalledKibanaType0 string
type GetFleetEpmPackages200ItemsInstallationInfoInstalledKibanaType1 = string
type GetFleetEpmPackages_200_Items_InstallationInfo_InstalledKibana_Type struct {
	union json.RawMessage
}
type GetFleetEpmPackages_200_Items_InstallationInfo_InstalledKibana_Item struct {
	Id                   string                                                              `json:"id"`
	OriginId             *string                                                             `json:"originId,omitempty"`
	Type                 GetFleetEpmPackages_200_Items_InstallationInfo_InstalledKibana_Type `json:"type"`
	AdditionalProperties map[string]interface{}                                              `json:"-"`
}
type GetFleetEpmPackages_200_Items_InstallationInfo_LatestExecutedState struct {
	Error                *string                `json:"error,omitempty"`
	Name                 *string                `json:"name,omitempty"`
	StartedAt            *string                `json:"started_at,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackages_200_Items_InstallationInfo_LatestInstallFailedAttempts_Error struct {
	Message              string                 `json:"message"`
	Name                 string                 `json:"name"`
	Stack                *string                `json:"stack,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackages_200_Items_InstallationInfo_LatestInstallFailedAttempts_Item struct {
	CreatedAt            string                                                                           `json:"created_at"`
	Error                GetFleetEpmPackages_200_Items_InstallationInfo_LatestInstallFailedAttempts_Error `json:"error"`
	TargetVersion        string                                                                           `json:"target_version"`
	AdditionalProperties map[string]interface{}                                                           `json:"-"`
}
type GetFleetEpmPackages200ItemsInstallationInfoVerificationStatus string
type GetFleetEpmPackages_200_Items_InstallationInfo struct {
	AdditionalSpacesInstalledKibana *map[string][]GetFleetEpmPackages_200_Items_InstallationInfo_AdditionalSpacesInstalledKibana_Item `json:"additional_spaces_installed_kibana,omitempty"`
	CreatedAt                       *string                                                                                           `json:"created_at,omitempty"`
	ExperimentalDataStreamFeatures  *[]GetFleetEpmPackages_200_Items_InstallationInfo_ExperimentalDataStreamFeatures_Item             `json:"experimental_data_stream_features,omitempty"`
	InstallFormatSchemaVersion      *string                                                                                           `json:"install_format_schema_version,omitempty"`
	InstallSource                   GetFleetEpmPackages200ItemsInstallationInfoInstallSource                                          `json:"install_source"`
	InstallStatus                   GetFleetEpmPackages200ItemsInstallationInfoInstallStatus                                          `json:"install_status"`
	InstalledEs                     []GetFleetEpmPackages_200_Items_InstallationInfo_InstalledEs_Item                                 `json:"installed_es"`
	InstalledKibana                 []GetFleetEpmPackages_200_Items_InstallationInfo_InstalledKibana_Item                             `json:"installed_kibana"`
	InstalledKibanaSpaceId          *string                                                                                           `json:"installed_kibana_space_id,omitempty"`
	LatestExecutedState             *GetFleetEpmPackages_200_Items_InstallationInfo_LatestExecutedState                               `json:"latest_executed_state,omitempty"`
	LatestInstallFailedAttempts     *[]GetFleetEpmPackages_200_Items_InstallationInfo_LatestInstallFailedAttempts_Item                `json:"latest_install_failed_attempts,omitempty"`
	Name                            string                                                                                            `json:"name"`
	Namespaces                      *[]string                                                                                         `json:"namespaces,omitempty"`
	Type                            string                                                                                            `json:"type"`
	UpdatedAt                       *string                                                                                           `json:"updated_at,omitempty"`
	VerificationKeyId               *string                                                                                           `json:"verification_key_id,omitempty"`
	VerificationStatus              GetFleetEpmPackages200ItemsInstallationInfoVerificationStatus                                     `json:"verification_status"`
	Version                         string                                                                                            `json:"version"`
	AdditionalProperties            map[string]interface{}                                                                            `json:"-"`
}
type GetFleetEpmPackages200ItemsOwnerType string
type GetFleetEpmPackages_200_Items_Owner struct {
	Github               *string                               `json:"github,omitempty"`
	Type                 *GetFleetEpmPackages200ItemsOwnerType `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}                `json:"-"`
}
type GetFleetEpmPackages200ItemsRelease string
type GetFleetEpmPackages_200_Items_Source struct {
	License              string                 `json:"license"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackages200ItemsType0 string
type GetFleetEpmPackages200ItemsType1 string
type GetFleetEpmPackages200ItemsType2 string
type GetFleetEpmPackages200ItemsType3 = string
type GetFleetEpmPackages_200_Items_Type struct {
	union json.RawMessage
}
type GetFleetEpmPackages_200_Items_Item struct {
	Categories           *[]string                                       `json:"categories,omitempty"`
	Conditions           *GetFleetEpmPackages_200_Items_Conditions       `json:"conditions,omitempty"`
	DataStreams          *[]map[string]interface{}                       `json:"data_streams,omitempty"`
	Description          *string                                         `json:"description,omitempty"`
	Discovery            *GetFleetEpmPackages_200_Items_Discovery        `json:"discovery,omitempty"`
	Download             *string                                         `json:"download,omitempty"`
	FormatVersion        *string                                         `json:"format_version,omitempty"`
	Icons                *[]GetFleetEpmPackages_200_Items_Icons_Item     `json:"icons,omitempty"`
	Id                   string                                          `json:"id"`
	InstallationInfo     *GetFleetEpmPackages_200_Items_InstallationInfo `json:"installationInfo,omitempty"`
	Integration          *string                                         `json:"integration,omitempty"`
	Internal             *bool                                           `json:"internal,omitempty"`
	LatestVersion        *string                                         `json:"latestVersion,omitempty"`
	Name                 string                                          `json:"name"`
	Owner                *GetFleetEpmPackages_200_Items_Owner            `json:"owner,omitempty"`
	Path                 *string                                         `json:"path,omitempty"`
	PolicyTemplates      *[]map[string]interface{}                       `json:"policy_templates,omitempty"`
	Readme               *string                                         `json:"readme,omitempty"`
	Release              *GetFleetEpmPackages200ItemsRelease             `json:"release,omitempty"`
	SignaturePath        *string                                         `json:"signature_path,omitempty"`
	Source               *GetFleetEpmPackages_200_Items_Source           `json:"source,omitempty"`
	Status               *string                                         `json:"status,omitempty"`
	Title                string                                          `json:"title"`
	Type                 *GetFleetEpmPackages_200_Items_Type             `json:"type,omitempty"`
	Vars                 *[]map[string]interface{}                       `json:"vars,omitempty"`
	Version              string                                          `json:"version"`
	AdditionalProperties map[string]interface{}                          `json:"-"`
}

// Status returns HTTPResponse.Status
func (r GetFleetEpmPackagesResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetEpmPackagesResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostFleetEpmPackagesResponse struct {
	Body         []byte
	HTTPResponse *http.Response
}

// Status returns HTTPResponse.Status
func (r PostFleetEpmPackagesResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostFleetEpmPackagesResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteFleetEpmPackagesPkgnamePkgversionResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Items []DeleteFleetEpmPackagesPkgnamePkgversion_200_Items_Item `json:"items"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type DeleteFleetEpmPackagesPkgnamePkgversion200Items0 struct {
	Id       string                                                   `json:"id"`
	OriginId *string                                                  `json:"originId,omitempty"`
	Type     DeleteFleetEpmPackagesPkgnamePkgversion_200_Items_0_Type `json:"type"`
}
type DeleteFleetEpmPackagesPkgnamePkgversion200Items0Type0 string
type DeleteFleetEpmPackagesPkgnamePkgversion200Items0Type1 = string
type DeleteFleetEpmPackagesPkgnamePkgversion_200_Items_0_Type struct {
	union json.RawMessage
}
type DeleteFleetEpmPackagesPkgnamePkgversion200Items1 struct {
	Deferred *bool                                                `json:"deferred,omitempty"`
	Id       string                                               `json:"id"`
	Type     DeleteFleetEpmPackagesPkgnamePkgversion200Items1Type `json:"type"`
	Version  *string                                              `json:"version,omitempty"`
}
type DeleteFleetEpmPackagesPkgnamePkgversion200Items1Type string
type DeleteFleetEpmPackagesPkgnamePkgversion_200_Items_Item struct {
	union json.RawMessage
}

// Status returns HTTPResponse.Status
func (r DeleteFleetEpmPackagesPkgnamePkgversionResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteFleetEpmPackagesPkgnamePkgversionResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetEpmPackagesPkgnamePkgversionResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item     GetFleetEpmPackagesPkgnamePkgversion_200_Item `json:"item"`
		Metadata *struct {
			HasPolicies bool `json:"has_policies"`
		} `json:"metadata,omitempty"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_Conditions_Elastic struct {
	Capabilities         *[]string              `json:"capabilities,omitempty"`
	Subscription         *string                `json:"subscription,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_Conditions_Kibana struct {
	Version              *string                `json:"version,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_Conditions struct {
	Elastic              *GetFleetEpmPackagesPkgnamePkgversion_200_Item_Conditions_Elastic `json:"elastic,omitempty"`
	Kibana               *GetFleetEpmPackagesPkgnamePkgversion_200_Item_Conditions_Kibana  `json:"kibana,omitempty"`
	AdditionalProperties map[string]interface{}                                            `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_Discovery_Fields_Item struct {
	Name                 string                 `json:"name"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_Discovery struct {
	Fields               *[]GetFleetEpmPackagesPkgnamePkgversion_200_Item_Discovery_Fields_Item `json:"fields,omitempty"`
	AdditionalProperties map[string]interface{}                                                 `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_Icons_Item struct {
	DarkMode             *bool                  `json:"dark_mode,omitempty"`
	Path                 *string                `json:"path,omitempty"`
	Size                 *string                `json:"size,omitempty"`
	Src                  string                 `json:"src"`
	Title                *string                `json:"title,omitempty"`
	Type                 *string                `json:"type,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoAdditionalSpacesInstalledKibanaType0 string
type GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoAdditionalSpacesInstalledKibanaType1 = string
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_AdditionalSpacesInstalledKibana_Type struct {
	union json.RawMessage
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_AdditionalSpacesInstalledKibana_Item struct {
	Id                   string                                                                                              `json:"id"`
	OriginId             *string                                                                                             `json:"originId,omitempty"`
	Type                 GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_AdditionalSpacesInstalledKibana_Type `json:"type"`
	AdditionalProperties map[string]interface{}                                                                              `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_ExperimentalDataStreamFeatures_Features struct {
	DocValueOnlyNumeric  *bool                  `json:"doc_value_only_numeric,omitempty"`
	DocValueOnlyOther    *bool                  `json:"doc_value_only_other,omitempty"`
	SyntheticSource      *bool                  `json:"synthetic_source,omitempty"`
	Tsdb                 *bool                  `json:"tsdb,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_ExperimentalDataStreamFeatures_Item struct {
	DataStream           string                                                                                                 `json:"data_stream"`
	Features             GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_ExperimentalDataStreamFeatures_Features `json:"features"`
	AdditionalProperties map[string]interface{}                                                                                 `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoInstallSource string
type GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoInstallStatus string
type GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoInstalledEsType string
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_InstalledEs_Item struct {
	Deferred             *bool                                                                      `json:"deferred,omitempty"`
	Id                   string                                                                     `json:"id"`
	Type                 GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoInstalledEsType `json:"type"`
	Version              *string                                                                    `json:"version,omitempty"`
	AdditionalProperties map[string]interface{}                                                     `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoInstalledKibanaType0 string
type GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoInstalledKibanaType1 = string
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_InstalledKibana_Type struct {
	union json.RawMessage
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_InstalledKibana_Item struct {
	Id                   string                                                                              `json:"id"`
	OriginId             *string                                                                             `json:"originId,omitempty"`
	Type                 GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_InstalledKibana_Type `json:"type"`
	AdditionalProperties map[string]interface{}                                                              `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_LatestExecutedState struct {
	Error                *string                `json:"error,omitempty"`
	Name                 *string                `json:"name,omitempty"`
	StartedAt            *string                `json:"started_at,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_LatestInstallFailedAttempts_Error struct {
	Message              string                 `json:"message"`
	Name                 string                 `json:"name"`
	Stack                *string                `json:"stack,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_LatestInstallFailedAttempts_Item struct {
	CreatedAt            string                                                                                           `json:"created_at"`
	Error                GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_LatestInstallFailedAttempts_Error `json:"error"`
	TargetVersion        string                                                                                           `json:"target_version"`
	AdditionalProperties map[string]interface{}                                                                           `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoVerificationStatus string
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo struct {
	AdditionalSpacesInstalledKibana *map[string][]GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_AdditionalSpacesInstalledKibana_Item `json:"additional_spaces_installed_kibana,omitempty"`
	CreatedAt                       *string                                                                                                           `json:"created_at,omitempty"`
	ExperimentalDataStreamFeatures  *[]GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_ExperimentalDataStreamFeatures_Item             `json:"experimental_data_stream_features,omitempty"`
	InstallFormatSchemaVersion      *string                                                                                                           `json:"install_format_schema_version,omitempty"`
	InstallSource                   GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoInstallSource                                          `json:"install_source"`
	InstallStatus                   GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoInstallStatus                                          `json:"install_status"`
	InstalledEs                     []GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_InstalledEs_Item                                 `json:"installed_es"`
	InstalledKibana                 []GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_InstalledKibana_Item                             `json:"installed_kibana"`
	InstalledKibanaSpaceId          *string                                                                                                           `json:"installed_kibana_space_id,omitempty"`
	LatestExecutedState             *GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_LatestExecutedState                               `json:"latest_executed_state,omitempty"`
	LatestInstallFailedAttempts     *[]GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo_LatestInstallFailedAttempts_Item                `json:"latest_install_failed_attempts,omitempty"`
	Name                            string                                                                                                            `json:"name"`
	Namespaces                      *[]string                                                                                                         `json:"namespaces,omitempty"`
	Type                            string                                                                                                            `json:"type"`
	UpdatedAt                       *string                                                                                                           `json:"updated_at,omitempty"`
	VerificationKeyId               *string                                                                                                           `json:"verification_key_id,omitempty"`
	VerificationStatus              GetFleetEpmPackagesPkgnamePkgversion200ItemInstallationInfoVerificationStatus                                     `json:"verification_status"`
	Version                         string                                                                                                            `json:"version"`
	AdditionalProperties            map[string]interface{}                                                                                            `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion200ItemOwnerType string
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_Owner struct {
	Github               *string                                               `json:"github,omitempty"`
	Type                 *GetFleetEpmPackagesPkgnamePkgversion200ItemOwnerType `json:"type,omitempty"`
	AdditionalProperties map[string]interface{}                                `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion200ItemRelease string
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_Source struct {
	License              string                 `json:"license"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetEpmPackagesPkgnamePkgversion200ItemType0 string
type GetFleetEpmPackagesPkgnamePkgversion200ItemType1 string
type GetFleetEpmPackagesPkgnamePkgversion200ItemType2 string
type GetFleetEpmPackagesPkgnamePkgversion200ItemType3 = string
type GetFleetEpmPackagesPkgnamePkgversion_200_Item_Type struct {
	union json.RawMessage
}
type GetFleetEpmPackagesPkgnamePkgversion_200_Item struct {
	Agent *struct {
		Privileges *struct {
			Root *bool `json:"root,omitempty"`
		} `json:"privileges,omitempty"`
	} `json:"agent,omitempty"`
	AssetTags *[]struct {
		AssetIds   *[]string `json:"asset_ids,omitempty"`
		AssetTypes *[]string `json:"asset_types,omitempty"`
		Text       string    `json:"text"`
	} `json:"asset_tags,omitempty"`
	Assets               map[string]interface{}                                          `json:"assets"`
	Categories           *[]string                                                       `json:"categories,omitempty"`
	Conditions           *GetFleetEpmPackagesPkgnamePkgversion_200_Item_Conditions       `json:"conditions,omitempty"`
	DataStreams          *[]map[string]interface{}                                       `json:"data_streams,omitempty"`
	Description          *string                                                         `json:"description,omitempty"`
	Discovery            *GetFleetEpmPackagesPkgnamePkgversion_200_Item_Discovery        `json:"discovery,omitempty"`
	Download             *string                                                         `json:"download,omitempty"`
	Elasticsearch        *map[string]interface{}                                         `json:"elasticsearch,omitempty"`
	FormatVersion        *string                                                         `json:"format_version,omitempty"`
	Icons                *[]GetFleetEpmPackagesPkgnamePkgversion_200_Item_Icons_Item     `json:"icons,omitempty"`
	InstallationInfo     *GetFleetEpmPackagesPkgnamePkgversion_200_Item_InstallationInfo `json:"installationInfo,omitempty"`
	Internal             *bool                                                           `json:"internal,omitempty"`
	KeepPoliciesUpToDate *bool                                                           `json:"keepPoliciesUpToDate,omitempty"`
	LatestVersion        *string                                                         `json:"latestVersion,omitempty"`
	License              *string                                                         `json:"license,omitempty"`
	LicensePath          *string                                                         `json:"licensePath,omitempty"`
	Name                 string                                                          `json:"name"`
	Notice               *string                                                         `json:"notice,omitempty"`
	Owner                *GetFleetEpmPackagesPkgnamePkgversion_200_Item_Owner            `json:"owner,omitempty"`
	Path                 *string                                                         `json:"path,omitempty"`
	PolicyTemplates      *[]map[string]interface{}                                       `json:"policy_templates,omitempty"`
	Readme               *string                                                         `json:"readme,omitempty"`
	Release              *GetFleetEpmPackagesPkgnamePkgversion200ItemRelease             `json:"release,omitempty"`
	Screenshots          *[]struct {
		DarkMode *bool   `json:"dark_mode,omitempty"`
		Path     *string `json:"path,omitempty"`
		Size     *string `json:"size,omitempty"`
		Src      string  `json:"src"`
		Title    *string `json:"title,omitempty"`
		Type     *string `json:"type,omitempty"`
	} `json:"screenshots,omitempty"`
	SignaturePath        *string                                               `json:"signature_path,omitempty"`
	Source               *GetFleetEpmPackagesPkgnamePkgversion_200_Item_Source `json:"source,omitempty"`
	Status               *string                                               `json:"status,omitempty"`
	Title                string                                                `json:"title"`
	Type                 *GetFleetEpmPackagesPkgnamePkgversion_200_Item_Type   `json:"type,omitempty"`
	Vars                 *[]map[string]interface{}                             `json:"vars,omitempty"`
	Version              string                                                `json:"version"`
	AdditionalProperties map[string]interface{}                                `json:"-"`
}

// Status returns HTTPResponse.Status
func (r GetFleetEpmPackagesPkgnamePkgversionResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetEpmPackagesPkgnamePkgversionResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostFleetEpmPackagesPkgnamePkgversionResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Meta struct {
			InstallSource string `json:"install_source"`
			Name          string `json:"name"`
		} `json:"_meta"`
		Items []PostFleetEpmPackagesPkgnamePkgversion_200_Items_Item `json:"items"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type PostFleetEpmPackagesPkgnamePkgversion200Items0 struct {
	Id       string                                                 `json:"id"`
	OriginId *string                                                `json:"originId,omitempty"`
	Type     PostFleetEpmPackagesPkgnamePkgversion_200_Items_0_Type `json:"type"`
}
type PostFleetEpmPackagesPkgnamePkgversion200Items0Type0 string
type PostFleetEpmPackagesPkgnamePkgversion200Items0Type1 = string
type PostFleetEpmPackagesPkgnamePkgversion_200_Items_0_Type struct {
	union json.RawMessage
}
type PostFleetEpmPackagesPkgnamePkgversion200Items1 struct {
	Deferred *bool                                              `json:"deferred,omitempty"`
	Id       string                                             `json:"id"`
	Type     PostFleetEpmPackagesPkgnamePkgversion200Items1Type `json:"type"`
	Version  *string                                            `json:"version,omitempty"`
}
type PostFleetEpmPackagesPkgnamePkgversion200Items1Type string
type PostFleetEpmPackagesPkgnamePkgversion_200_Items_Item struct {
	union json.RawMessage
}

// Status returns HTTPResponse.Status
func (r PostFleetEpmPackagesPkgnamePkgversionResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostFleetEpmPackagesPkgnamePkgversionResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetFleetServerHostsResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Items []struct {
			HostUrls        []string `json:"host_urls"`
			Id              string   `json:"id"`
			IsDefault       *bool    `json:"is_default,omitempty"`
			IsInternal      *bool    `json:"is_internal,omitempty"`
			IsPreconfigured *bool    `json:"is_preconfigured,omitempty"`
			Name            string   `json:"name"`
			ProxyId         *string  `json:"proxy_id,omitempty"`
			Secrets         *struct {
				Ssl *struct {
					EsKey *GetFleetFleetServerHosts_200_Items_Secrets_Ssl_EsKey `json:"es_key,omitempty"`
					Key   *GetFleetFleetServerHosts_200_Items_Secrets_Ssl_Key   `json:"key,omitempty"`
				} `json:"ssl,omitempty"`
			} `json:"secrets,omitempty"`
			Ssl *struct {
				Certificate              *string                                        `json:"certificate,omitempty"`
				CertificateAuthorities   *[]string                                      `json:"certificate_authorities,omitempty"`
				ClientAuth               *GetFleetFleetServerHosts200ItemsSslClientAuth `json:"client_auth,omitempty"`
				EsCertificate            *string                                        `json:"es_certificate,omitempty"`
				EsCertificateAuthorities *[]string                                      `json:"es_certificate_authorities,omitempty"`
				EsKey                    *string                                        `json:"es_key,omitempty"`
				Key                      *string                                        `json:"key,omitempty"`
			} `json:"ssl,omitempty"`
		} `json:"items"`
		Page    float32 `json:"page"`
		PerPage float32 `json:"perPage"`
		Total   float32 `json:"total"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type GetFleetFleetServerHosts200ItemsSecretsSslEsKey0 struct {
	Id string `json:"id"`
}
type GetFleetFleetServerHosts200ItemsSecretsSslEsKey1 = string
type GetFleetFleetServerHosts_200_Items_Secrets_Ssl_EsKey struct {
	union json.RawMessage
}
type GetFleetFleetServerHosts200ItemsSecretsSslKey0 struct {
	Id string `json:"id"`
}
type GetFleetFleetServerHosts200ItemsSecretsSslKey1 = string
type GetFleetFleetServerHosts_200_Items_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type GetFleetFleetServerHosts200ItemsSslClientAuth string

// Status returns HTTPResponse.Status
func (r GetFleetFleetServerHostsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetFleetServerHostsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostFleetFleetServerHostsResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item struct {
			HostUrls        []string `json:"host_urls"`
			Id              string   `json:"id"`
			IsDefault       *bool    `json:"is_default,omitempty"`
			IsInternal      *bool    `json:"is_internal,omitempty"`
			IsPreconfigured *bool    `json:"is_preconfigured,omitempty"`
			Name            string   `json:"name"`
			ProxyId         *string  `json:"proxy_id,omitempty"`
			Secrets         *struct {
				Ssl *struct {
					EsKey *PostFleetFleetServerHosts_200_Item_Secrets_Ssl_EsKey `json:"es_key,omitempty"`
					Key   *PostFleetFleetServerHosts_200_Item_Secrets_Ssl_Key   `json:"key,omitempty"`
				} `json:"ssl,omitempty"`
			} `json:"secrets,omitempty"`
			Ssl *struct {
				Certificate              *string                                        `json:"certificate,omitempty"`
				CertificateAuthorities   *[]string                                      `json:"certificate_authorities,omitempty"`
				ClientAuth               *PostFleetFleetServerHosts200ItemSslClientAuth `json:"client_auth,omitempty"`
				EsCertificate            *string                                        `json:"es_certificate,omitempty"`
				EsCertificateAuthorities *[]string                                      `json:"es_certificate_authorities,omitempty"`
				EsKey                    *string                                        `json:"es_key,omitempty"`
				Key                      *string                                        `json:"key,omitempty"`
			} `json:"ssl,omitempty"`
		} `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type PostFleetFleetServerHosts200ItemSecretsSslEsKey0 struct {
	Id string `json:"id"`
}
type PostFleetFleetServerHosts200ItemSecretsSslEsKey1 = string
type PostFleetFleetServerHosts_200_Item_Secrets_Ssl_EsKey struct {
	union json.RawMessage
}
type PostFleetFleetServerHosts200ItemSecretsSslKey0 struct {
	Id string `json:"id"`
}
type PostFleetFleetServerHosts200ItemSecretsSslKey1 = string
type PostFleetFleetServerHosts_200_Item_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type PostFleetFleetServerHosts200ItemSslClientAuth string

// Status returns HTTPResponse.Status
func (r PostFleetFleetServerHostsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostFleetFleetServerHostsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteFleetFleetServerHostsItemidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Id string `json:"id"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r DeleteFleetFleetServerHostsItemidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteFleetFleetServerHostsItemidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetFleetServerHostsItemidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item struct {
			HostUrls        []string `json:"host_urls"`
			Id              string   `json:"id"`
			IsDefault       *bool    `json:"is_default,omitempty"`
			IsInternal      *bool    `json:"is_internal,omitempty"`
			IsPreconfigured *bool    `json:"is_preconfigured,omitempty"`
			Name            string   `json:"name"`
			ProxyId         *string  `json:"proxy_id,omitempty"`
			Secrets         *struct {
				Ssl *struct {
					EsKey *GetFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_EsKey `json:"es_key,omitempty"`
					Key   *GetFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_Key   `json:"key,omitempty"`
				} `json:"ssl,omitempty"`
			} `json:"secrets,omitempty"`
			Ssl *struct {
				Certificate              *string                                             `json:"certificate,omitempty"`
				CertificateAuthorities   *[]string                                           `json:"certificate_authorities,omitempty"`
				ClientAuth               *GetFleetFleetServerHostsItemid200ItemSslClientAuth `json:"client_auth,omitempty"`
				EsCertificate            *string                                             `json:"es_certificate,omitempty"`
				EsCertificateAuthorities *[]string                                           `json:"es_certificate_authorities,omitempty"`
				EsKey                    *string                                             `json:"es_key,omitempty"`
				Key                      *string                                             `json:"key,omitempty"`
			} `json:"ssl,omitempty"`
		} `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type GetFleetFleetServerHostsItemid200ItemSecretsSslEsKey0 struct {
	Id string `json:"id"`
}
type GetFleetFleetServerHostsItemid200ItemSecretsSslEsKey1 = string
type GetFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_EsKey struct {
	union json.RawMessage
}
type GetFleetFleetServerHostsItemid200ItemSecretsSslKey0 struct {
	Id string `json:"id"`
}
type GetFleetFleetServerHostsItemid200ItemSecretsSslKey1 = string
type GetFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type GetFleetFleetServerHostsItemid200ItemSslClientAuth string

// Status returns HTTPResponse.Status
func (r GetFleetFleetServerHostsItemidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetFleetServerHostsItemidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PutFleetFleetServerHostsItemidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item struct {
			HostUrls        []string `json:"host_urls"`
			Id              string   `json:"id"`
			IsDefault       *bool    `json:"is_default,omitempty"`
			IsInternal      *bool    `json:"is_internal,omitempty"`
			IsPreconfigured *bool    `json:"is_preconfigured,omitempty"`
			Name            string   `json:"name"`
			ProxyId         *string  `json:"proxy_id,omitempty"`
			Secrets         *struct {
				Ssl *struct {
					EsKey *PutFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_EsKey `json:"es_key,omitempty"`
					Key   *PutFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_Key   `json:"key,omitempty"`
				} `json:"ssl,omitempty"`
			} `json:"secrets,omitempty"`
			Ssl *struct {
				Certificate              *string                                             `json:"certificate,omitempty"`
				CertificateAuthorities   *[]string                                           `json:"certificate_authorities,omitempty"`
				ClientAuth               *PutFleetFleetServerHostsItemid200ItemSslClientAuth `json:"client_auth,omitempty"`
				EsCertificate            *string                                             `json:"es_certificate,omitempty"`
				EsCertificateAuthorities *[]string                                           `json:"es_certificate_authorities,omitempty"`
				EsKey                    *string                                             `json:"es_key,omitempty"`
				Key                      *string                                             `json:"key,omitempty"`
			} `json:"ssl,omitempty"`
		} `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type PutFleetFleetServerHostsItemid200ItemSecretsSslEsKey0 struct {
	Id string `json:"id"`
}
type PutFleetFleetServerHostsItemid200ItemSecretsSslEsKey1 = string
type PutFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_EsKey struct {
	union json.RawMessage
}
type PutFleetFleetServerHostsItemid200ItemSecretsSslKey0 struct {
	Id string `json:"id"`
}
type PutFleetFleetServerHostsItemid200ItemSecretsSslKey1 = string
type PutFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type PutFleetFleetServerHostsItemid200ItemSslClientAuth string

// Status returns HTTPResponse.Status
func (r PutFleetFleetServerHostsItemidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PutFleetFleetServerHostsItemidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetOutputsResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Items   []GetFleetOutputs_200_Items_Item `json:"items"`
		Page    float32                          `json:"page"`
		PerPage float32                          `json:"perPage"`
		Total   float32                          `json:"total"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type GetFleetOutputs200Items0 struct {
	AllowEdit            *[]string                            `json:"allow_edit,omitempty"`
	CaSha256             *string                              `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                              `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                              `json:"config_yaml,omitempty"`
	Hosts                []string                             `json:"hosts"`
	Id                   *string                              `json:"id,omitempty"`
	IsDefault            *bool                                `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                `json:"is_preconfigured,omitempty"`
	Name                 string                               `json:"name"`
	Preset               *GetFleetOutputs200Items0Preset      `json:"preset,omitempty"`
	ProxyId              *string                              `json:"proxy_id,omitempty"`
	Secrets              *GetFleetOutputs_200_Items_0_Secrets `json:"secrets,omitempty"`
	Shipper              *GetFleetOutputs_200_Items_0_Shipper `json:"shipper,omitempty"`
	Ssl                  *GetFleetOutputs_200_Items_0_Ssl     `json:"ssl,omitempty"`
	Type                 GetFleetOutputs200Items0Type         `json:"type"`
	AdditionalProperties map[string]interface{}               `json:"-"`
}
type GetFleetOutputs200Items0Preset string
type GetFleetOutputs200Items0SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items0SecretsSslKey1 = string
type GetFleetOutputs_200_Items_0_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type GetFleetOutputs_200_Items_0_Secrets_Ssl struct {
	Key                  *GetFleetOutputs_200_Items_0_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                       `json:"-"`
}
type GetFleetOutputs_200_Items_0_Secrets struct {
	Ssl                  *GetFleetOutputs_200_Items_0_Secrets_Ssl `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                   `json:"-"`
}
type GetFleetOutputs_200_Items_0_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items0SslVerificationMode string
type GetFleetOutputs_200_Items_0_Ssl struct {
	Certificate            *string                                      `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                    `json:"certificate_authorities,omitempty"`
	Key                    *string                                      `json:"key,omitempty"`
	VerificationMode       *GetFleetOutputs200Items0SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                       `json:"-"`
}
type GetFleetOutputs200Items0Type string
type GetFleetOutputs200Items1 struct {
	AllowEdit                   *[]string                            `json:"allow_edit,omitempty"`
	CaSha256                    *string                              `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint        *string                              `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml                  *string                              `json:"config_yaml,omitempty"`
	Hosts                       []string                             `json:"hosts"`
	Id                          *string                              `json:"id,omitempty"`
	IsDefault                   *bool                                `json:"is_default,omitempty"`
	IsDefaultMonitoring         *bool                                `json:"is_default_monitoring,omitempty"`
	IsInternal                  *bool                                `json:"is_internal,omitempty"`
	IsPreconfigured             *bool                                `json:"is_preconfigured,omitempty"`
	KibanaApiKey                *string                              `json:"kibana_api_key,omitempty"`
	KibanaUrl                   *string                              `json:"kibana_url,omitempty"`
	Name                        string                               `json:"name"`
	Preset                      *GetFleetOutputs200Items1Preset      `json:"preset,omitempty"`
	ProxyId                     *string                              `json:"proxy_id,omitempty"`
	Secrets                     *GetFleetOutputs_200_Items_1_Secrets `json:"secrets,omitempty"`
	ServiceToken                *string                              `json:"service_token,omitempty"`
	Shipper                     *GetFleetOutputs_200_Items_1_Shipper `json:"shipper,omitempty"`
	Ssl                         *GetFleetOutputs_200_Items_1_Ssl     `json:"ssl,omitempty"`
	SyncIntegrations            *bool                                `json:"sync_integrations,omitempty"`
	SyncUninstalledIntegrations *bool                                `json:"sync_uninstalled_integrations,omitempty"`
	Type                        GetFleetOutputs200Items1Type         `json:"type"`
	AdditionalProperties        map[string]interface{}               `json:"-"`
}
type GetFleetOutputs200Items1Preset string
type GetFleetOutputs200Items1SecretsServiceToken0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items1SecretsServiceToken1 = string
type GetFleetOutputs_200_Items_1_Secrets_ServiceToken struct {
	union json.RawMessage
}
type GetFleetOutputs200Items1SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items1SecretsSslKey1 = string
type GetFleetOutputs_200_Items_1_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type GetFleetOutputs_200_Items_1_Secrets_Ssl struct {
	Key                  *GetFleetOutputs_200_Items_1_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                       `json:"-"`
}
type GetFleetOutputs_200_Items_1_Secrets struct {
	ServiceToken         *GetFleetOutputs_200_Items_1_Secrets_ServiceToken `json:"service_token,omitempty"`
	Ssl                  *GetFleetOutputs_200_Items_1_Secrets_Ssl          `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                            `json:"-"`
}
type GetFleetOutputs_200_Items_1_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items1SslVerificationMode string
type GetFleetOutputs_200_Items_1_Ssl struct {
	Certificate            *string                                      `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                    `json:"certificate_authorities,omitempty"`
	Key                    *string                                      `json:"key,omitempty"`
	VerificationMode       *GetFleetOutputs200Items1SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                       `json:"-"`
}
type GetFleetOutputs200Items1Type string
type GetFleetOutputs200Items2 struct {
	AllowEdit            *[]string                            `json:"allow_edit,omitempty"`
	CaSha256             *string                              `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                              `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                              `json:"config_yaml,omitempty"`
	Hosts                []string                             `json:"hosts"`
	Id                   *string                              `json:"id,omitempty"`
	IsDefault            *bool                                `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                `json:"is_preconfigured,omitempty"`
	Name                 string                               `json:"name"`
	ProxyId              *string                              `json:"proxy_id,omitempty"`
	Secrets              *GetFleetOutputs_200_Items_2_Secrets `json:"secrets,omitempty"`
	Shipper              *GetFleetOutputs_200_Items_2_Shipper `json:"shipper,omitempty"`
	Ssl                  *GetFleetOutputs_200_Items_2_Ssl     `json:"ssl,omitempty"`
	Type                 GetFleetOutputs200Items2Type         `json:"type"`
	AdditionalProperties map[string]interface{}               `json:"-"`
}
type GetFleetOutputs200Items2SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items2SecretsSslKey1 = string
type GetFleetOutputs_200_Items_2_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type GetFleetOutputs_200_Items_2_Secrets_Ssl struct {
	Key                  *GetFleetOutputs_200_Items_2_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                       `json:"-"`
}
type GetFleetOutputs_200_Items_2_Secrets struct {
	Ssl                  *GetFleetOutputs_200_Items_2_Secrets_Ssl `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                   `json:"-"`
}
type GetFleetOutputs_200_Items_2_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items2SslVerificationMode string
type GetFleetOutputs_200_Items_2_Ssl struct {
	Certificate            *string                                      `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                    `json:"certificate_authorities,omitempty"`
	Key                    *string                                      `json:"key,omitempty"`
	VerificationMode       *GetFleetOutputs200Items2SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                       `json:"-"`
}
type GetFleetOutputs200Items2Type string
type GetFleetOutputs200Items3 struct {
	AllowEdit            *[]string                                     `json:"allow_edit,omitempty"`
	AuthType             GetFleetOutputs200Items3AuthType              `json:"auth_type"`
	BrokerTimeout        *float32                                      `json:"broker_timeout,omitempty"`
	CaSha256             *string                                       `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                       `json:"ca_trusted_fingerprint,omitempty"`
	ClientId             *string                                       `json:"client_id,omitempty"`
	Compression          *GetFleetOutputs200Items3Compression          `json:"compression,omitempty"`
	CompressionLevel     *GetFleetOutputs_200_Items_3_CompressionLevel `json:"compression_level,omitempty"`
	ConfigYaml           *string                                       `json:"config_yaml,omitempty"`
	ConnectionType       *GetFleetOutputs_200_Items_3_ConnectionType   `json:"connection_type,omitempty"`
	Hash                 *GetFleetOutputs_200_Items_3_Hash             `json:"hash,omitempty"`
	Headers              *[]GetFleetOutputs_200_Items_3_Headers_Item   `json:"headers,omitempty"`
	Hosts                []string                                      `json:"hosts"`
	Id                   *string                                       `json:"id,omitempty"`
	IsDefault            *bool                                         `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                         `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                         `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                         `json:"is_preconfigured,omitempty"`
	Key                  *string                                       `json:"key,omitempty"`
	Name                 string                                        `json:"name"`
	Partition            *GetFleetOutputs200Items3Partition            `json:"partition,omitempty"`
	Password             *GetFleetOutputs_200_Items_3_Password         `json:"password,omitempty"`
	ProxyId              *string                                       `json:"proxy_id,omitempty"`
	Random               *GetFleetOutputs_200_Items_3_Random           `json:"random,omitempty"`
	RequiredAcks         *GetFleetOutputs200Items3RequiredAcks         `json:"required_acks,omitempty"`
	RoundRobin           *GetFleetOutputs_200_Items_3_RoundRobin       `json:"round_robin,omitempty"`
	Sasl                 *GetFleetOutputs_200_Items_3_Sasl             `json:"sasl,omitempty"`
	Secrets              *GetFleetOutputs_200_Items_3_Secrets          `json:"secrets,omitempty"`
	Shipper              *GetFleetOutputs_200_Items_3_Shipper          `json:"shipper,omitempty"`
	Ssl                  *GetFleetOutputs_200_Items_3_Ssl              `json:"ssl,omitempty"`
	Timeout              *float32                                      `json:"timeout,omitempty"`
	Topic                *string                                       `json:"topic,omitempty"`
	Type                 GetFleetOutputs200Items3Type                  `json:"type"`
	Username             *GetFleetOutputs_200_Items_3_Username         `json:"username,omitempty"`
	Version              *string                                       `json:"version,omitempty"`
	AdditionalProperties map[string]interface{}                        `json:"-"`
}
type GetFleetOutputs200Items3AuthType string
type GetFleetOutputs200Items3Compression string
type GetFleetOutputs200Items3CompressionLevel0 = []interface{}
type GetFleetOutputs200Items3CompressionLevel1 = bool
type GetFleetOutputs200Items3CompressionLevel2 = float32
type GetFleetOutputs200Items3CompressionLevel3 = map[string]interface{}
type GetFleetOutputs200Items3CompressionLevel4 = string
type GetFleetOutputs200Items3CompressionLevel0 = float32
type GetFleetOutputs200Items3CompressionLevel1 = interface{}
type GetFleetOutputs_200_Items_3_CompressionLevel struct {
	union json.RawMessage
}
type GetFleetOutputs200Items3ConnectionType0 = []interface{}
type GetFleetOutputs200Items3ConnectionType1 = bool
type GetFleetOutputs200Items3ConnectionType2 = float32
type GetFleetOutputs200Items3ConnectionType3 = map[string]interface{}
type GetFleetOutputs200Items3ConnectionType4 = string
type GetFleetOutputs200Items3ConnectionType0 string
type GetFleetOutputs200Items3ConnectionType1 = interface{}
type GetFleetOutputs_200_Items_3_ConnectionType struct {
	union json.RawMessage
}
type GetFleetOutputs_200_Items_3_Hash struct {
	Hash                 *string                `json:"hash,omitempty"`
	Random               *bool                  `json:"random,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputs_200_Items_3_Headers_Item struct {
	Key                  string                 `json:"key"`
	Value                string                 `json:"value"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items3Partition string
type GetFleetOutputs200Items3Password0 = []interface{}
type GetFleetOutputs200Items3Password1 = bool
type GetFleetOutputs200Items3Password2 = float32
type GetFleetOutputs200Items3Password3 = map[string]interface{}
type GetFleetOutputs200Items3Password4 = string
type GetFleetOutputs200Items3Password0 = interface{}
type GetFleetOutputs200Items3Password1 struct {
	union json.RawMessage
}
type GetFleetOutputs200Items3Password10 = []interface{}
type GetFleetOutputs200Items3Password11 = bool
type GetFleetOutputs200Items3Password12 = float32
type GetFleetOutputs200Items3Password13 = map[string]interface{}
type GetFleetOutputs200Items3Password14 = string
type GetFleetOutputs200Items3Password10 = string
type GetFleetOutputs200Items3Password11 = interface{}
type GetFleetOutputs_200_Items_3_Password struct {
	union json.RawMessage
}
type GetFleetOutputs_200_Items_3_Random struct {
	GroupEvents          *float32               `json:"group_events,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items3RequiredAcks int
type GetFleetOutputs_200_Items_3_RoundRobin struct {
	GroupEvents          *float32               `json:"group_events,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items3SaslMechanism string
type GetFleetOutputs_200_Items_3_Sasl struct {
	Mechanism            *GetFleetOutputs200Items3SaslMechanism `json:"mechanism,omitempty"`
	AdditionalProperties map[string]interface{}                 `json:"-"`
}
type GetFleetOutputs200Items3SecretsPassword0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items3SecretsPassword1 = string
type GetFleetOutputs_200_Items_3_Secrets_Password struct {
	union json.RawMessage
}
type GetFleetOutputs200Items3SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items3SecretsSslKey1 = string
type GetFleetOutputs_200_Items_3_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type GetFleetOutputs_200_Items_3_Secrets_Ssl struct {
	Key                  GetFleetOutputs_200_Items_3_Secrets_Ssl_Key `json:"key"`
	AdditionalProperties map[string]interface{}                      `json:"-"`
}
type GetFleetOutputs_200_Items_3_Secrets struct {
	Password             *GetFleetOutputs_200_Items_3_Secrets_Password `json:"password,omitempty"`
	Ssl                  *GetFleetOutputs_200_Items_3_Secrets_Ssl      `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                        `json:"-"`
}
type GetFleetOutputs_200_Items_3_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type GetFleetOutputs200Items3SslVerificationMode string
type GetFleetOutputs_200_Items_3_Ssl struct {
	Certificate            *string                                      `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                    `json:"certificate_authorities,omitempty"`
	Key                    *string                                      `json:"key,omitempty"`
	VerificationMode       *GetFleetOutputs200Items3SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                       `json:"-"`
}
type GetFleetOutputs200Items3Type string
type GetFleetOutputs200Items3Username0 = []interface{}
type GetFleetOutputs200Items3Username1 = bool
type GetFleetOutputs200Items3Username2 = float32
type GetFleetOutputs200Items3Username3 = map[string]interface{}
type GetFleetOutputs200Items3Username4 = string
type GetFleetOutputs200Items3Username0 = string
type GetFleetOutputs200Items3Username1 = interface{}
type GetFleetOutputs_200_Items_3_Username struct {
	union json.RawMessage
}
type GetFleetOutputs_200_Items_Item struct {
	union json.RawMessage
}

// Status returns HTTPResponse.Status
func (r GetFleetOutputsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetOutputsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostFleetOutputsResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item PostFleetOutputs_200_Item `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type PostFleetOutputs200Item0 struct {
	AllowEdit            *[]string                            `json:"allow_edit,omitempty"`
	CaSha256             *string                              `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                              `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                              `json:"config_yaml,omitempty"`
	Hosts                []string                             `json:"hosts"`
	Id                   *string                              `json:"id,omitempty"`
	IsDefault            *bool                                `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                `json:"is_preconfigured,omitempty"`
	Name                 string                               `json:"name"`
	Preset               *PostFleetOutputs200Item0Preset      `json:"preset,omitempty"`
	ProxyId              *string                              `json:"proxy_id,omitempty"`
	Secrets              *PostFleetOutputs_200_Item_0_Secrets `json:"secrets,omitempty"`
	Shipper              *PostFleetOutputs_200_Item_0_Shipper `json:"shipper,omitempty"`
	Ssl                  *PostFleetOutputs_200_Item_0_Ssl     `json:"ssl,omitempty"`
	Type                 PostFleetOutputs200Item0Type         `json:"type"`
	AdditionalProperties map[string]interface{}               `json:"-"`
}
type PostFleetOutputs200Item0Preset string
type PostFleetOutputs200Item0SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item0SecretsSslKey1 = string
type PostFleetOutputs_200_Item_0_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type PostFleetOutputs_200_Item_0_Secrets_Ssl struct {
	Key                  *PostFleetOutputs_200_Item_0_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                       `json:"-"`
}
type PostFleetOutputs_200_Item_0_Secrets struct {
	Ssl                  *PostFleetOutputs_200_Item_0_Secrets_Ssl `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                   `json:"-"`
}
type PostFleetOutputs_200_Item_0_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item0SslVerificationMode string
type PostFleetOutputs_200_Item_0_Ssl struct {
	Certificate            *string                                      `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                    `json:"certificate_authorities,omitempty"`
	Key                    *string                                      `json:"key,omitempty"`
	VerificationMode       *PostFleetOutputs200Item0SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                       `json:"-"`
}
type PostFleetOutputs200Item0Type string
type PostFleetOutputs200Item1 struct {
	AllowEdit                   *[]string                            `json:"allow_edit,omitempty"`
	CaSha256                    *string                              `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint        *string                              `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml                  *string                              `json:"config_yaml,omitempty"`
	Hosts                       []string                             `json:"hosts"`
	Id                          *string                              `json:"id,omitempty"`
	IsDefault                   *bool                                `json:"is_default,omitempty"`
	IsDefaultMonitoring         *bool                                `json:"is_default_monitoring,omitempty"`
	IsInternal                  *bool                                `json:"is_internal,omitempty"`
	IsPreconfigured             *bool                                `json:"is_preconfigured,omitempty"`
	KibanaApiKey                *string                              `json:"kibana_api_key,omitempty"`
	KibanaUrl                   *string                              `json:"kibana_url,omitempty"`
	Name                        string                               `json:"name"`
	Preset                      *PostFleetOutputs200Item1Preset      `json:"preset,omitempty"`
	ProxyId                     *string                              `json:"proxy_id,omitempty"`
	Secrets                     *PostFleetOutputs_200_Item_1_Secrets `json:"secrets,omitempty"`
	ServiceToken                *string                              `json:"service_token,omitempty"`
	Shipper                     *PostFleetOutputs_200_Item_1_Shipper `json:"shipper,omitempty"`
	Ssl                         *PostFleetOutputs_200_Item_1_Ssl     `json:"ssl,omitempty"`
	SyncIntegrations            *bool                                `json:"sync_integrations,omitempty"`
	SyncUninstalledIntegrations *bool                                `json:"sync_uninstalled_integrations,omitempty"`
	Type                        PostFleetOutputs200Item1Type         `json:"type"`
	AdditionalProperties        map[string]interface{}               `json:"-"`
}
type PostFleetOutputs200Item1Preset string
type PostFleetOutputs200Item1SecretsServiceToken0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item1SecretsServiceToken1 = string
type PostFleetOutputs_200_Item_1_Secrets_ServiceToken struct {
	union json.RawMessage
}
type PostFleetOutputs200Item1SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item1SecretsSslKey1 = string
type PostFleetOutputs_200_Item_1_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type PostFleetOutputs_200_Item_1_Secrets_Ssl struct {
	Key                  *PostFleetOutputs_200_Item_1_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                       `json:"-"`
}
type PostFleetOutputs_200_Item_1_Secrets struct {
	ServiceToken         *PostFleetOutputs_200_Item_1_Secrets_ServiceToken `json:"service_token,omitempty"`
	Ssl                  *PostFleetOutputs_200_Item_1_Secrets_Ssl          `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                            `json:"-"`
}
type PostFleetOutputs_200_Item_1_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item1SslVerificationMode string
type PostFleetOutputs_200_Item_1_Ssl struct {
	Certificate            *string                                      `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                    `json:"certificate_authorities,omitempty"`
	Key                    *string                                      `json:"key,omitempty"`
	VerificationMode       *PostFleetOutputs200Item1SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                       `json:"-"`
}
type PostFleetOutputs200Item1Type string
type PostFleetOutputs200Item2 struct {
	AllowEdit            *[]string                            `json:"allow_edit,omitempty"`
	CaSha256             *string                              `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                              `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                              `json:"config_yaml,omitempty"`
	Hosts                []string                             `json:"hosts"`
	Id                   *string                              `json:"id,omitempty"`
	IsDefault            *bool                                `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                `json:"is_preconfigured,omitempty"`
	Name                 string                               `json:"name"`
	ProxyId              *string                              `json:"proxy_id,omitempty"`
	Secrets              *PostFleetOutputs_200_Item_2_Secrets `json:"secrets,omitempty"`
	Shipper              *PostFleetOutputs_200_Item_2_Shipper `json:"shipper,omitempty"`
	Ssl                  *PostFleetOutputs_200_Item_2_Ssl     `json:"ssl,omitempty"`
	Type                 PostFleetOutputs200Item2Type         `json:"type"`
	AdditionalProperties map[string]interface{}               `json:"-"`
}
type PostFleetOutputs200Item2SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item2SecretsSslKey1 = string
type PostFleetOutputs_200_Item_2_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type PostFleetOutputs_200_Item_2_Secrets_Ssl struct {
	Key                  *PostFleetOutputs_200_Item_2_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                       `json:"-"`
}
type PostFleetOutputs_200_Item_2_Secrets struct {
	Ssl                  *PostFleetOutputs_200_Item_2_Secrets_Ssl `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                   `json:"-"`
}
type PostFleetOutputs_200_Item_2_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item2SslVerificationMode string
type PostFleetOutputs_200_Item_2_Ssl struct {
	Certificate            *string                                      `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                    `json:"certificate_authorities,omitempty"`
	Key                    *string                                      `json:"key,omitempty"`
	VerificationMode       *PostFleetOutputs200Item2SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                       `json:"-"`
}
type PostFleetOutputs200Item2Type string
type PostFleetOutputs200Item3 struct {
	AllowEdit            *[]string                                     `json:"allow_edit,omitempty"`
	AuthType             PostFleetOutputs200Item3AuthType              `json:"auth_type"`
	BrokerTimeout        *float32                                      `json:"broker_timeout,omitempty"`
	CaSha256             *string                                       `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                       `json:"ca_trusted_fingerprint,omitempty"`
	ClientId             *string                                       `json:"client_id,omitempty"`
	Compression          *PostFleetOutputs200Item3Compression          `json:"compression,omitempty"`
	CompressionLevel     *PostFleetOutputs_200_Item_3_CompressionLevel `json:"compression_level,omitempty"`
	ConfigYaml           *string                                       `json:"config_yaml,omitempty"`
	ConnectionType       *PostFleetOutputs_200_Item_3_ConnectionType   `json:"connection_type,omitempty"`
	Hash                 *PostFleetOutputs_200_Item_3_Hash             `json:"hash,omitempty"`
	Headers              *[]PostFleetOutputs_200_Item_3_Headers_Item   `json:"headers,omitempty"`
	Hosts                []string                                      `json:"hosts"`
	Id                   *string                                       `json:"id,omitempty"`
	IsDefault            *bool                                         `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                         `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                         `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                         `json:"is_preconfigured,omitempty"`
	Key                  *string                                       `json:"key,omitempty"`
	Name                 string                                        `json:"name"`
	Partition            *PostFleetOutputs200Item3Partition            `json:"partition,omitempty"`
	Password             *PostFleetOutputs_200_Item_3_Password         `json:"password,omitempty"`
	ProxyId              *string                                       `json:"proxy_id,omitempty"`
	Random               *PostFleetOutputs_200_Item_3_Random           `json:"random,omitempty"`
	RequiredAcks         *PostFleetOutputs200Item3RequiredAcks         `json:"required_acks,omitempty"`
	RoundRobin           *PostFleetOutputs_200_Item_3_RoundRobin       `json:"round_robin,omitempty"`
	Sasl                 *PostFleetOutputs_200_Item_3_Sasl             `json:"sasl,omitempty"`
	Secrets              *PostFleetOutputs_200_Item_3_Secrets          `json:"secrets,omitempty"`
	Shipper              *PostFleetOutputs_200_Item_3_Shipper          `json:"shipper,omitempty"`
	Ssl                  *PostFleetOutputs_200_Item_3_Ssl              `json:"ssl,omitempty"`
	Timeout              *float32                                      `json:"timeout,omitempty"`
	Topic                *string                                       `json:"topic,omitempty"`
	Type                 PostFleetOutputs200Item3Type                  `json:"type"`
	Username             *PostFleetOutputs_200_Item_3_Username         `json:"username,omitempty"`
	Version              *string                                       `json:"version,omitempty"`
	AdditionalProperties map[string]interface{}                        `json:"-"`
}
type PostFleetOutputs200Item3AuthType string
type PostFleetOutputs200Item3Compression string
type PostFleetOutputs200Item3CompressionLevel0 = []interface{}
type PostFleetOutputs200Item3CompressionLevel1 = bool
type PostFleetOutputs200Item3CompressionLevel2 = float32
type PostFleetOutputs200Item3CompressionLevel3 = map[string]interface{}
type PostFleetOutputs200Item3CompressionLevel4 = string
type PostFleetOutputs200Item3CompressionLevel0 = float32
type PostFleetOutputs200Item3CompressionLevel1 = interface{}
type PostFleetOutputs_200_Item_3_CompressionLevel struct {
	union json.RawMessage
}
type PostFleetOutputs200Item3ConnectionType0 = []interface{}
type PostFleetOutputs200Item3ConnectionType1 = bool
type PostFleetOutputs200Item3ConnectionType2 = float32
type PostFleetOutputs200Item3ConnectionType3 = map[string]interface{}
type PostFleetOutputs200Item3ConnectionType4 = string
type PostFleetOutputs200Item3ConnectionType0 string
type PostFleetOutputs200Item3ConnectionType1 = interface{}
type PostFleetOutputs_200_Item_3_ConnectionType struct {
	union json.RawMessage
}
type PostFleetOutputs_200_Item_3_Hash struct {
	Hash                 *string                `json:"hash,omitempty"`
	Random               *bool                  `json:"random,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetOutputs_200_Item_3_Headers_Item struct {
	Key                  string                 `json:"key"`
	Value                string                 `json:"value"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item3Partition string
type PostFleetOutputs200Item3Password0 = []interface{}
type PostFleetOutputs200Item3Password1 = bool
type PostFleetOutputs200Item3Password2 = float32
type PostFleetOutputs200Item3Password3 = map[string]interface{}
type PostFleetOutputs200Item3Password4 = string
type PostFleetOutputs200Item3Password0 = interface{}
type PostFleetOutputs200Item3Password1 struct {
	union json.RawMessage
}
type PostFleetOutputs200Item3Password10 = []interface{}
type PostFleetOutputs200Item3Password11 = bool
type PostFleetOutputs200Item3Password12 = float32
type PostFleetOutputs200Item3Password13 = map[string]interface{}
type PostFleetOutputs200Item3Password14 = string
type PostFleetOutputs200Item3Password10 = string
type PostFleetOutputs200Item3Password11 = interface{}
type PostFleetOutputs_200_Item_3_Password struct {
	union json.RawMessage
}
type PostFleetOutputs_200_Item_3_Random struct {
	GroupEvents          *float32               `json:"group_events,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item3RequiredAcks int
type PostFleetOutputs_200_Item_3_RoundRobin struct {
	GroupEvents          *float32               `json:"group_events,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item3SaslMechanism string
type PostFleetOutputs_200_Item_3_Sasl struct {
	Mechanism            *PostFleetOutputs200Item3SaslMechanism `json:"mechanism,omitempty"`
	AdditionalProperties map[string]interface{}                 `json:"-"`
}
type PostFleetOutputs200Item3SecretsPassword0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item3SecretsPassword1 = string
type PostFleetOutputs_200_Item_3_Secrets_Password struct {
	union json.RawMessage
}
type PostFleetOutputs200Item3SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item3SecretsSslKey1 = string
type PostFleetOutputs_200_Item_3_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type PostFleetOutputs_200_Item_3_Secrets_Ssl struct {
	Key                  PostFleetOutputs_200_Item_3_Secrets_Ssl_Key `json:"key"`
	AdditionalProperties map[string]interface{}                      `json:"-"`
}
type PostFleetOutputs_200_Item_3_Secrets struct {
	Password             *PostFleetOutputs_200_Item_3_Secrets_Password `json:"password,omitempty"`
	Ssl                  *PostFleetOutputs_200_Item_3_Secrets_Ssl      `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                        `json:"-"`
}
type PostFleetOutputs_200_Item_3_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type PostFleetOutputs200Item3SslVerificationMode string
type PostFleetOutputs_200_Item_3_Ssl struct {
	Certificate            *string                                      `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                    `json:"certificate_authorities,omitempty"`
	Key                    *string                                      `json:"key,omitempty"`
	VerificationMode       *PostFleetOutputs200Item3SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                       `json:"-"`
}
type PostFleetOutputs200Item3Type string
type PostFleetOutputs200Item3Username0 = []interface{}
type PostFleetOutputs200Item3Username1 = bool
type PostFleetOutputs200Item3Username2 = float32
type PostFleetOutputs200Item3Username3 = map[string]interface{}
type PostFleetOutputs200Item3Username4 = string
type PostFleetOutputs200Item3Username0 = string
type PostFleetOutputs200Item3Username1 = interface{}
type PostFleetOutputs_200_Item_3_Username struct {
	union json.RawMessage
}
type PostFleetOutputs_200_Item struct {
	union json.RawMessage
}

// Status returns HTTPResponse.Status
func (r PostFleetOutputsResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostFleetOutputsResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteFleetOutputsOutputidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Id string `json:"id"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
	JSON404 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r DeleteFleetOutputsOutputidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteFleetOutputsOutputidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetOutputsOutputidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item GetFleetOutputsOutputid_200_Item `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type GetFleetOutputsOutputid200Item0 struct {
	AllowEdit            *[]string                                   `json:"allow_edit,omitempty"`
	CaSha256             *string                                     `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                     `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                                     `json:"config_yaml,omitempty"`
	Hosts                []string                                    `json:"hosts"`
	Id                   *string                                     `json:"id,omitempty"`
	IsDefault            *bool                                       `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                       `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                       `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                       `json:"is_preconfigured,omitempty"`
	Name                 string                                      `json:"name"`
	Preset               *GetFleetOutputsOutputid200Item0Preset      `json:"preset,omitempty"`
	ProxyId              *string                                     `json:"proxy_id,omitempty"`
	Secrets              *GetFleetOutputsOutputid_200_Item_0_Secrets `json:"secrets,omitempty"`
	Shipper              *GetFleetOutputsOutputid_200_Item_0_Shipper `json:"shipper,omitempty"`
	Ssl                  *GetFleetOutputsOutputid_200_Item_0_Ssl     `json:"ssl,omitempty"`
	Type                 GetFleetOutputsOutputid200Item0Type         `json:"type"`
	AdditionalProperties map[string]interface{}                      `json:"-"`
}
type GetFleetOutputsOutputid200Item0Preset string
type GetFleetOutputsOutputid200Item0SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item0SecretsSslKey1 = string
type GetFleetOutputsOutputid_200_Item_0_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid_200_Item_0_Secrets_Ssl struct {
	Key                  *GetFleetOutputsOutputid_200_Item_0_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                              `json:"-"`
}
type GetFleetOutputsOutputid_200_Item_0_Secrets struct {
	Ssl                  *GetFleetOutputsOutputid_200_Item_0_Secrets_Ssl `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                          `json:"-"`
}
type GetFleetOutputsOutputid_200_Item_0_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item0SslVerificationMode string
type GetFleetOutputsOutputid_200_Item_0_Ssl struct {
	Certificate            *string                                             `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                           `json:"certificate_authorities,omitempty"`
	Key                    *string                                             `json:"key,omitempty"`
	VerificationMode       *GetFleetOutputsOutputid200Item0SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                              `json:"-"`
}
type GetFleetOutputsOutputid200Item0Type string
type GetFleetOutputsOutputid200Item1 struct {
	AllowEdit                   *[]string                                   `json:"allow_edit,omitempty"`
	CaSha256                    *string                                     `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint        *string                                     `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml                  *string                                     `json:"config_yaml,omitempty"`
	Hosts                       []string                                    `json:"hosts"`
	Id                          *string                                     `json:"id,omitempty"`
	IsDefault                   *bool                                       `json:"is_default,omitempty"`
	IsDefaultMonitoring         *bool                                       `json:"is_default_monitoring,omitempty"`
	IsInternal                  *bool                                       `json:"is_internal,omitempty"`
	IsPreconfigured             *bool                                       `json:"is_preconfigured,omitempty"`
	KibanaApiKey                *string                                     `json:"kibana_api_key,omitempty"`
	KibanaUrl                   *string                                     `json:"kibana_url,omitempty"`
	Name                        string                                      `json:"name"`
	Preset                      *GetFleetOutputsOutputid200Item1Preset      `json:"preset,omitempty"`
	ProxyId                     *string                                     `json:"proxy_id,omitempty"`
	Secrets                     *GetFleetOutputsOutputid_200_Item_1_Secrets `json:"secrets,omitempty"`
	ServiceToken                *string                                     `json:"service_token,omitempty"`
	Shipper                     *GetFleetOutputsOutputid_200_Item_1_Shipper `json:"shipper,omitempty"`
	Ssl                         *GetFleetOutputsOutputid_200_Item_1_Ssl     `json:"ssl,omitempty"`
	SyncIntegrations            *bool                                       `json:"sync_integrations,omitempty"`
	SyncUninstalledIntegrations *bool                                       `json:"sync_uninstalled_integrations,omitempty"`
	Type                        GetFleetOutputsOutputid200Item1Type         `json:"type"`
	AdditionalProperties        map[string]interface{}                      `json:"-"`
}
type GetFleetOutputsOutputid200Item1Preset string
type GetFleetOutputsOutputid200Item1SecretsServiceToken0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item1SecretsServiceToken1 = string
type GetFleetOutputsOutputid_200_Item_1_Secrets_ServiceToken struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid200Item1SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item1SecretsSslKey1 = string
type GetFleetOutputsOutputid_200_Item_1_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid_200_Item_1_Secrets_Ssl struct {
	Key                  *GetFleetOutputsOutputid_200_Item_1_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                              `json:"-"`
}
type GetFleetOutputsOutputid_200_Item_1_Secrets struct {
	ServiceToken         *GetFleetOutputsOutputid_200_Item_1_Secrets_ServiceToken `json:"service_token,omitempty"`
	Ssl                  *GetFleetOutputsOutputid_200_Item_1_Secrets_Ssl          `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                                   `json:"-"`
}
type GetFleetOutputsOutputid_200_Item_1_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item1SslVerificationMode string
type GetFleetOutputsOutputid_200_Item_1_Ssl struct {
	Certificate            *string                                             `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                           `json:"certificate_authorities,omitempty"`
	Key                    *string                                             `json:"key,omitempty"`
	VerificationMode       *GetFleetOutputsOutputid200Item1SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                              `json:"-"`
}
type GetFleetOutputsOutputid200Item1Type string
type GetFleetOutputsOutputid200Item2 struct {
	AllowEdit            *[]string                                   `json:"allow_edit,omitempty"`
	CaSha256             *string                                     `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                     `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                                     `json:"config_yaml,omitempty"`
	Hosts                []string                                    `json:"hosts"`
	Id                   *string                                     `json:"id,omitempty"`
	IsDefault            *bool                                       `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                       `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                       `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                       `json:"is_preconfigured,omitempty"`
	Name                 string                                      `json:"name"`
	ProxyId              *string                                     `json:"proxy_id,omitempty"`
	Secrets              *GetFleetOutputsOutputid_200_Item_2_Secrets `json:"secrets,omitempty"`
	Shipper              *GetFleetOutputsOutputid_200_Item_2_Shipper `json:"shipper,omitempty"`
	Ssl                  *GetFleetOutputsOutputid_200_Item_2_Ssl     `json:"ssl,omitempty"`
	Type                 GetFleetOutputsOutputid200Item2Type         `json:"type"`
	AdditionalProperties map[string]interface{}                      `json:"-"`
}
type GetFleetOutputsOutputid200Item2SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item2SecretsSslKey1 = string
type GetFleetOutputsOutputid_200_Item_2_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid_200_Item_2_Secrets_Ssl struct {
	Key                  *GetFleetOutputsOutputid_200_Item_2_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                              `json:"-"`
}
type GetFleetOutputsOutputid_200_Item_2_Secrets struct {
	Ssl                  *GetFleetOutputsOutputid_200_Item_2_Secrets_Ssl `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                          `json:"-"`
}
type GetFleetOutputsOutputid_200_Item_2_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item2SslVerificationMode string
type GetFleetOutputsOutputid_200_Item_2_Ssl struct {
	Certificate            *string                                             `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                           `json:"certificate_authorities,omitempty"`
	Key                    *string                                             `json:"key,omitempty"`
	VerificationMode       *GetFleetOutputsOutputid200Item2SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                              `json:"-"`
}
type GetFleetOutputsOutputid200Item2Type string
type GetFleetOutputsOutputid200Item3 struct {
	AllowEdit            *[]string                                            `json:"allow_edit,omitempty"`
	AuthType             GetFleetOutputsOutputid200Item3AuthType              `json:"auth_type"`
	BrokerTimeout        *float32                                             `json:"broker_timeout,omitempty"`
	CaSha256             *string                                              `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                              `json:"ca_trusted_fingerprint,omitempty"`
	ClientId             *string                                              `json:"client_id,omitempty"`
	Compression          *GetFleetOutputsOutputid200Item3Compression          `json:"compression,omitempty"`
	CompressionLevel     *GetFleetOutputsOutputid_200_Item_3_CompressionLevel `json:"compression_level,omitempty"`
	ConfigYaml           *string                                              `json:"config_yaml,omitempty"`
	ConnectionType       *GetFleetOutputsOutputid_200_Item_3_ConnectionType   `json:"connection_type,omitempty"`
	Hash                 *GetFleetOutputsOutputid_200_Item_3_Hash             `json:"hash,omitempty"`
	Headers              *[]GetFleetOutputsOutputid_200_Item_3_Headers_Item   `json:"headers,omitempty"`
	Hosts                []string                                             `json:"hosts"`
	Id                   *string                                              `json:"id,omitempty"`
	IsDefault            *bool                                                `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                                `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                                `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                                `json:"is_preconfigured,omitempty"`
	Key                  *string                                              `json:"key,omitempty"`
	Name                 string                                               `json:"name"`
	Partition            *GetFleetOutputsOutputid200Item3Partition            `json:"partition,omitempty"`
	Password             *GetFleetOutputsOutputid_200_Item_3_Password         `json:"password,omitempty"`
	ProxyId              *string                                              `json:"proxy_id,omitempty"`
	Random               *GetFleetOutputsOutputid_200_Item_3_Random           `json:"random,omitempty"`
	RequiredAcks         *GetFleetOutputsOutputid200Item3RequiredAcks         `json:"required_acks,omitempty"`
	RoundRobin           *GetFleetOutputsOutputid_200_Item_3_RoundRobin       `json:"round_robin,omitempty"`
	Sasl                 *GetFleetOutputsOutputid_200_Item_3_Sasl             `json:"sasl,omitempty"`
	Secrets              *GetFleetOutputsOutputid_200_Item_3_Secrets          `json:"secrets,omitempty"`
	Shipper              *GetFleetOutputsOutputid_200_Item_3_Shipper          `json:"shipper,omitempty"`
	Ssl                  *GetFleetOutputsOutputid_200_Item_3_Ssl              `json:"ssl,omitempty"`
	Timeout              *float32                                             `json:"timeout,omitempty"`
	Topic                *string                                              `json:"topic,omitempty"`
	Type                 GetFleetOutputsOutputid200Item3Type                  `json:"type"`
	Username             *GetFleetOutputsOutputid_200_Item_3_Username         `json:"username,omitempty"`
	Version              *string                                              `json:"version,omitempty"`
	AdditionalProperties map[string]interface{}                               `json:"-"`
}
type GetFleetOutputsOutputid200Item3AuthType string
type GetFleetOutputsOutputid200Item3Compression string
type GetFleetOutputsOutputid200Item3CompressionLevel0 = []interface{}
type GetFleetOutputsOutputid200Item3CompressionLevel1 = bool
type GetFleetOutputsOutputid200Item3CompressionLevel2 = float32
type GetFleetOutputsOutputid200Item3CompressionLevel3 = map[string]interface{}
type GetFleetOutputsOutputid200Item3CompressionLevel4 = string
type GetFleetOutputsOutputid200Item3CompressionLevel0 = float32
type GetFleetOutputsOutputid200Item3CompressionLevel1 = interface{}
type GetFleetOutputsOutputid_200_Item_3_CompressionLevel struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid200Item3ConnectionType0 = []interface{}
type GetFleetOutputsOutputid200Item3ConnectionType1 = bool
type GetFleetOutputsOutputid200Item3ConnectionType2 = float32
type GetFleetOutputsOutputid200Item3ConnectionType3 = map[string]interface{}
type GetFleetOutputsOutputid200Item3ConnectionType4 = string
type GetFleetOutputsOutputid200Item3ConnectionType0 string
type GetFleetOutputsOutputid200Item3ConnectionType1 = interface{}
type GetFleetOutputsOutputid_200_Item_3_ConnectionType struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid_200_Item_3_Hash struct {
	Hash                 *string                `json:"hash,omitempty"`
	Random               *bool                  `json:"random,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid_200_Item_3_Headers_Item struct {
	Key                  string                 `json:"key"`
	Value                string                 `json:"value"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item3Partition string
type GetFleetOutputsOutputid200Item3Password0 = []interface{}
type GetFleetOutputsOutputid200Item3Password1 = bool
type GetFleetOutputsOutputid200Item3Password2 = float32
type GetFleetOutputsOutputid200Item3Password3 = map[string]interface{}
type GetFleetOutputsOutputid200Item3Password4 = string
type GetFleetOutputsOutputid200Item3Password0 = interface{}
type GetFleetOutputsOutputid200Item3Password1 struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid200Item3Password10 = []interface{}
type GetFleetOutputsOutputid200Item3Password11 = bool
type GetFleetOutputsOutputid200Item3Password12 = float32
type GetFleetOutputsOutputid200Item3Password13 = map[string]interface{}
type GetFleetOutputsOutputid200Item3Password14 = string
type GetFleetOutputsOutputid200Item3Password10 = string
type GetFleetOutputsOutputid200Item3Password11 = interface{}
type GetFleetOutputsOutputid_200_Item_3_Password struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid_200_Item_3_Random struct {
	GroupEvents          *float32               `json:"group_events,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item3RequiredAcks int
type GetFleetOutputsOutputid_200_Item_3_RoundRobin struct {
	GroupEvents          *float32               `json:"group_events,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item3SaslMechanism string
type GetFleetOutputsOutputid_200_Item_3_Sasl struct {
	Mechanism            *GetFleetOutputsOutputid200Item3SaslMechanism `json:"mechanism,omitempty"`
	AdditionalProperties map[string]interface{}                        `json:"-"`
}
type GetFleetOutputsOutputid200Item3SecretsPassword0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item3SecretsPassword1 = string
type GetFleetOutputsOutputid_200_Item_3_Secrets_Password struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid200Item3SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item3SecretsSslKey1 = string
type GetFleetOutputsOutputid_200_Item_3_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid_200_Item_3_Secrets_Ssl struct {
	Key                  GetFleetOutputsOutputid_200_Item_3_Secrets_Ssl_Key `json:"key"`
	AdditionalProperties map[string]interface{}                             `json:"-"`
}
type GetFleetOutputsOutputid_200_Item_3_Secrets struct {
	Password             *GetFleetOutputsOutputid_200_Item_3_Secrets_Password `json:"password,omitempty"`
	Ssl                  *GetFleetOutputsOutputid_200_Item_3_Secrets_Ssl      `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                               `json:"-"`
}
type GetFleetOutputsOutputid_200_Item_3_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type GetFleetOutputsOutputid200Item3SslVerificationMode string
type GetFleetOutputsOutputid_200_Item_3_Ssl struct {
	Certificate            *string                                             `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                           `json:"certificate_authorities,omitempty"`
	Key                    *string                                             `json:"key,omitempty"`
	VerificationMode       *GetFleetOutputsOutputid200Item3SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                              `json:"-"`
}
type GetFleetOutputsOutputid200Item3Type string
type GetFleetOutputsOutputid200Item3Username0 = []interface{}
type GetFleetOutputsOutputid200Item3Username1 = bool
type GetFleetOutputsOutputid200Item3Username2 = float32
type GetFleetOutputsOutputid200Item3Username3 = map[string]interface{}
type GetFleetOutputsOutputid200Item3Username4 = string
type GetFleetOutputsOutputid200Item3Username0 = string
type GetFleetOutputsOutputid200Item3Username1 = interface{}
type GetFleetOutputsOutputid_200_Item_3_Username struct {
	union json.RawMessage
}
type GetFleetOutputsOutputid_200_Item struct {
	union json.RawMessage
}

// Status returns HTTPResponse.Status
func (r GetFleetOutputsOutputidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetOutputsOutputidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PutFleetOutputsOutputidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item PutFleetOutputsOutputid_200_Item `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type PutFleetOutputsOutputid200Item0 struct {
	AllowEdit            *[]string                                   `json:"allow_edit,omitempty"`
	CaSha256             *string                                     `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                     `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                                     `json:"config_yaml,omitempty"`
	Hosts                []string                                    `json:"hosts"`
	Id                   *string                                     `json:"id,omitempty"`
	IsDefault            *bool                                       `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                       `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                       `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                       `json:"is_preconfigured,omitempty"`
	Name                 string                                      `json:"name"`
	Preset               *PutFleetOutputsOutputid200Item0Preset      `json:"preset,omitempty"`
	ProxyId              *string                                     `json:"proxy_id,omitempty"`
	Secrets              *PutFleetOutputsOutputid_200_Item_0_Secrets `json:"secrets,omitempty"`
	Shipper              *PutFleetOutputsOutputid_200_Item_0_Shipper `json:"shipper,omitempty"`
	Ssl                  *PutFleetOutputsOutputid_200_Item_0_Ssl     `json:"ssl,omitempty"`
	Type                 PutFleetOutputsOutputid200Item0Type         `json:"type"`
	AdditionalProperties map[string]interface{}                      `json:"-"`
}
type PutFleetOutputsOutputid200Item0Preset string
type PutFleetOutputsOutputid200Item0SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item0SecretsSslKey1 = string
type PutFleetOutputsOutputid_200_Item_0_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid_200_Item_0_Secrets_Ssl struct {
	Key                  *PutFleetOutputsOutputid_200_Item_0_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                              `json:"-"`
}
type PutFleetOutputsOutputid_200_Item_0_Secrets struct {
	Ssl                  *PutFleetOutputsOutputid_200_Item_0_Secrets_Ssl `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                          `json:"-"`
}
type PutFleetOutputsOutputid_200_Item_0_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item0SslVerificationMode string
type PutFleetOutputsOutputid_200_Item_0_Ssl struct {
	Certificate            *string                                             `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                           `json:"certificate_authorities,omitempty"`
	Key                    *string                                             `json:"key,omitempty"`
	VerificationMode       *PutFleetOutputsOutputid200Item0SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                              `json:"-"`
}
type PutFleetOutputsOutputid200Item0Type string
type PutFleetOutputsOutputid200Item1 struct {
	AllowEdit                   *[]string                                   `json:"allow_edit,omitempty"`
	CaSha256                    *string                                     `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint        *string                                     `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml                  *string                                     `json:"config_yaml,omitempty"`
	Hosts                       []string                                    `json:"hosts"`
	Id                          *string                                     `json:"id,omitempty"`
	IsDefault                   *bool                                       `json:"is_default,omitempty"`
	IsDefaultMonitoring         *bool                                       `json:"is_default_monitoring,omitempty"`
	IsInternal                  *bool                                       `json:"is_internal,omitempty"`
	IsPreconfigured             *bool                                       `json:"is_preconfigured,omitempty"`
	KibanaApiKey                *string                                     `json:"kibana_api_key,omitempty"`
	KibanaUrl                   *string                                     `json:"kibana_url,omitempty"`
	Name                        string                                      `json:"name"`
	Preset                      *PutFleetOutputsOutputid200Item1Preset      `json:"preset,omitempty"`
	ProxyId                     *string                                     `json:"proxy_id,omitempty"`
	Secrets                     *PutFleetOutputsOutputid_200_Item_1_Secrets `json:"secrets,omitempty"`
	ServiceToken                *string                                     `json:"service_token,omitempty"`
	Shipper                     *PutFleetOutputsOutputid_200_Item_1_Shipper `json:"shipper,omitempty"`
	Ssl                         *PutFleetOutputsOutputid_200_Item_1_Ssl     `json:"ssl,omitempty"`
	SyncIntegrations            *bool                                       `json:"sync_integrations,omitempty"`
	SyncUninstalledIntegrations *bool                                       `json:"sync_uninstalled_integrations,omitempty"`
	Type                        PutFleetOutputsOutputid200Item1Type         `json:"type"`
	AdditionalProperties        map[string]interface{}                      `json:"-"`
}
type PutFleetOutputsOutputid200Item1Preset string
type PutFleetOutputsOutputid200Item1SecretsServiceToken0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item1SecretsServiceToken1 = string
type PutFleetOutputsOutputid_200_Item_1_Secrets_ServiceToken struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid200Item1SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item1SecretsSslKey1 = string
type PutFleetOutputsOutputid_200_Item_1_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid_200_Item_1_Secrets_Ssl struct {
	Key                  *PutFleetOutputsOutputid_200_Item_1_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                              `json:"-"`
}
type PutFleetOutputsOutputid_200_Item_1_Secrets struct {
	ServiceToken         *PutFleetOutputsOutputid_200_Item_1_Secrets_ServiceToken `json:"service_token,omitempty"`
	Ssl                  *PutFleetOutputsOutputid_200_Item_1_Secrets_Ssl          `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                                   `json:"-"`
}
type PutFleetOutputsOutputid_200_Item_1_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item1SslVerificationMode string
type PutFleetOutputsOutputid_200_Item_1_Ssl struct {
	Certificate            *string                                             `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                           `json:"certificate_authorities,omitempty"`
	Key                    *string                                             `json:"key,omitempty"`
	VerificationMode       *PutFleetOutputsOutputid200Item1SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                              `json:"-"`
}
type PutFleetOutputsOutputid200Item1Type string
type PutFleetOutputsOutputid200Item2 struct {
	AllowEdit            *[]string                                   `json:"allow_edit,omitempty"`
	CaSha256             *string                                     `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                     `json:"ca_trusted_fingerprint,omitempty"`
	ConfigYaml           *string                                     `json:"config_yaml,omitempty"`
	Hosts                []string                                    `json:"hosts"`
	Id                   *string                                     `json:"id,omitempty"`
	IsDefault            *bool                                       `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                       `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                       `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                       `json:"is_preconfigured,omitempty"`
	Name                 string                                      `json:"name"`
	ProxyId              *string                                     `json:"proxy_id,omitempty"`
	Secrets              *PutFleetOutputsOutputid_200_Item_2_Secrets `json:"secrets,omitempty"`
	Shipper              *PutFleetOutputsOutputid_200_Item_2_Shipper `json:"shipper,omitempty"`
	Ssl                  *PutFleetOutputsOutputid_200_Item_2_Ssl     `json:"ssl,omitempty"`
	Type                 PutFleetOutputsOutputid200Item2Type         `json:"type"`
	AdditionalProperties map[string]interface{}                      `json:"-"`
}
type PutFleetOutputsOutputid200Item2SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item2SecretsSslKey1 = string
type PutFleetOutputsOutputid_200_Item_2_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid_200_Item_2_Secrets_Ssl struct {
	Key                  *PutFleetOutputsOutputid_200_Item_2_Secrets_Ssl_Key `json:"key,omitempty"`
	AdditionalProperties map[string]interface{}                              `json:"-"`
}
type PutFleetOutputsOutputid_200_Item_2_Secrets struct {
	Ssl                  *PutFleetOutputsOutputid_200_Item_2_Secrets_Ssl `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                          `json:"-"`
}
type PutFleetOutputsOutputid_200_Item_2_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item2SslVerificationMode string
type PutFleetOutputsOutputid_200_Item_2_Ssl struct {
	Certificate            *string                                             `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                           `json:"certificate_authorities,omitempty"`
	Key                    *string                                             `json:"key,omitempty"`
	VerificationMode       *PutFleetOutputsOutputid200Item2SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                              `json:"-"`
}
type PutFleetOutputsOutputid200Item2Type string
type PutFleetOutputsOutputid200Item3 struct {
	AllowEdit            *[]string                                            `json:"allow_edit,omitempty"`
	AuthType             PutFleetOutputsOutputid200Item3AuthType              `json:"auth_type"`
	BrokerTimeout        *float32                                             `json:"broker_timeout,omitempty"`
	CaSha256             *string                                              `json:"ca_sha256,omitempty"`
	CaTrustedFingerprint *string                                              `json:"ca_trusted_fingerprint,omitempty"`
	ClientId             *string                                              `json:"client_id,omitempty"`
	Compression          *PutFleetOutputsOutputid200Item3Compression          `json:"compression,omitempty"`
	CompressionLevel     *PutFleetOutputsOutputid_200_Item_3_CompressionLevel `json:"compression_level,omitempty"`
	ConfigYaml           *string                                              `json:"config_yaml,omitempty"`
	ConnectionType       *PutFleetOutputsOutputid_200_Item_3_ConnectionType   `json:"connection_type,omitempty"`
	Hash                 *PutFleetOutputsOutputid_200_Item_3_Hash             `json:"hash,omitempty"`
	Headers              *[]PutFleetOutputsOutputid_200_Item_3_Headers_Item   `json:"headers,omitempty"`
	Hosts                []string                                             `json:"hosts"`
	Id                   *string                                              `json:"id,omitempty"`
	IsDefault            *bool                                                `json:"is_default,omitempty"`
	IsDefaultMonitoring  *bool                                                `json:"is_default_monitoring,omitempty"`
	IsInternal           *bool                                                `json:"is_internal,omitempty"`
	IsPreconfigured      *bool                                                `json:"is_preconfigured,omitempty"`
	Key                  *string                                              `json:"key,omitempty"`
	Name                 string                                               `json:"name"`
	Partition            *PutFleetOutputsOutputid200Item3Partition            `json:"partition,omitempty"`
	Password             *PutFleetOutputsOutputid_200_Item_3_Password         `json:"password,omitempty"`
	ProxyId              *string                                              `json:"proxy_id,omitempty"`
	Random               *PutFleetOutputsOutputid_200_Item_3_Random           `json:"random,omitempty"`
	RequiredAcks         *PutFleetOutputsOutputid200Item3RequiredAcks         `json:"required_acks,omitempty"`
	RoundRobin           *PutFleetOutputsOutputid_200_Item_3_RoundRobin       `json:"round_robin,omitempty"`
	Sasl                 *PutFleetOutputsOutputid_200_Item_3_Sasl             `json:"sasl,omitempty"`
	Secrets              *PutFleetOutputsOutputid_200_Item_3_Secrets          `json:"secrets,omitempty"`
	Shipper              *PutFleetOutputsOutputid_200_Item_3_Shipper          `json:"shipper,omitempty"`
	Ssl                  *PutFleetOutputsOutputid_200_Item_3_Ssl              `json:"ssl,omitempty"`
	Timeout              *float32                                             `json:"timeout,omitempty"`
	Topic                *string                                              `json:"topic,omitempty"`
	Type                 PutFleetOutputsOutputid200Item3Type                  `json:"type"`
	Username             *PutFleetOutputsOutputid_200_Item_3_Username         `json:"username,omitempty"`
	Version              *string                                              `json:"version,omitempty"`
	AdditionalProperties map[string]interface{}                               `json:"-"`
}
type PutFleetOutputsOutputid200Item3AuthType string
type PutFleetOutputsOutputid200Item3Compression string
type PutFleetOutputsOutputid200Item3CompressionLevel0 = []interface{}
type PutFleetOutputsOutputid200Item3CompressionLevel1 = bool
type PutFleetOutputsOutputid200Item3CompressionLevel2 = float32
type PutFleetOutputsOutputid200Item3CompressionLevel3 = map[string]interface{}
type PutFleetOutputsOutputid200Item3CompressionLevel4 = string
type PutFleetOutputsOutputid200Item3CompressionLevel0 = float32
type PutFleetOutputsOutputid200Item3CompressionLevel1 = interface{}
type PutFleetOutputsOutputid_200_Item_3_CompressionLevel struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid200Item3ConnectionType0 = []interface{}
type PutFleetOutputsOutputid200Item3ConnectionType1 = bool
type PutFleetOutputsOutputid200Item3ConnectionType2 = float32
type PutFleetOutputsOutputid200Item3ConnectionType3 = map[string]interface{}
type PutFleetOutputsOutputid200Item3ConnectionType4 = string
type PutFleetOutputsOutputid200Item3ConnectionType0 string
type PutFleetOutputsOutputid200Item3ConnectionType1 = interface{}
type PutFleetOutputsOutputid_200_Item_3_ConnectionType struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid_200_Item_3_Hash struct {
	Hash                 *string                `json:"hash,omitempty"`
	Random               *bool                  `json:"random,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid_200_Item_3_Headers_Item struct {
	Key                  string                 `json:"key"`
	Value                string                 `json:"value"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item3Partition string
type PutFleetOutputsOutputid200Item3Password0 = []interface{}
type PutFleetOutputsOutputid200Item3Password1 = bool
type PutFleetOutputsOutputid200Item3Password2 = float32
type PutFleetOutputsOutputid200Item3Password3 = map[string]interface{}
type PutFleetOutputsOutputid200Item3Password4 = string
type PutFleetOutputsOutputid200Item3Password0 = interface{}
type PutFleetOutputsOutputid200Item3Password1 struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid200Item3Password10 = []interface{}
type PutFleetOutputsOutputid200Item3Password11 = bool
type PutFleetOutputsOutputid200Item3Password12 = float32
type PutFleetOutputsOutputid200Item3Password13 = map[string]interface{}
type PutFleetOutputsOutputid200Item3Password14 = string
type PutFleetOutputsOutputid200Item3Password10 = string
type PutFleetOutputsOutputid200Item3Password11 = interface{}
type PutFleetOutputsOutputid_200_Item_3_Password struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid_200_Item_3_Random struct {
	GroupEvents          *float32               `json:"group_events,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item3RequiredAcks int
type PutFleetOutputsOutputid_200_Item_3_RoundRobin struct {
	GroupEvents          *float32               `json:"group_events,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item3SaslMechanism string
type PutFleetOutputsOutputid_200_Item_3_Sasl struct {
	Mechanism            *PutFleetOutputsOutputid200Item3SaslMechanism `json:"mechanism,omitempty"`
	AdditionalProperties map[string]interface{}                        `json:"-"`
}
type PutFleetOutputsOutputid200Item3SecretsPassword0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item3SecretsPassword1 = string
type PutFleetOutputsOutputid_200_Item_3_Secrets_Password struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid200Item3SecretsSslKey0 struct {
	Id                   string                 `json:"id"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item3SecretsSslKey1 = string
type PutFleetOutputsOutputid_200_Item_3_Secrets_Ssl_Key struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid_200_Item_3_Secrets_Ssl struct {
	Key                  PutFleetOutputsOutputid_200_Item_3_Secrets_Ssl_Key `json:"key"`
	AdditionalProperties map[string]interface{}                             `json:"-"`
}
type PutFleetOutputsOutputid_200_Item_3_Secrets struct {
	Password             *PutFleetOutputsOutputid_200_Item_3_Secrets_Password `json:"password,omitempty"`
	Ssl                  *PutFleetOutputsOutputid_200_Item_3_Secrets_Ssl      `json:"ssl,omitempty"`
	AdditionalProperties map[string]interface{}                               `json:"-"`
}
type PutFleetOutputsOutputid_200_Item_3_Shipper struct {
	CompressionLevel            *float32               `json:"compression_level,omitempty"`
	DiskQueueCompressionEnabled *bool                  `json:"disk_queue_compression_enabled,omitempty"`
	DiskQueueEnabled            *bool                  `json:"disk_queue_enabled,omitempty"`
	DiskQueueEncryptionEnabled  *bool                  `json:"disk_queue_encryption_enabled,omitempty"`
	DiskQueueMaxSize            *float32               `json:"disk_queue_max_size,omitempty"`
	DiskQueuePath               *string                `json:"disk_queue_path,omitempty"`
	Loadbalance                 *bool                  `json:"loadbalance,omitempty"`
	MaxBatchBytes               *float32               `json:"max_batch_bytes,omitempty"`
	MemQueueEvents              *float32               `json:"mem_queue_events,omitempty"`
	QueueFlushTimeout           *float32               `json:"queue_flush_timeout,omitempty"`
	AdditionalProperties        map[string]interface{} `json:"-"`
}
type PutFleetOutputsOutputid200Item3SslVerificationMode string
type PutFleetOutputsOutputid_200_Item_3_Ssl struct {
	Certificate            *string                                             `json:"certificate,omitempty"`
	CertificateAuthorities *[]string                                           `json:"certificate_authorities,omitempty"`
	Key                    *string                                             `json:"key,omitempty"`
	VerificationMode       *PutFleetOutputsOutputid200Item3SslVerificationMode `json:"verification_mode,omitempty"`
	AdditionalProperties   map[string]interface{}                              `json:"-"`
}
type PutFleetOutputsOutputid200Item3Type string
type PutFleetOutputsOutputid200Item3Username0 = []interface{}
type PutFleetOutputsOutputid200Item3Username1 = bool
type PutFleetOutputsOutputid200Item3Username2 = float32
type PutFleetOutputsOutputid200Item3Username3 = map[string]interface{}
type PutFleetOutputsOutputid200Item3Username4 = string
type PutFleetOutputsOutputid200Item3Username0 = string
type PutFleetOutputsOutputid200Item3Username1 = interface{}
type PutFleetOutputsOutputid_200_Item_3_Username struct {
	union json.RawMessage
}
type PutFleetOutputsOutputid_200_Item struct {
	union json.RawMessage
}

// Status returns HTTPResponse.Status
func (r PutFleetOutputsOutputidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PutFleetOutputsOutputidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetPackagePoliciesResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Items []struct {
			// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
			AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
			Agents                           *float32  `json:"agents,omitempty"`
			CreatedAt                        string    `json:"created_at"`
			CreatedBy                        string    `json:"created_by"`

			// Description Package policy description
			Description   *string                                          `json:"description,omitempty"`
			Elasticsearch *GetFleetPackagePolicies_200_Items_Elasticsearch `json:"elasticsearch,omitempty"`
			Enabled       bool                                             `json:"enabled"`
			Id            string                                           `json:"id"`
			Inputs        GetFleetPackagePolicies_200_Items_Inputs         `json:"inputs"`
			IsManaged     *bool                                            `json:"is_managed,omitempty"`

			// Name Package policy name (should be unique)
			Name string `json:"name"`

			// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
			Namespace *string `json:"namespace,omitempty"`
			OutputId  *string `json:"output_id,omitempty"`

			// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
			Overrides *struct {
				Inputs *map[string]interface{} `json:"inputs,omitempty"`
			} `json:"overrides,omitempty"`
			Package *struct {
				ExperimentalDataStreamFeatures *[]struct {
					DataStream string `json:"data_stream"`
					Features   struct {
						DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
						DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
						SyntheticSource     *bool `json:"synthetic_source,omitempty"`
						Tsdb                *bool `json:"tsdb,omitempty"`
					} `json:"features"`
				} `json:"experimental_data_stream_features,omitempty"`

				// Name Package name
				Name         string  `json:"name"`
				RequiresRoot *bool   `json:"requires_root,omitempty"`
				Title        *string `json:"title,omitempty"`

				// Version Package version
				Version string `json:"version"`
			} `json:"package,omitempty"`

			// PolicyId Agent policy ID where that package policy will be added
			// Deprecated:
			PolicyId         *string   `json:"policy_id,omitempty"`
			PolicyIds        *[]string `json:"policy_ids,omitempty"`
			Revision         float32   `json:"revision"`
			SecretReferences *[]struct {
				Id string `json:"id"`
			} `json:"secret_references,omitempty"`
			SpaceIds *[]string `json:"spaceIds,omitempty"`

			// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
			SupportsAgentless *bool                                   `json:"supports_agentless,omitempty"`
			UpdatedAt         string                                  `json:"updated_at"`
			UpdatedBy         string                                  `json:"updated_by"`
			Vars              *GetFleetPackagePolicies_200_Items_Vars `json:"vars,omitempty"`
			Version           *string                                 `json:"version,omitempty"`
		} `json:"items"`
		Page    float32 `json:"page"`
		PerPage float32 `json:"perPage"`
		Total   float32 `json:"total"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type GetFleetPackagePolicies_200_Items_Elasticsearch_Privileges struct {
	Cluster              *[]string              `json:"cluster,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetPackagePolicies_200_Items_Elasticsearch struct {
	Privileges           *GetFleetPackagePolicies_200_Items_Elasticsearch_Privileges `json:"privileges,omitempty"`
	AdditionalProperties map[string]interface{}                                      `json:"-"`
}
type GetFleetPackagePolicies200ItemsInputs0 = []struct {
	CompiledInput interface{} `json:"compiled_input"`

	// Config Package variable (see integration documentation for more information)
	Config *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"config,omitempty"`
	Enabled        bool    `json:"enabled"`
	Id             *string `json:"id,omitempty"`
	KeepEnabled    *bool   `json:"keep_enabled,omitempty"`
	PolicyTemplate *string `json:"policy_template,omitempty"`
	Streams        []struct {
		CompiledStream interface{} `json:"compiled_stream"`

		// Config Package variable (see integration documentation for more information)
		Config *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"config,omitempty"`
		DataStream struct {
			Dataset       string `json:"dataset"`
			Elasticsearch *struct {
				DynamicDataset   *bool `json:"dynamic_dataset,omitempty"`
				DynamicNamespace *bool `json:"dynamic_namespace,omitempty"`
				Privileges       *struct {
					Indices *[]string `json:"indices,omitempty"`
				} `json:"privileges,omitempty"`
			} `json:"elasticsearch,omitempty"`
			Type string `json:"type"`
		} `json:"data_stream"`
		Enabled     bool                                                  `json:"enabled"`
		Id          *string                                               `json:"id,omitempty"`
		KeepEnabled *bool                                                 `json:"keep_enabled,omitempty"`
		Release     *GetFleetPackagePolicies200ItemsInputs0StreamsRelease `json:"release,omitempty"`

		// Vars Package variable (see integration documentation for more information)
		Vars *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"vars,omitempty"`
	} `json:"streams"`
	Type string `json:"type"`

	// Vars Package variable (see integration documentation for more information)
	Vars *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"vars,omitempty"`
}
type GetFleetPackagePolicies200ItemsInputs0StreamsRelease string
type GetFleetPackagePolicies200ItemsInputs1 map[string]struct {
	// Enabled enable or disable that input, (default to true)
	Enabled *bool `json:"enabled,omitempty"`

	// Streams Input streams (see integration documentation to know what streams are available)
	Streams *map[string]struct {
		// Enabled enable or disable that stream, (default to true)
		Enabled *bool `json:"enabled,omitempty"`

		// Vars Input/stream level variable (see integration documentation for more information)
		Vars *map[string]*GetFleetPackagePolicies_200_Items_Inputs_1_Streams_Vars_AdditionalProperties `json:"vars,omitempty"`
	} `json:"streams,omitempty"`

	// Vars Input/stream level variable (see integration documentation for more information)
	Vars *map[string]*GetFleetPackagePolicies_200_Items_Inputs_1_Vars_AdditionalProperties `json:"vars,omitempty"`
}
type GetFleetPackagePolicies200ItemsInputs1StreamsVars0 = bool
type GetFleetPackagePolicies200ItemsInputs1StreamsVars1 = string
type GetFleetPackagePolicies200ItemsInputs1StreamsVars2 = float32
type GetFleetPackagePolicies200ItemsInputs1StreamsVars3 = []string
type GetFleetPackagePolicies200ItemsInputs1StreamsVars4 = []float32
type GetFleetPackagePolicies200ItemsInputs1StreamsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetPackagePolicies_200_Items_Inputs_1_Streams_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetPackagePolicies200ItemsInputs1Vars0 = bool
type GetFleetPackagePolicies200ItemsInputs1Vars1 = string
type GetFleetPackagePolicies200ItemsInputs1Vars2 = float32
type GetFleetPackagePolicies200ItemsInputs1Vars3 = []string
type GetFleetPackagePolicies200ItemsInputs1Vars4 = []float32
type GetFleetPackagePolicies200ItemsInputs1Vars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetPackagePolicies_200_Items_Inputs_1_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetPackagePolicies_200_Items_Inputs struct {
	union json.RawMessage
}
type GetFleetPackagePolicies200ItemsVars0 map[string]struct {
	Frozen *bool       `json:"frozen,omitempty"`
	Type   *string     `json:"type,omitempty"`
	Value  interface{} `json:"value"`
}
type GetFleetPackagePolicies200ItemsVars1 map[string]*GetFleetPackagePolicies_200_Items_Vars_1_AdditionalProperties
type GetFleetPackagePolicies200ItemsVars10 = bool
type GetFleetPackagePolicies200ItemsVars11 = string
type GetFleetPackagePolicies200ItemsVars12 = float32
type GetFleetPackagePolicies200ItemsVars13 = []string
type GetFleetPackagePolicies200ItemsVars14 = []float32
type GetFleetPackagePolicies200ItemsVars15 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetPackagePolicies_200_Items_Vars_1_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetPackagePolicies_200_Items_Vars struct {
	union json.RawMessage
}

// Status returns HTTPResponse.Status
func (r GetFleetPackagePoliciesResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetPackagePoliciesResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostFleetPackagePoliciesResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item struct {
			// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
			AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
			Agents                           *float32  `json:"agents,omitempty"`
			CreatedAt                        string    `json:"created_at"`
			CreatedBy                        string    `json:"created_by"`

			// Description Package policy description
			Description   *string                                          `json:"description,omitempty"`
			Elasticsearch *PostFleetPackagePolicies_200_Item_Elasticsearch `json:"elasticsearch,omitempty"`
			Enabled       bool                                             `json:"enabled"`
			Id            string                                           `json:"id"`
			Inputs        PostFleetPackagePolicies_200_Item_Inputs         `json:"inputs"`
			IsManaged     *bool                                            `json:"is_managed,omitempty"`

			// Name Package policy name (should be unique)
			Name string `json:"name"`

			// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
			Namespace *string `json:"namespace,omitempty"`
			OutputId  *string `json:"output_id,omitempty"`

			// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
			Overrides *struct {
				Inputs *map[string]interface{} `json:"inputs,omitempty"`
			} `json:"overrides,omitempty"`
			Package *struct {
				ExperimentalDataStreamFeatures *[]struct {
					DataStream string `json:"data_stream"`
					Features   struct {
						DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
						DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
						SyntheticSource     *bool `json:"synthetic_source,omitempty"`
						Tsdb                *bool `json:"tsdb,omitempty"`
					} `json:"features"`
				} `json:"experimental_data_stream_features,omitempty"`

				// Name Package name
				Name         string  `json:"name"`
				RequiresRoot *bool   `json:"requires_root,omitempty"`
				Title        *string `json:"title,omitempty"`

				// Version Package version
				Version string `json:"version"`
			} `json:"package,omitempty"`

			// PolicyId Agent policy ID where that package policy will be added
			// Deprecated:
			PolicyId         *string   `json:"policy_id,omitempty"`
			PolicyIds        *[]string `json:"policy_ids,omitempty"`
			Revision         float32   `json:"revision"`
			SecretReferences *[]struct {
				Id string `json:"id"`
			} `json:"secret_references,omitempty"`
			SpaceIds *[]string `json:"spaceIds,omitempty"`

			// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
			SupportsAgentless *bool                                   `json:"supports_agentless,omitempty"`
			UpdatedAt         string                                  `json:"updated_at"`
			UpdatedBy         string                                  `json:"updated_by"`
			Vars              *PostFleetPackagePolicies_200_Item_Vars `json:"vars,omitempty"`
			Version           *string                                 `json:"version,omitempty"`
		} `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
	JSON409 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type PostFleetPackagePolicies_200_Item_Elasticsearch_Privileges struct {
	Cluster              *[]string              `json:"cluster,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PostFleetPackagePolicies_200_Item_Elasticsearch struct {
	Privileges           *PostFleetPackagePolicies_200_Item_Elasticsearch_Privileges `json:"privileges,omitempty"`
	AdditionalProperties map[string]interface{}                                      `json:"-"`
}
type PostFleetPackagePolicies200ItemInputs0 = []struct {
	CompiledInput interface{} `json:"compiled_input"`

	// Config Package variable (see integration documentation for more information)
	Config *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"config,omitempty"`
	Enabled        bool    `json:"enabled"`
	Id             *string `json:"id,omitempty"`
	KeepEnabled    *bool   `json:"keep_enabled,omitempty"`
	PolicyTemplate *string `json:"policy_template,omitempty"`
	Streams        []struct {
		CompiledStream interface{} `json:"compiled_stream"`

		// Config Package variable (see integration documentation for more information)
		Config *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"config,omitempty"`
		DataStream struct {
			Dataset       string `json:"dataset"`
			Elasticsearch *struct {
				DynamicDataset   *bool `json:"dynamic_dataset,omitempty"`
				DynamicNamespace *bool `json:"dynamic_namespace,omitempty"`
				Privileges       *struct {
					Indices *[]string `json:"indices,omitempty"`
				} `json:"privileges,omitempty"`
			} `json:"elasticsearch,omitempty"`
			Type string `json:"type"`
		} `json:"data_stream"`
		Enabled     bool                                                  `json:"enabled"`
		Id          *string                                               `json:"id,omitempty"`
		KeepEnabled *bool                                                 `json:"keep_enabled,omitempty"`
		Release     *PostFleetPackagePolicies200ItemInputs0StreamsRelease `json:"release,omitempty"`

		// Vars Package variable (see integration documentation for more information)
		Vars *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"vars,omitempty"`
	} `json:"streams"`
	Type string `json:"type"`

	// Vars Package variable (see integration documentation for more information)
	Vars *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"vars,omitempty"`
}
type PostFleetPackagePolicies200ItemInputs0StreamsRelease string
type PostFleetPackagePolicies200ItemInputs1 map[string]struct {
	// Enabled enable or disable that input, (default to true)
	Enabled *bool `json:"enabled,omitempty"`

	// Streams Input streams (see integration documentation to know what streams are available)
	Streams *map[string]struct {
		// Enabled enable or disable that stream, (default to true)
		Enabled *bool `json:"enabled,omitempty"`

		// Vars Input/stream level variable (see integration documentation for more information)
		Vars *map[string]*PostFleetPackagePolicies_200_Item_Inputs_1_Streams_Vars_AdditionalProperties `json:"vars,omitempty"`
	} `json:"streams,omitempty"`

	// Vars Input/stream level variable (see integration documentation for more information)
	Vars *map[string]*PostFleetPackagePolicies_200_Item_Inputs_1_Vars_AdditionalProperties `json:"vars,omitempty"`
}
type PostFleetPackagePolicies200ItemInputs1StreamsVars0 = bool
type PostFleetPackagePolicies200ItemInputs1StreamsVars1 = string
type PostFleetPackagePolicies200ItemInputs1StreamsVars2 = float32
type PostFleetPackagePolicies200ItemInputs1StreamsVars3 = []string
type PostFleetPackagePolicies200ItemInputs1StreamsVars4 = []float32
type PostFleetPackagePolicies200ItemInputs1StreamsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PostFleetPackagePolicies_200_Item_Inputs_1_Streams_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type PostFleetPackagePolicies200ItemInputs1Vars0 = bool
type PostFleetPackagePolicies200ItemInputs1Vars1 = string
type PostFleetPackagePolicies200ItemInputs1Vars2 = float32
type PostFleetPackagePolicies200ItemInputs1Vars3 = []string
type PostFleetPackagePolicies200ItemInputs1Vars4 = []float32
type PostFleetPackagePolicies200ItemInputs1Vars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PostFleetPackagePolicies_200_Item_Inputs_1_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type PostFleetPackagePolicies_200_Item_Inputs struct {
	union json.RawMessage
}
type PostFleetPackagePolicies200ItemVars0 map[string]struct {
	Frozen *bool       `json:"frozen,omitempty"`
	Type   *string     `json:"type,omitempty"`
	Value  interface{} `json:"value"`
}
type PostFleetPackagePolicies200ItemVars1 map[string]*PostFleetPackagePolicies_200_Item_Vars_1_AdditionalProperties
type PostFleetPackagePolicies200ItemVars10 = bool
type PostFleetPackagePolicies200ItemVars11 = string
type PostFleetPackagePolicies200ItemVars12 = float32
type PostFleetPackagePolicies200ItemVars13 = []string
type PostFleetPackagePolicies200ItemVars14 = []float32
type PostFleetPackagePolicies200ItemVars15 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PostFleetPackagePolicies_200_Item_Vars_1_AdditionalProperties struct {
	union json.RawMessage
}
type PostFleetPackagePolicies_200_Item_Vars struct {
	union json.RawMessage
}

// Status returns HTTPResponse.Status
func (r PostFleetPackagePoliciesResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostFleetPackagePoliciesResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteFleetPackagePoliciesPackagepolicyidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Id string `json:"id"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}

// Status returns HTTPResponse.Status
func (r DeleteFleetPackagePoliciesPackagepolicyidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteFleetPackagePoliciesPackagepolicyidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetFleetPackagePoliciesPackagepolicyidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item struct {
			// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
			AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
			Agents                           *float32  `json:"agents,omitempty"`
			CreatedAt                        string    `json:"created_at"`
			CreatedBy                        string    `json:"created_by"`

			// Description Package policy description
			Description   *string                                                        `json:"description,omitempty"`
			Elasticsearch *GetFleetPackagePoliciesPackagepolicyid_200_Item_Elasticsearch `json:"elasticsearch,omitempty"`
			Enabled       bool                                                           `json:"enabled"`
			Id            string                                                         `json:"id"`
			Inputs        GetFleetPackagePoliciesPackagepolicyid_200_Item_Inputs         `json:"inputs"`
			IsManaged     *bool                                                          `json:"is_managed,omitempty"`

			// Name Package policy name (should be unique)
			Name string `json:"name"`

			// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
			Namespace *string `json:"namespace,omitempty"`
			OutputId  *string `json:"output_id,omitempty"`

			// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
			Overrides *struct {
				Inputs *map[string]interface{} `json:"inputs,omitempty"`
			} `json:"overrides,omitempty"`
			Package *struct {
				ExperimentalDataStreamFeatures *[]struct {
					DataStream string `json:"data_stream"`
					Features   struct {
						DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
						DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
						SyntheticSource     *bool `json:"synthetic_source,omitempty"`
						Tsdb                *bool `json:"tsdb,omitempty"`
					} `json:"features"`
				} `json:"experimental_data_stream_features,omitempty"`

				// Name Package name
				Name         string  `json:"name"`
				RequiresRoot *bool   `json:"requires_root,omitempty"`
				Title        *string `json:"title,omitempty"`

				// Version Package version
				Version string `json:"version"`
			} `json:"package,omitempty"`

			// PolicyId Agent policy ID where that package policy will be added
			// Deprecated:
			PolicyId         *string   `json:"policy_id,omitempty"`
			PolicyIds        *[]string `json:"policy_ids,omitempty"`
			Revision         float32   `json:"revision"`
			SecretReferences *[]struct {
				Id string `json:"id"`
			} `json:"secret_references,omitempty"`
			SpaceIds *[]string `json:"spaceIds,omitempty"`

			// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
			SupportsAgentless *bool                                                 `json:"supports_agentless,omitempty"`
			UpdatedAt         string                                                `json:"updated_at"`
			UpdatedBy         string                                                `json:"updated_by"`
			Vars              *GetFleetPackagePoliciesPackagepolicyid_200_Item_Vars `json:"vars,omitempty"`
			Version           *string                                               `json:"version,omitempty"`
		} `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
	JSON404 *struct {
		Message string `json:"message"`
	}
}
type GetFleetPackagePoliciesPackagepolicyid_200_Item_Elasticsearch_Privileges struct {
	Cluster              *[]string              `json:"cluster,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type GetFleetPackagePoliciesPackagepolicyid_200_Item_Elasticsearch struct {
	Privileges           *GetFleetPackagePoliciesPackagepolicyid_200_Item_Elasticsearch_Privileges `json:"privileges,omitempty"`
	AdditionalProperties map[string]interface{}                                                    `json:"-"`
}
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs0 = []struct {
	CompiledInput interface{} `json:"compiled_input"`

	// Config Package variable (see integration documentation for more information)
	Config *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"config,omitempty"`
	Enabled        bool    `json:"enabled"`
	Id             *string `json:"id,omitempty"`
	KeepEnabled    *bool   `json:"keep_enabled,omitempty"`
	PolicyTemplate *string `json:"policy_template,omitempty"`
	Streams        []struct {
		CompiledStream interface{} `json:"compiled_stream"`

		// Config Package variable (see integration documentation for more information)
		Config *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"config,omitempty"`
		DataStream struct {
			Dataset       string `json:"dataset"`
			Elasticsearch *struct {
				DynamicDataset   *bool `json:"dynamic_dataset,omitempty"`
				DynamicNamespace *bool `json:"dynamic_namespace,omitempty"`
				Privileges       *struct {
					Indices *[]string `json:"indices,omitempty"`
				} `json:"privileges,omitempty"`
			} `json:"elasticsearch,omitempty"`
			Type string `json:"type"`
		} `json:"data_stream"`
		Enabled     bool                                                                `json:"enabled"`
		Id          *string                                                             `json:"id,omitempty"`
		KeepEnabled *bool                                                               `json:"keep_enabled,omitempty"`
		Release     *GetFleetPackagePoliciesPackagepolicyid200ItemInputs0StreamsRelease `json:"release,omitempty"`

		// Vars Package variable (see integration documentation for more information)
		Vars *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"vars,omitempty"`
	} `json:"streams"`
	Type string `json:"type"`

	// Vars Package variable (see integration documentation for more information)
	Vars *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"vars,omitempty"`
}
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs0StreamsRelease string
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1 map[string]struct {
	// Enabled enable or disable that input, (default to true)
	Enabled *bool `json:"enabled,omitempty"`

	// Streams Input streams (see integration documentation to know what streams are available)
	Streams *map[string]struct {
		// Enabled enable or disable that stream, (default to true)
		Enabled *bool `json:"enabled,omitempty"`

		// Vars Input/stream level variable (see integration documentation for more information)
		Vars *map[string]*GetFleetPackagePoliciesPackagepolicyid_200_Item_Inputs_1_Streams_Vars_AdditionalProperties `json:"vars,omitempty"`
	} `json:"streams,omitempty"`

	// Vars Input/stream level variable (see integration documentation for more information)
	Vars *map[string]*GetFleetPackagePoliciesPackagepolicyid_200_Item_Inputs_1_Vars_AdditionalProperties `json:"vars,omitempty"`
}
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars0 = bool
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars1 = string
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars2 = float32
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars3 = []string
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars4 = []float32
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetPackagePoliciesPackagepolicyid_200_Item_Inputs_1_Streams_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars0 = bool
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars1 = string
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars2 = float32
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars3 = []string
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars4 = []float32
type GetFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetPackagePoliciesPackagepolicyid_200_Item_Inputs_1_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetPackagePoliciesPackagepolicyid_200_Item_Inputs struct {
	union json.RawMessage
}
type GetFleetPackagePoliciesPackagepolicyid200ItemVars0 map[string]struct {
	Frozen *bool       `json:"frozen,omitempty"`
	Type   *string     `json:"type,omitempty"`
	Value  interface{} `json:"value"`
}
type GetFleetPackagePoliciesPackagepolicyid200ItemVars1 map[string]*GetFleetPackagePoliciesPackagepolicyid_200_Item_Vars_1_AdditionalProperties
type GetFleetPackagePoliciesPackagepolicyid200ItemVars10 = bool
type GetFleetPackagePoliciesPackagepolicyid200ItemVars11 = string
type GetFleetPackagePoliciesPackagepolicyid200ItemVars12 = float32
type GetFleetPackagePoliciesPackagepolicyid200ItemVars13 = []string
type GetFleetPackagePoliciesPackagepolicyid200ItemVars14 = []float32
type GetFleetPackagePoliciesPackagepolicyid200ItemVars15 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type GetFleetPackagePoliciesPackagepolicyid_200_Item_Vars_1_AdditionalProperties struct {
	union json.RawMessage
}
type GetFleetPackagePoliciesPackagepolicyid_200_Item_Vars struct {
	union json.RawMessage
}

// Status returns HTTPResponse.Status
func (r GetFleetPackagePoliciesPackagepolicyidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetFleetPackagePoliciesPackagepolicyidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PutFleetPackagePoliciesPackagepolicyidResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		Item struct {
			// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
			AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
			Agents                           *float32  `json:"agents,omitempty"`
			CreatedAt                        string    `json:"created_at"`
			CreatedBy                        string    `json:"created_by"`

			// Description Package policy description
			Description   *string                                                        `json:"description,omitempty"`
			Elasticsearch *PutFleetPackagePoliciesPackagepolicyid_200_Item_Elasticsearch `json:"elasticsearch,omitempty"`
			Enabled       bool                                                           `json:"enabled"`
			Id            string                                                         `json:"id"`
			Inputs        PutFleetPackagePoliciesPackagepolicyid_200_Item_Inputs         `json:"inputs"`
			IsManaged     *bool                                                          `json:"is_managed,omitempty"`

			// Name Package policy name (should be unique)
			Name string `json:"name"`

			// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
			Namespace *string `json:"namespace,omitempty"`
			OutputId  *string `json:"output_id,omitempty"`

			// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
			Overrides *struct {
				Inputs *map[string]interface{} `json:"inputs,omitempty"`
			} `json:"overrides,omitempty"`
			Package *struct {
				ExperimentalDataStreamFeatures *[]struct {
					DataStream string `json:"data_stream"`
					Features   struct {
						DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
						DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
						SyntheticSource     *bool `json:"synthetic_source,omitempty"`
						Tsdb                *bool `json:"tsdb,omitempty"`
					} `json:"features"`
				} `json:"experimental_data_stream_features,omitempty"`

				// Name Package name
				Name         string  `json:"name"`
				RequiresRoot *bool   `json:"requires_root,omitempty"`
				Title        *string `json:"title,omitempty"`

				// Version Package version
				Version string `json:"version"`
			} `json:"package,omitempty"`

			// PolicyId Agent policy ID where that package policy will be added
			// Deprecated:
			PolicyId         *string   `json:"policy_id,omitempty"`
			PolicyIds        *[]string `json:"policy_ids,omitempty"`
			Revision         float32   `json:"revision"`
			SecretReferences *[]struct {
				Id string `json:"id"`
			} `json:"secret_references,omitempty"`
			SpaceIds *[]string `json:"spaceIds,omitempty"`

			// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
			SupportsAgentless *bool                                                 `json:"supports_agentless,omitempty"`
			UpdatedAt         string                                                `json:"updated_at"`
			UpdatedBy         string                                                `json:"updated_by"`
			Vars              *PutFleetPackagePoliciesPackagepolicyid_200_Item_Vars `json:"vars,omitempty"`
			Version           *string                                               `json:"version,omitempty"`
		} `json:"item"`
	}
	JSON400 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
	JSON403 *struct {
		Attributes interface{} `json:"attributes"`
		Error      *string     `json:"error,omitempty"`
		ErrorType  *string     `json:"errorType,omitempty"`
		Message    string      `json:"message"`
		StatusCode *float32    `json:"statusCode,omitempty"`
	}
}
type PutFleetPackagePoliciesPackagepolicyid_200_Item_Elasticsearch_Privileges struct {
	Cluster              *[]string              `json:"cluster,omitempty"`
	AdditionalProperties map[string]interface{} `json:"-"`
}
type PutFleetPackagePoliciesPackagepolicyid_200_Item_Elasticsearch struct {
	Privileges           *PutFleetPackagePoliciesPackagepolicyid_200_Item_Elasticsearch_Privileges `json:"privileges,omitempty"`
	AdditionalProperties map[string]interface{}                                                    `json:"-"`
}
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs0 = []struct {
	CompiledInput interface{} `json:"compiled_input"`

	// Config Package variable (see integration documentation for more information)
	Config *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"config,omitempty"`
	Enabled        bool    `json:"enabled"`
	Id             *string `json:"id,omitempty"`
	KeepEnabled    *bool   `json:"keep_enabled,omitempty"`
	PolicyTemplate *string `json:"policy_template,omitempty"`
	Streams        []struct {
		CompiledStream interface{} `json:"compiled_stream"`

		// Config Package variable (see integration documentation for more information)
		Config *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"config,omitempty"`
		DataStream struct {
			Dataset       string `json:"dataset"`
			Elasticsearch *struct {
				DynamicDataset   *bool `json:"dynamic_dataset,omitempty"`
				DynamicNamespace *bool `json:"dynamic_namespace,omitempty"`
				Privileges       *struct {
					Indices *[]string `json:"indices,omitempty"`
				} `json:"privileges,omitempty"`
			} `json:"elasticsearch,omitempty"`
			Type string `json:"type"`
		} `json:"data_stream"`
		Enabled     bool                                                                `json:"enabled"`
		Id          *string                                                             `json:"id,omitempty"`
		KeepEnabled *bool                                                               `json:"keep_enabled,omitempty"`
		Release     *PutFleetPackagePoliciesPackagepolicyid200ItemInputs0StreamsRelease `json:"release,omitempty"`

		// Vars Package variable (see integration documentation for more information)
		Vars *map[string]struct {
			Frozen *bool       `json:"frozen,omitempty"`
			Type   *string     `json:"type,omitempty"`
			Value  interface{} `json:"value"`
		} `json:"vars,omitempty"`
	} `json:"streams"`
	Type string `json:"type"`

	// Vars Package variable (see integration documentation for more information)
	Vars *map[string]struct {
		Frozen *bool       `json:"frozen,omitempty"`
		Type   *string     `json:"type,omitempty"`
		Value  interface{} `json:"value"`
	} `json:"vars,omitempty"`
}
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs0StreamsRelease string
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1 map[string]struct {
	// Enabled enable or disable that input, (default to true)
	Enabled *bool `json:"enabled,omitempty"`

	// Streams Input streams (see integration documentation to know what streams are available)
	Streams *map[string]struct {
		// Enabled enable or disable that stream, (default to true)
		Enabled *bool `json:"enabled,omitempty"`

		// Vars Input/stream level variable (see integration documentation for more information)
		Vars *map[string]*PutFleetPackagePoliciesPackagepolicyid_200_Item_Inputs_1_Streams_Vars_AdditionalProperties `json:"vars,omitempty"`
	} `json:"streams,omitempty"`

	// Vars Input/stream level variable (see integration documentation for more information)
	Vars *map[string]*PutFleetPackagePoliciesPackagepolicyid_200_Item_Inputs_1_Vars_AdditionalProperties `json:"vars,omitempty"`
}
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars0 = bool
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars1 = string
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars2 = float32
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars3 = []string
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars4 = []float32
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1StreamsVars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PutFleetPackagePoliciesPackagepolicyid_200_Item_Inputs_1_Streams_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars0 = bool
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars1 = string
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars2 = float32
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars3 = []string
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars4 = []float32
type PutFleetPackagePoliciesPackagepolicyid200ItemInputs1Vars5 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PutFleetPackagePoliciesPackagepolicyid_200_Item_Inputs_1_Vars_AdditionalProperties struct {
	union json.RawMessage
}
type PutFleetPackagePoliciesPackagepolicyid_200_Item_Inputs struct {
	union json.RawMessage
}
type PutFleetPackagePoliciesPackagepolicyid200ItemVars0 map[string]struct {
	Frozen *bool       `json:"frozen,omitempty"`
	Type   *string     `json:"type,omitempty"`
	Value  interface{} `json:"value"`
}
type PutFleetPackagePoliciesPackagepolicyid200ItemVars1 map[string]*PutFleetPackagePoliciesPackagepolicyid_200_Item_Vars_1_AdditionalProperties
type PutFleetPackagePoliciesPackagepolicyid200ItemVars10 = bool
type PutFleetPackagePoliciesPackagepolicyid200ItemVars11 = string
type PutFleetPackagePoliciesPackagepolicyid200ItemVars12 = float32
type PutFleetPackagePoliciesPackagepolicyid200ItemVars13 = []string
type PutFleetPackagePoliciesPackagepolicyid200ItemVars14 = []float32
type PutFleetPackagePoliciesPackagepolicyid200ItemVars15 struct {
	Id          string `json:"id"`
	IsSecretRef bool   `json:"isSecretRef"`
}
type PutFleetPackagePoliciesPackagepolicyid_200_Item_Vars_1_AdditionalProperties struct {
	union json.RawMessage
}
type PutFleetPackagePoliciesPackagepolicyid_200_Item_Vars struct {
	union json.RawMessage
}

// Status returns HTTPResponse.Status
func (r PutFleetPackagePoliciesPackagepolicyidResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PutFleetPackagePoliciesPackagepolicyidResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetStatusResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		union json.RawMessage
	}
	JSON503 *struct {
		union json.RawMessage
	}
}

// Status returns HTTPResponse.Status
func (r GetStatusResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetStatusResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PostParametersResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *struct {
		union json.RawMessage
	}
}
type PostParameters2000 = []SyntheticsPostParameterResponse

// Status returns HTTPResponse.Status
func (r PostParametersResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PostParametersResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type DeleteParameterResponse struct {
	Body         []byte
	HTTPResponse *http.Response
}

// Status returns HTTPResponse.Status
func (r DeleteParameterResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r DeleteParameterResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type GetParameterResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *SyntheticsGetParameterResponse
}

// Status returns HTTPResponse.Status
func (r GetParameterResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r GetParameterResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

type PutParameterResponse struct {
	Body         []byte
	HTTPResponse *http.Response
	JSON200      *map[string]interface{}
}

// Status returns HTTPResponse.Status
func (r PutParameterResponse) Status() string {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.Status
	}
	return http.StatusText(0)
}

// StatusCode returns HTTPResponse.StatusCode
func (r PutParameterResponse) StatusCode() int {
	if r.HTTPResponse != nil {
		return r.HTTPResponse.StatusCode
	}
	return 0
}

// GetAllDataViewsDefaultWithResponse request returning *GetAllDataViewsDefaultResponse
func (c *ClientWithResponses) GetAllDataViewsDefaultWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*GetAllDataViewsDefaultResponse, error) {
	rsp, err := c.GetAllDataViewsDefault(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetAllDataViewsDefaultResponse(rsp)
}

// CreateDataViewDefaultwWithBodyWithResponse request with arbitrary body returning *CreateDataViewDefaultwResponse
func (c *ClientWithResponses) CreateDataViewDefaultwWithBodyWithResponse(ctx context.Context, params *CreateDataViewDefaultwParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*CreateDataViewDefaultwResponse, error) {
	rsp, err := c.CreateDataViewDefaultwWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateDataViewDefaultwResponse(rsp)
}

func (c *ClientWithResponses) CreateDataViewDefaultwWithResponse(ctx context.Context, params *CreateDataViewDefaultwParams, body CreateDataViewDefaultwJSONRequestBody, reqEditors ...RequestEditorFn) (*CreateDataViewDefaultwResponse, error) {
	rsp, err := c.CreateDataViewDefaultw(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseCreateDataViewDefaultwResponse(rsp)
}

// DeleteDataViewDefaultWithResponse request returning *DeleteDataViewDefaultResponse
func (c *ClientWithResponses) DeleteDataViewDefaultWithResponse(ctx context.Context, viewId DataViewsViewId, params *DeleteDataViewDefaultParams, reqEditors ...RequestEditorFn) (*DeleteDataViewDefaultResponse, error) {
	rsp, err := c.DeleteDataViewDefault(ctx, viewId, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteDataViewDefaultResponse(rsp)
}

// GetDataViewDefaultWithResponse request returning *GetDataViewDefaultResponse
func (c *ClientWithResponses) GetDataViewDefaultWithResponse(ctx context.Context, viewId DataViewsViewId, reqEditors ...RequestEditorFn) (*GetDataViewDefaultResponse, error) {
	rsp, err := c.GetDataViewDefault(ctx, viewId, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetDataViewDefaultResponse(rsp)
}

// UpdateDataViewDefaultWithBodyWithResponse request with arbitrary body returning *UpdateDataViewDefaultResponse
func (c *ClientWithResponses) UpdateDataViewDefaultWithBodyWithResponse(ctx context.Context, viewId DataViewsViewId, params *UpdateDataViewDefaultParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*UpdateDataViewDefaultResponse, error) {
	rsp, err := c.UpdateDataViewDefaultWithBody(ctx, viewId, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateDataViewDefaultResponse(rsp)
}

func (c *ClientWithResponses) UpdateDataViewDefaultWithResponse(ctx context.Context, viewId DataViewsViewId, params *UpdateDataViewDefaultParams, body UpdateDataViewDefaultJSONRequestBody, reqEditors ...RequestEditorFn) (*UpdateDataViewDefaultResponse, error) {
	rsp, err := c.UpdateDataViewDefault(ctx, viewId, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseUpdateDataViewDefaultResponse(rsp)
}

// GetFleetAgentPoliciesWithResponse request returning *GetFleetAgentPoliciesResponse
func (c *ClientWithResponses) GetFleetAgentPoliciesWithResponse(ctx context.Context, params *GetFleetAgentPoliciesParams, reqEditors ...RequestEditorFn) (*GetFleetAgentPoliciesResponse, error) {
	rsp, err := c.GetFleetAgentPolicies(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetAgentPoliciesResponse(rsp)
}

// PostFleetAgentPoliciesWithBodyWithResponse request with arbitrary body returning *PostFleetAgentPoliciesResponse
func (c *ClientWithResponses) PostFleetAgentPoliciesWithBodyWithResponse(ctx context.Context, params *PostFleetAgentPoliciesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetAgentPoliciesResponse, error) {
	rsp, err := c.PostFleetAgentPoliciesWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetAgentPoliciesResponse(rsp)
}

func (c *ClientWithResponses) PostFleetAgentPoliciesWithResponse(ctx context.Context, params *PostFleetAgentPoliciesParams, body PostFleetAgentPoliciesJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetAgentPoliciesResponse, error) {
	rsp, err := c.PostFleetAgentPolicies(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetAgentPoliciesResponse(rsp)
}

// PostFleetAgentPoliciesDeleteWithBodyWithResponse request with arbitrary body returning *PostFleetAgentPoliciesDeleteResponse
func (c *ClientWithResponses) PostFleetAgentPoliciesDeleteWithBodyWithResponse(ctx context.Context, params *PostFleetAgentPoliciesDeleteParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetAgentPoliciesDeleteResponse, error) {
	rsp, err := c.PostFleetAgentPoliciesDeleteWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetAgentPoliciesDeleteResponse(rsp)
}

func (c *ClientWithResponses) PostFleetAgentPoliciesDeleteWithResponse(ctx context.Context, params *PostFleetAgentPoliciesDeleteParams, body PostFleetAgentPoliciesDeleteJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetAgentPoliciesDeleteResponse, error) {
	rsp, err := c.PostFleetAgentPoliciesDelete(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetAgentPoliciesDeleteResponse(rsp)
}

// GetFleetAgentPoliciesAgentpolicyidWithResponse request returning *GetFleetAgentPoliciesAgentpolicyidResponse
func (c *ClientWithResponses) GetFleetAgentPoliciesAgentpolicyidWithResponse(ctx context.Context, agentPolicyId string, params *GetFleetAgentPoliciesAgentpolicyidParams, reqEditors ...RequestEditorFn) (*GetFleetAgentPoliciesAgentpolicyidResponse, error) {
	rsp, err := c.GetFleetAgentPoliciesAgentpolicyid(ctx, agentPolicyId, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetAgentPoliciesAgentpolicyidResponse(rsp)
}

// PutFleetAgentPoliciesAgentpolicyidWithBodyWithResponse request with arbitrary body returning *PutFleetAgentPoliciesAgentpolicyidResponse
func (c *ClientWithResponses) PutFleetAgentPoliciesAgentpolicyidWithBodyWithResponse(ctx context.Context, agentPolicyId string, params *PutFleetAgentPoliciesAgentpolicyidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PutFleetAgentPoliciesAgentpolicyidResponse, error) {
	rsp, err := c.PutFleetAgentPoliciesAgentpolicyidWithBody(ctx, agentPolicyId, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePutFleetAgentPoliciesAgentpolicyidResponse(rsp)
}

func (c *ClientWithResponses) PutFleetAgentPoliciesAgentpolicyidWithResponse(ctx context.Context, agentPolicyId string, params *PutFleetAgentPoliciesAgentpolicyidParams, body PutFleetAgentPoliciesAgentpolicyidJSONRequestBody, reqEditors ...RequestEditorFn) (*PutFleetAgentPoliciesAgentpolicyidResponse, error) {
	rsp, err := c.PutFleetAgentPoliciesAgentpolicyid(ctx, agentPolicyId, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePutFleetAgentPoliciesAgentpolicyidResponse(rsp)
}

// GetFleetEnrollmentApiKeysWithResponse request returning *GetFleetEnrollmentApiKeysResponse
func (c *ClientWithResponses) GetFleetEnrollmentApiKeysWithResponse(ctx context.Context, params *GetFleetEnrollmentApiKeysParams, reqEditors ...RequestEditorFn) (*GetFleetEnrollmentApiKeysResponse, error) {
	rsp, err := c.GetFleetEnrollmentApiKeys(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetEnrollmentApiKeysResponse(rsp)
}

// GetFleetEpmPackagesWithResponse request returning *GetFleetEpmPackagesResponse
func (c *ClientWithResponses) GetFleetEpmPackagesWithResponse(ctx context.Context, params *GetFleetEpmPackagesParams, reqEditors ...RequestEditorFn) (*GetFleetEpmPackagesResponse, error) {
	rsp, err := c.GetFleetEpmPackages(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetEpmPackagesResponse(rsp)
}

// PostFleetEpmPackagesWithBodyWithResponse request with arbitrary body returning *PostFleetEpmPackagesResponse
func (c *ClientWithResponses) PostFleetEpmPackagesWithBodyWithResponse(ctx context.Context, params *PostFleetEpmPackagesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetEpmPackagesResponse, error) {
	rsp, err := c.PostFleetEpmPackagesWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetEpmPackagesResponse(rsp)
}

// DeleteFleetEpmPackagesPkgnamePkgversionWithResponse request returning *DeleteFleetEpmPackagesPkgnamePkgversionResponse
func (c *ClientWithResponses) DeleteFleetEpmPackagesPkgnamePkgversionWithResponse(ctx context.Context, pkgName string, pkgVersion string, params *DeleteFleetEpmPackagesPkgnamePkgversionParams, reqEditors ...RequestEditorFn) (*DeleteFleetEpmPackagesPkgnamePkgversionResponse, error) {
	rsp, err := c.DeleteFleetEpmPackagesPkgnamePkgversion(ctx, pkgName, pkgVersion, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteFleetEpmPackagesPkgnamePkgversionResponse(rsp)
}

// GetFleetEpmPackagesPkgnamePkgversionWithResponse request returning *GetFleetEpmPackagesPkgnamePkgversionResponse
func (c *ClientWithResponses) GetFleetEpmPackagesPkgnamePkgversionWithResponse(ctx context.Context, pkgName string, pkgVersion string, params *GetFleetEpmPackagesPkgnamePkgversionParams, reqEditors ...RequestEditorFn) (*GetFleetEpmPackagesPkgnamePkgversionResponse, error) {
	rsp, err := c.GetFleetEpmPackagesPkgnamePkgversion(ctx, pkgName, pkgVersion, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetEpmPackagesPkgnamePkgversionResponse(rsp)
}

// PostFleetEpmPackagesPkgnamePkgversionWithBodyWithResponse request with arbitrary body returning *PostFleetEpmPackagesPkgnamePkgversionResponse
func (c *ClientWithResponses) PostFleetEpmPackagesPkgnamePkgversionWithBodyWithResponse(ctx context.Context, pkgName string, pkgVersion string, params *PostFleetEpmPackagesPkgnamePkgversionParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetEpmPackagesPkgnamePkgversionResponse, error) {
	rsp, err := c.PostFleetEpmPackagesPkgnamePkgversionWithBody(ctx, pkgName, pkgVersion, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetEpmPackagesPkgnamePkgversionResponse(rsp)
}

func (c *ClientWithResponses) PostFleetEpmPackagesPkgnamePkgversionWithResponse(ctx context.Context, pkgName string, pkgVersion string, params *PostFleetEpmPackagesPkgnamePkgversionParams, body PostFleetEpmPackagesPkgnamePkgversionJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetEpmPackagesPkgnamePkgversionResponse, error) {
	rsp, err := c.PostFleetEpmPackagesPkgnamePkgversion(ctx, pkgName, pkgVersion, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetEpmPackagesPkgnamePkgversionResponse(rsp)
}

// GetFleetFleetServerHostsWithResponse request returning *GetFleetFleetServerHostsResponse
func (c *ClientWithResponses) GetFleetFleetServerHostsWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*GetFleetFleetServerHostsResponse, error) {
	rsp, err := c.GetFleetFleetServerHosts(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetFleetServerHostsResponse(rsp)
}

// PostFleetFleetServerHostsWithBodyWithResponse request with arbitrary body returning *PostFleetFleetServerHostsResponse
func (c *ClientWithResponses) PostFleetFleetServerHostsWithBodyWithResponse(ctx context.Context, params *PostFleetFleetServerHostsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetFleetServerHostsResponse, error) {
	rsp, err := c.PostFleetFleetServerHostsWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetFleetServerHostsResponse(rsp)
}

func (c *ClientWithResponses) PostFleetFleetServerHostsWithResponse(ctx context.Context, params *PostFleetFleetServerHostsParams, body PostFleetFleetServerHostsJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetFleetServerHostsResponse, error) {
	rsp, err := c.PostFleetFleetServerHosts(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetFleetServerHostsResponse(rsp)
}

// DeleteFleetFleetServerHostsItemidWithResponse request returning *DeleteFleetFleetServerHostsItemidResponse
func (c *ClientWithResponses) DeleteFleetFleetServerHostsItemidWithResponse(ctx context.Context, itemId string, params *DeleteFleetFleetServerHostsItemidParams, reqEditors ...RequestEditorFn) (*DeleteFleetFleetServerHostsItemidResponse, error) {
	rsp, err := c.DeleteFleetFleetServerHostsItemid(ctx, itemId, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteFleetFleetServerHostsItemidResponse(rsp)
}

// GetFleetFleetServerHostsItemidWithResponse request returning *GetFleetFleetServerHostsItemidResponse
func (c *ClientWithResponses) GetFleetFleetServerHostsItemidWithResponse(ctx context.Context, itemId string, reqEditors ...RequestEditorFn) (*GetFleetFleetServerHostsItemidResponse, error) {
	rsp, err := c.GetFleetFleetServerHostsItemid(ctx, itemId, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetFleetServerHostsItemidResponse(rsp)
}

// PutFleetFleetServerHostsItemidWithBodyWithResponse request with arbitrary body returning *PutFleetFleetServerHostsItemidResponse
func (c *ClientWithResponses) PutFleetFleetServerHostsItemidWithBodyWithResponse(ctx context.Context, itemId string, params *PutFleetFleetServerHostsItemidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PutFleetFleetServerHostsItemidResponse, error) {
	rsp, err := c.PutFleetFleetServerHostsItemidWithBody(ctx, itemId, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePutFleetFleetServerHostsItemidResponse(rsp)
}

func (c *ClientWithResponses) PutFleetFleetServerHostsItemidWithResponse(ctx context.Context, itemId string, params *PutFleetFleetServerHostsItemidParams, body PutFleetFleetServerHostsItemidJSONRequestBody, reqEditors ...RequestEditorFn) (*PutFleetFleetServerHostsItemidResponse, error) {
	rsp, err := c.PutFleetFleetServerHostsItemid(ctx, itemId, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePutFleetFleetServerHostsItemidResponse(rsp)
}

// GetFleetOutputsWithResponse request returning *GetFleetOutputsResponse
func (c *ClientWithResponses) GetFleetOutputsWithResponse(ctx context.Context, reqEditors ...RequestEditorFn) (*GetFleetOutputsResponse, error) {
	rsp, err := c.GetFleetOutputs(ctx, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetOutputsResponse(rsp)
}

// PostFleetOutputsWithBodyWithResponse request with arbitrary body returning *PostFleetOutputsResponse
func (c *ClientWithResponses) PostFleetOutputsWithBodyWithResponse(ctx context.Context, params *PostFleetOutputsParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetOutputsResponse, error) {
	rsp, err := c.PostFleetOutputsWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetOutputsResponse(rsp)
}

func (c *ClientWithResponses) PostFleetOutputsWithResponse(ctx context.Context, params *PostFleetOutputsParams, body PostFleetOutputsJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetOutputsResponse, error) {
	rsp, err := c.PostFleetOutputs(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetOutputsResponse(rsp)
}

// DeleteFleetOutputsOutputidWithResponse request returning *DeleteFleetOutputsOutputidResponse
func (c *ClientWithResponses) DeleteFleetOutputsOutputidWithResponse(ctx context.Context, outputId string, params *DeleteFleetOutputsOutputidParams, reqEditors ...RequestEditorFn) (*DeleteFleetOutputsOutputidResponse, error) {
	rsp, err := c.DeleteFleetOutputsOutputid(ctx, outputId, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteFleetOutputsOutputidResponse(rsp)
}

// GetFleetOutputsOutputidWithResponse request returning *GetFleetOutputsOutputidResponse
func (c *ClientWithResponses) GetFleetOutputsOutputidWithResponse(ctx context.Context, outputId string, reqEditors ...RequestEditorFn) (*GetFleetOutputsOutputidResponse, error) {
	rsp, err := c.GetFleetOutputsOutputid(ctx, outputId, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetOutputsOutputidResponse(rsp)
}

// PutFleetOutputsOutputidWithBodyWithResponse request with arbitrary body returning *PutFleetOutputsOutputidResponse
func (c *ClientWithResponses) PutFleetOutputsOutputidWithBodyWithResponse(ctx context.Context, outputId string, params *PutFleetOutputsOutputidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PutFleetOutputsOutputidResponse, error) {
	rsp, err := c.PutFleetOutputsOutputidWithBody(ctx, outputId, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePutFleetOutputsOutputidResponse(rsp)
}

func (c *ClientWithResponses) PutFleetOutputsOutputidWithResponse(ctx context.Context, outputId string, params *PutFleetOutputsOutputidParams, body PutFleetOutputsOutputidJSONRequestBody, reqEditors ...RequestEditorFn) (*PutFleetOutputsOutputidResponse, error) {
	rsp, err := c.PutFleetOutputsOutputid(ctx, outputId, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePutFleetOutputsOutputidResponse(rsp)
}

// GetFleetPackagePoliciesWithResponse request returning *GetFleetPackagePoliciesResponse
func (c *ClientWithResponses) GetFleetPackagePoliciesWithResponse(ctx context.Context, params *GetFleetPackagePoliciesParams, reqEditors ...RequestEditorFn) (*GetFleetPackagePoliciesResponse, error) {
	rsp, err := c.GetFleetPackagePolicies(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetPackagePoliciesResponse(rsp)
}

// PostFleetPackagePoliciesWithBodyWithResponse request with arbitrary body returning *PostFleetPackagePoliciesResponse
func (c *ClientWithResponses) PostFleetPackagePoliciesWithBodyWithResponse(ctx context.Context, params *PostFleetPackagePoliciesParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostFleetPackagePoliciesResponse, error) {
	rsp, err := c.PostFleetPackagePoliciesWithBody(ctx, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetPackagePoliciesResponse(rsp)
}

func (c *ClientWithResponses) PostFleetPackagePoliciesWithResponse(ctx context.Context, params *PostFleetPackagePoliciesParams, body PostFleetPackagePoliciesJSONRequestBody, reqEditors ...RequestEditorFn) (*PostFleetPackagePoliciesResponse, error) {
	rsp, err := c.PostFleetPackagePolicies(ctx, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostFleetPackagePoliciesResponse(rsp)
}

// DeleteFleetPackagePoliciesPackagepolicyidWithResponse request returning *DeleteFleetPackagePoliciesPackagepolicyidResponse
func (c *ClientWithResponses) DeleteFleetPackagePoliciesPackagepolicyidWithResponse(ctx context.Context, packagePolicyId string, params *DeleteFleetPackagePoliciesPackagepolicyidParams, reqEditors ...RequestEditorFn) (*DeleteFleetPackagePoliciesPackagepolicyidResponse, error) {
	rsp, err := c.DeleteFleetPackagePoliciesPackagepolicyid(ctx, packagePolicyId, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteFleetPackagePoliciesPackagepolicyidResponse(rsp)
}

// GetFleetPackagePoliciesPackagepolicyidWithResponse request returning *GetFleetPackagePoliciesPackagepolicyidResponse
func (c *ClientWithResponses) GetFleetPackagePoliciesPackagepolicyidWithResponse(ctx context.Context, packagePolicyId string, params *GetFleetPackagePoliciesPackagepolicyidParams, reqEditors ...RequestEditorFn) (*GetFleetPackagePoliciesPackagepolicyidResponse, error) {
	rsp, err := c.GetFleetPackagePoliciesPackagepolicyid(ctx, packagePolicyId, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetFleetPackagePoliciesPackagepolicyidResponse(rsp)
}

// PutFleetPackagePoliciesPackagepolicyidWithBodyWithResponse request with arbitrary body returning *PutFleetPackagePoliciesPackagepolicyidResponse
func (c *ClientWithResponses) PutFleetPackagePoliciesPackagepolicyidWithBodyWithResponse(ctx context.Context, packagePolicyId string, params *PutFleetPackagePoliciesPackagepolicyidParams, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PutFleetPackagePoliciesPackagepolicyidResponse, error) {
	rsp, err := c.PutFleetPackagePoliciesPackagepolicyidWithBody(ctx, packagePolicyId, params, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePutFleetPackagePoliciesPackagepolicyidResponse(rsp)
}

func (c *ClientWithResponses) PutFleetPackagePoliciesPackagepolicyidWithResponse(ctx context.Context, packagePolicyId string, params *PutFleetPackagePoliciesPackagepolicyidParams, body PutFleetPackagePoliciesPackagepolicyidJSONRequestBody, reqEditors ...RequestEditorFn) (*PutFleetPackagePoliciesPackagepolicyidResponse, error) {
	rsp, err := c.PutFleetPackagePoliciesPackagepolicyid(ctx, packagePolicyId, params, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePutFleetPackagePoliciesPackagepolicyidResponse(rsp)
}

// GetStatusWithResponse request returning *GetStatusResponse
func (c *ClientWithResponses) GetStatusWithResponse(ctx context.Context, params *GetStatusParams, reqEditors ...RequestEditorFn) (*GetStatusResponse, error) {
	rsp, err := c.GetStatus(ctx, params, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetStatusResponse(rsp)
}

// PostParametersWithBodyWithResponse request with arbitrary body returning *PostParametersResponse
func (c *ClientWithResponses) PostParametersWithBodyWithResponse(ctx context.Context, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PostParametersResponse, error) {
	rsp, err := c.PostParametersWithBody(ctx, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostParametersResponse(rsp)
}

func (c *ClientWithResponses) PostParametersWithResponse(ctx context.Context, body PostParametersJSONRequestBody, reqEditors ...RequestEditorFn) (*PostParametersResponse, error) {
	rsp, err := c.PostParameters(ctx, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePostParametersResponse(rsp)
}

// DeleteParameterWithResponse request returning *DeleteParameterResponse
func (c *ClientWithResponses) DeleteParameterWithResponse(ctx context.Context, id string, reqEditors ...RequestEditorFn) (*DeleteParameterResponse, error) {
	rsp, err := c.DeleteParameter(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseDeleteParameterResponse(rsp)
}

// GetParameterWithResponse request returning *GetParameterResponse
func (c *ClientWithResponses) GetParameterWithResponse(ctx context.Context, id string, reqEditors ...RequestEditorFn) (*GetParameterResponse, error) {
	rsp, err := c.GetParameter(ctx, id, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParseGetParameterResponse(rsp)
}

// PutParameterWithBodyWithResponse request with arbitrary body returning *PutParameterResponse
func (c *ClientWithResponses) PutParameterWithBodyWithResponse(ctx context.Context, id string, contentType string, body io.Reader, reqEditors ...RequestEditorFn) (*PutParameterResponse, error) {
	rsp, err := c.PutParameterWithBody(ctx, id, contentType, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePutParameterResponse(rsp)
}

func (c *ClientWithResponses) PutParameterWithResponse(ctx context.Context, id string, body PutParameterJSONRequestBody, reqEditors ...RequestEditorFn) (*PutParameterResponse, error) {
	rsp, err := c.PutParameter(ctx, id, body, reqEditors...)
	if err != nil {
		return nil, err
	}
	return ParsePutParameterResponse(rsp)
}

// ParseGetAllDataViewsDefaultResponse parses an HTTP response from a GetAllDataViewsDefaultWithResponse call
func ParseGetAllDataViewsDefaultResponse(rsp *http.Response) (*GetAllDataViewsDefaultResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetAllDataViewsDefaultResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			DataView *[]struct {
				Id         *string                 `json:"id,omitempty"`
				Name       *string                 `json:"name,omitempty"`
				Namespaces *[]string               `json:"namespaces,omitempty"`
				Title      *string                 `json:"title,omitempty"`
				TypeMeta   *map[string]interface{} `json:"typeMeta,omitempty"`
			} `json:"data_view,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest DataViews400Response
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseCreateDataViewDefaultwResponse parses an HTTP response from a CreateDataViewDefaultwWithResponse call
func ParseCreateDataViewDefaultwResponse(rsp *http.Response) (*CreateDataViewDefaultwResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &CreateDataViewDefaultwResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest DataViewsDataViewResponseObject
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest DataViews400Response
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseDeleteDataViewDefaultResponse parses an HTTP response from a DeleteDataViewDefaultWithResponse call
func ParseDeleteDataViewDefaultResponse(rsp *http.Response) (*DeleteDataViewDefaultResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteDataViewDefaultResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest DataViews404Response
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseGetDataViewDefaultResponse parses an HTTP response from a GetDataViewDefaultWithResponse call
func ParseGetDataViewDefaultResponse(rsp *http.Response) (*GetDataViewDefaultResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetDataViewDefaultResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest DataViewsDataViewResponseObject
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest DataViews404Response
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseUpdateDataViewDefaultResponse parses an HTTP response from a UpdateDataViewDefaultWithResponse call
func ParseUpdateDataViewDefaultResponse(rsp *http.Response) (*UpdateDataViewDefaultResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &UpdateDataViewDefaultResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest DataViewsDataViewResponseObject
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest DataViews400Response
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseGetFleetAgentPoliciesResponse parses an HTTP response from a GetFleetAgentPoliciesWithResponse call
func ParseGetFleetAgentPoliciesResponse(rsp *http.Response) (*GetFleetAgentPoliciesResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetAgentPoliciesResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Items []struct {
				AdvancedSettings *struct {
					AgentDownloadTargetDirectory      *interface{} `json:"agent_download_target_directory,omitempty"`
					AgentDownloadTimeout              *interface{} `json:"agent_download_timeout,omitempty"`
					AgentLimitsGoMaxProcs             *interface{} `json:"agent_limits_go_max_procs,omitempty"`
					AgentLoggingFilesInterval         *interface{} `json:"agent_logging_files_interval,omitempty"`
					AgentLoggingFilesKeepfiles        *interface{} `json:"agent_logging_files_keepfiles,omitempty"`
					AgentLoggingFilesRotateeverybytes *interface{} `json:"agent_logging_files_rotateeverybytes,omitempty"`
					AgentLoggingLevel                 *interface{} `json:"agent_logging_level,omitempty"`
					AgentLoggingMetricsPeriod         *interface{} `json:"agent_logging_metrics_period,omitempty"`
					AgentLoggingToFiles               *interface{} `json:"agent_logging_to_files,omitempty"`
				} `json:"advanced_settings,omitempty"`
				AgentFeatures *[]struct {
					Enabled bool   `json:"enabled"`
					Name    string `json:"name"`
				} `json:"agent_features,omitempty"`
				Agentless *struct {
					CloudConnectors *struct {
						Enabled   bool    `json:"enabled"`
						TargetCsp *string `json:"target_csp,omitempty"`
					} `json:"cloud_connectors,omitempty"`
					Resources *struct {
						Requests *struct {
							Cpu    *string `json:"cpu,omitempty"`
							Memory *string `json:"memory,omitempty"`
						} `json:"requests,omitempty"`
					} `json:"resources,omitempty"`
				} `json:"agentless,omitempty"`
				Agents            *float32 `json:"agents,omitempty"`
				DataOutputId      *string  `json:"data_output_id,omitempty"`
				Description       *string  `json:"description,omitempty"`
				DownloadSourceId  *string  `json:"download_source_id,omitempty"`
				FleetServerHostId *string  `json:"fleet_server_host_id,omitempty"`

				// GlobalDataTags User defined data tags that are added to all of the inputs. The values can be strings or numbers.
				GlobalDataTags *[]struct {
					Name  string                                               `json:"name"`
					Value GetFleetAgentPolicies_200_Items_GlobalDataTags_Value `json:"value"`
				} `json:"global_data_tags,omitempty"`
				HasFleetServer       *bool    `json:"has_fleet_server,omitempty"`
				Id                   string   `json:"id"`
				InactivityTimeout    *float32 `json:"inactivity_timeout,omitempty"`
				IsDefault            *bool    `json:"is_default,omitempty"`
				IsDefaultFleetServer *bool    `json:"is_default_fleet_server,omitempty"`
				IsManaged            bool     `json:"is_managed"`
				IsPreconfigured      *bool    `json:"is_preconfigured,omitempty"`

				// IsProtected Indicates whether the agent policy has tamper protection enabled. Default false.
				IsProtected bool `json:"is_protected"`

				// KeepMonitoringAlive When set to true, monitoring will be enabled but logs/metrics collection will be disabled
				KeepMonitoringAlive   *bool `json:"keep_monitoring_alive,omitempty"`
				MonitoringDiagnostics *struct {
					Limit *struct {
						Burst    *float32 `json:"burst,omitempty"`
						Interval *string  `json:"interval,omitempty"`
					} `json:"limit,omitempty"`
					Uploader *struct {
						InitDur    *string  `json:"init_dur,omitempty"`
						MaxDur     *string  `json:"max_dur,omitempty"`
						MaxRetries *float32 `json:"max_retries,omitempty"`
					} `json:"uploader,omitempty"`
				} `json:"monitoring_diagnostics,omitempty"`
				MonitoringEnabled *[]GetFleetAgentPolicies200ItemsMonitoringEnabled `json:"monitoring_enabled,omitempty"`
				MonitoringHttp    *struct {
					Buffer *struct {
						Enabled *bool `json:"enabled,omitempty"`
					} `json:"buffer,omitempty"`
					Enabled *bool    `json:"enabled,omitempty"`
					Host    *string  `json:"host,omitempty"`
					Port    *float32 `json:"port,omitempty"`
				} `json:"monitoring_http,omitempty"`
				MonitoringOutputId     *string `json:"monitoring_output_id,omitempty"`
				MonitoringPprofEnabled *bool   `json:"monitoring_pprof_enabled,omitempty"`
				Name                   string  `json:"name"`
				Namespace              string  `json:"namespace"`

				// Overrides Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.
				Overrides        *map[string]interface{}                          `json:"overrides,omitempty"`
				PackagePolicies  *GetFleetAgentPolicies_200_Items_PackagePolicies `json:"package_policies,omitempty"`
				RequiredVersions *[]struct {
					// Percentage Target percentage of agents to auto upgrade
					Percentage float32 `json:"percentage"`

					// Version Target version for automatic agent upgrade
					Version string `json:"version"`
				} `json:"required_versions,omitempty"`
				Revision      float32                             `json:"revision"`
				SchemaVersion *string                             `json:"schema_version,omitempty"`
				SpaceIds      *[]string                           `json:"space_ids,omitempty"`
				Status        GetFleetAgentPolicies200ItemsStatus `json:"status"`

				// SupportsAgentless Indicates whether the agent policy supports agentless integrations.
				SupportsAgentless  *bool    `json:"supports_agentless,omitempty"`
				UnenrollTimeout    *float32 `json:"unenroll_timeout,omitempty"`
				UnprivilegedAgents *float32 `json:"unprivileged_agents,omitempty"`
				UpdatedAt          string   `json:"updated_at"`
				UpdatedBy          string   `json:"updated_by"`
				Version            *string  `json:"version,omitempty"`
			} `json:"items"`
			Page    float32 `json:"page"`
			PerPage float32 `json:"perPage"`
			Total   float32 `json:"total"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParsePostFleetAgentPoliciesResponse parses an HTTP response from a PostFleetAgentPoliciesWithResponse call
func ParsePostFleetAgentPoliciesResponse(rsp *http.Response) (*PostFleetAgentPoliciesResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostFleetAgentPoliciesResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item struct {
				AdvancedSettings *struct {
					AgentDownloadTargetDirectory      *interface{} `json:"agent_download_target_directory,omitempty"`
					AgentDownloadTimeout              *interface{} `json:"agent_download_timeout,omitempty"`
					AgentLimitsGoMaxProcs             *interface{} `json:"agent_limits_go_max_procs,omitempty"`
					AgentLoggingFilesInterval         *interface{} `json:"agent_logging_files_interval,omitempty"`
					AgentLoggingFilesKeepfiles        *interface{} `json:"agent_logging_files_keepfiles,omitempty"`
					AgentLoggingFilesRotateeverybytes *interface{} `json:"agent_logging_files_rotateeverybytes,omitempty"`
					AgentLoggingLevel                 *interface{} `json:"agent_logging_level,omitempty"`
					AgentLoggingMetricsPeriod         *interface{} `json:"agent_logging_metrics_period,omitempty"`
					AgentLoggingToFiles               *interface{} `json:"agent_logging_to_files,omitempty"`
				} `json:"advanced_settings,omitempty"`
				AgentFeatures *[]struct {
					Enabled bool   `json:"enabled"`
					Name    string `json:"name"`
				} `json:"agent_features,omitempty"`
				Agentless *struct {
					CloudConnectors *struct {
						Enabled   bool    `json:"enabled"`
						TargetCsp *string `json:"target_csp,omitempty"`
					} `json:"cloud_connectors,omitempty"`
					Resources *struct {
						Requests *struct {
							Cpu    *string `json:"cpu,omitempty"`
							Memory *string `json:"memory,omitempty"`
						} `json:"requests,omitempty"`
					} `json:"resources,omitempty"`
				} `json:"agentless,omitempty"`
				Agents            *float32 `json:"agents,omitempty"`
				DataOutputId      *string  `json:"data_output_id,omitempty"`
				Description       *string  `json:"description,omitempty"`
				DownloadSourceId  *string  `json:"download_source_id,omitempty"`
				FleetServerHostId *string  `json:"fleet_server_host_id,omitempty"`

				// GlobalDataTags User defined data tags that are added to all of the inputs. The values can be strings or numbers.
				GlobalDataTags *[]struct {
					Name  string                                               `json:"name"`
					Value PostFleetAgentPolicies_200_Item_GlobalDataTags_Value `json:"value"`
				} `json:"global_data_tags,omitempty"`
				HasFleetServer       *bool    `json:"has_fleet_server,omitempty"`
				Id                   string   `json:"id"`
				InactivityTimeout    *float32 `json:"inactivity_timeout,omitempty"`
				IsDefault            *bool    `json:"is_default,omitempty"`
				IsDefaultFleetServer *bool    `json:"is_default_fleet_server,omitempty"`
				IsManaged            bool     `json:"is_managed"`
				IsPreconfigured      *bool    `json:"is_preconfigured,omitempty"`

				// IsProtected Indicates whether the agent policy has tamper protection enabled. Default false.
				IsProtected bool `json:"is_protected"`

				// KeepMonitoringAlive When set to true, monitoring will be enabled but logs/metrics collection will be disabled
				KeepMonitoringAlive   *bool `json:"keep_monitoring_alive,omitempty"`
				MonitoringDiagnostics *struct {
					Limit *struct {
						Burst    *float32 `json:"burst,omitempty"`
						Interval *string  `json:"interval,omitempty"`
					} `json:"limit,omitempty"`
					Uploader *struct {
						InitDur    *string  `json:"init_dur,omitempty"`
						MaxDur     *string  `json:"max_dur,omitempty"`
						MaxRetries *float32 `json:"max_retries,omitempty"`
					} `json:"uploader,omitempty"`
				} `json:"monitoring_diagnostics,omitempty"`
				MonitoringEnabled *[]PostFleetAgentPolicies200ItemMonitoringEnabled `json:"monitoring_enabled,omitempty"`
				MonitoringHttp    *struct {
					Buffer *struct {
						Enabled *bool `json:"enabled,omitempty"`
					} `json:"buffer,omitempty"`
					Enabled *bool    `json:"enabled,omitempty"`
					Host    *string  `json:"host,omitempty"`
					Port    *float32 `json:"port,omitempty"`
				} `json:"monitoring_http,omitempty"`
				MonitoringOutputId     *string `json:"monitoring_output_id,omitempty"`
				MonitoringPprofEnabled *bool   `json:"monitoring_pprof_enabled,omitempty"`
				Name                   string  `json:"name"`
				Namespace              string  `json:"namespace"`

				// Overrides Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.
				Overrides        *map[string]interface{}                          `json:"overrides,omitempty"`
				PackagePolicies  *PostFleetAgentPolicies_200_Item_PackagePolicies `json:"package_policies,omitempty"`
				RequiredVersions *[]struct {
					// Percentage Target percentage of agents to auto upgrade
					Percentage float32 `json:"percentage"`

					// Version Target version for automatic agent upgrade
					Version string `json:"version"`
				} `json:"required_versions,omitempty"`
				Revision      float32                             `json:"revision"`
				SchemaVersion *string                             `json:"schema_version,omitempty"`
				SpaceIds      *[]string                           `json:"space_ids,omitempty"`
				Status        PostFleetAgentPolicies200ItemStatus `json:"status"`

				// SupportsAgentless Indicates whether the agent policy supports agentless integrations.
				SupportsAgentless  *bool    `json:"supports_agentless,omitempty"`
				UnenrollTimeout    *float32 `json:"unenroll_timeout,omitempty"`
				UnprivilegedAgents *float32 `json:"unprivileged_agents,omitempty"`
				UpdatedAt          string   `json:"updated_at"`
				UpdatedBy          string   `json:"updated_by"`
				Version            *string  `json:"version,omitempty"`
			} `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParsePostFleetAgentPoliciesDeleteResponse parses an HTTP response from a PostFleetAgentPoliciesDeleteWithResponse call
func ParsePostFleetAgentPoliciesDeleteResponse(rsp *http.Response) (*PostFleetAgentPoliciesDeleteResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostFleetAgentPoliciesDeleteResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Id   string `json:"id"`
			Name string `json:"name"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseGetFleetAgentPoliciesAgentpolicyidResponse parses an HTTP response from a GetFleetAgentPoliciesAgentpolicyidWithResponse call
func ParseGetFleetAgentPoliciesAgentpolicyidResponse(rsp *http.Response) (*GetFleetAgentPoliciesAgentpolicyidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetAgentPoliciesAgentpolicyidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item struct {
				AdvancedSettings *struct {
					AgentDownloadTargetDirectory      *interface{} `json:"agent_download_target_directory,omitempty"`
					AgentDownloadTimeout              *interface{} `json:"agent_download_timeout,omitempty"`
					AgentLimitsGoMaxProcs             *interface{} `json:"agent_limits_go_max_procs,omitempty"`
					AgentLoggingFilesInterval         *interface{} `json:"agent_logging_files_interval,omitempty"`
					AgentLoggingFilesKeepfiles        *interface{} `json:"agent_logging_files_keepfiles,omitempty"`
					AgentLoggingFilesRotateeverybytes *interface{} `json:"agent_logging_files_rotateeverybytes,omitempty"`
					AgentLoggingLevel                 *interface{} `json:"agent_logging_level,omitempty"`
					AgentLoggingMetricsPeriod         *interface{} `json:"agent_logging_metrics_period,omitempty"`
					AgentLoggingToFiles               *interface{} `json:"agent_logging_to_files,omitempty"`
				} `json:"advanced_settings,omitempty"`
				AgentFeatures *[]struct {
					Enabled bool   `json:"enabled"`
					Name    string `json:"name"`
				} `json:"agent_features,omitempty"`
				Agentless *struct {
					CloudConnectors *struct {
						Enabled   bool    `json:"enabled"`
						TargetCsp *string `json:"target_csp,omitempty"`
					} `json:"cloud_connectors,omitempty"`
					Resources *struct {
						Requests *struct {
							Cpu    *string `json:"cpu,omitempty"`
							Memory *string `json:"memory,omitempty"`
						} `json:"requests,omitempty"`
					} `json:"resources,omitempty"`
				} `json:"agentless,omitempty"`
				Agents            *float32 `json:"agents,omitempty"`
				DataOutputId      *string  `json:"data_output_id,omitempty"`
				Description       *string  `json:"description,omitempty"`
				DownloadSourceId  *string  `json:"download_source_id,omitempty"`
				FleetServerHostId *string  `json:"fleet_server_host_id,omitempty"`

				// GlobalDataTags User defined data tags that are added to all of the inputs. The values can be strings or numbers.
				GlobalDataTags *[]struct {
					Name  string                                                           `json:"name"`
					Value GetFleetAgentPoliciesAgentpolicyid_200_Item_GlobalDataTags_Value `json:"value"`
				} `json:"global_data_tags,omitempty"`
				HasFleetServer       *bool    `json:"has_fleet_server,omitempty"`
				Id                   string   `json:"id"`
				InactivityTimeout    *float32 `json:"inactivity_timeout,omitempty"`
				IsDefault            *bool    `json:"is_default,omitempty"`
				IsDefaultFleetServer *bool    `json:"is_default_fleet_server,omitempty"`
				IsManaged            bool     `json:"is_managed"`
				IsPreconfigured      *bool    `json:"is_preconfigured,omitempty"`

				// IsProtected Indicates whether the agent policy has tamper protection enabled. Default false.
				IsProtected bool `json:"is_protected"`

				// KeepMonitoringAlive When set to true, monitoring will be enabled but logs/metrics collection will be disabled
				KeepMonitoringAlive   *bool `json:"keep_monitoring_alive,omitempty"`
				MonitoringDiagnostics *struct {
					Limit *struct {
						Burst    *float32 `json:"burst,omitempty"`
						Interval *string  `json:"interval,omitempty"`
					} `json:"limit,omitempty"`
					Uploader *struct {
						InitDur    *string  `json:"init_dur,omitempty"`
						MaxDur     *string  `json:"max_dur,omitempty"`
						MaxRetries *float32 `json:"max_retries,omitempty"`
					} `json:"uploader,omitempty"`
				} `json:"monitoring_diagnostics,omitempty"`
				MonitoringEnabled *[]GetFleetAgentPoliciesAgentpolicyid200ItemMonitoringEnabled `json:"monitoring_enabled,omitempty"`
				MonitoringHttp    *struct {
					Buffer *struct {
						Enabled *bool `json:"enabled,omitempty"`
					} `json:"buffer,omitempty"`
					Enabled *bool    `json:"enabled,omitempty"`
					Host    *string  `json:"host,omitempty"`
					Port    *float32 `json:"port,omitempty"`
				} `json:"monitoring_http,omitempty"`
				MonitoringOutputId     *string `json:"monitoring_output_id,omitempty"`
				MonitoringPprofEnabled *bool   `json:"monitoring_pprof_enabled,omitempty"`
				Name                   string  `json:"name"`
				Namespace              string  `json:"namespace"`

				// Overrides Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.
				Overrides        *map[string]interface{}                                      `json:"overrides,omitempty"`
				PackagePolicies  *GetFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies `json:"package_policies,omitempty"`
				RequiredVersions *[]struct {
					// Percentage Target percentage of agents to auto upgrade
					Percentage float32 `json:"percentage"`

					// Version Target version for automatic agent upgrade
					Version string `json:"version"`
				} `json:"required_versions,omitempty"`
				Revision      float32                                         `json:"revision"`
				SchemaVersion *string                                         `json:"schema_version,omitempty"`
				SpaceIds      *[]string                                       `json:"space_ids,omitempty"`
				Status        GetFleetAgentPoliciesAgentpolicyid200ItemStatus `json:"status"`

				// SupportsAgentless Indicates whether the agent policy supports agentless integrations.
				SupportsAgentless  *bool    `json:"supports_agentless,omitempty"`
				UnenrollTimeout    *float32 `json:"unenroll_timeout,omitempty"`
				UnprivilegedAgents *float32 `json:"unprivileged_agents,omitempty"`
				UpdatedAt          string   `json:"updated_at"`
				UpdatedBy          string   `json:"updated_by"`
				Version            *string  `json:"version,omitempty"`
			} `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParsePutFleetAgentPoliciesAgentpolicyidResponse parses an HTTP response from a PutFleetAgentPoliciesAgentpolicyidWithResponse call
func ParsePutFleetAgentPoliciesAgentpolicyidResponse(rsp *http.Response) (*PutFleetAgentPoliciesAgentpolicyidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PutFleetAgentPoliciesAgentpolicyidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item struct {
				AdvancedSettings *struct {
					AgentDownloadTargetDirectory      *interface{} `json:"agent_download_target_directory,omitempty"`
					AgentDownloadTimeout              *interface{} `json:"agent_download_timeout,omitempty"`
					AgentLimitsGoMaxProcs             *interface{} `json:"agent_limits_go_max_procs,omitempty"`
					AgentLoggingFilesInterval         *interface{} `json:"agent_logging_files_interval,omitempty"`
					AgentLoggingFilesKeepfiles        *interface{} `json:"agent_logging_files_keepfiles,omitempty"`
					AgentLoggingFilesRotateeverybytes *interface{} `json:"agent_logging_files_rotateeverybytes,omitempty"`
					AgentLoggingLevel                 *interface{} `json:"agent_logging_level,omitempty"`
					AgentLoggingMetricsPeriod         *interface{} `json:"agent_logging_metrics_period,omitempty"`
					AgentLoggingToFiles               *interface{} `json:"agent_logging_to_files,omitempty"`
				} `json:"advanced_settings,omitempty"`
				AgentFeatures *[]struct {
					Enabled bool   `json:"enabled"`
					Name    string `json:"name"`
				} `json:"agent_features,omitempty"`
				Agentless *struct {
					CloudConnectors *struct {
						Enabled   bool    `json:"enabled"`
						TargetCsp *string `json:"target_csp,omitempty"`
					} `json:"cloud_connectors,omitempty"`
					Resources *struct {
						Requests *struct {
							Cpu    *string `json:"cpu,omitempty"`
							Memory *string `json:"memory,omitempty"`
						} `json:"requests,omitempty"`
					} `json:"resources,omitempty"`
				} `json:"agentless,omitempty"`
				Agents            *float32 `json:"agents,omitempty"`
				DataOutputId      *string  `json:"data_output_id,omitempty"`
				Description       *string  `json:"description,omitempty"`
				DownloadSourceId  *string  `json:"download_source_id,omitempty"`
				FleetServerHostId *string  `json:"fleet_server_host_id,omitempty"`

				// GlobalDataTags User defined data tags that are added to all of the inputs. The values can be strings or numbers.
				GlobalDataTags *[]struct {
					Name  string                                                           `json:"name"`
					Value PutFleetAgentPoliciesAgentpolicyid_200_Item_GlobalDataTags_Value `json:"value"`
				} `json:"global_data_tags,omitempty"`
				HasFleetServer       *bool    `json:"has_fleet_server,omitempty"`
				Id                   string   `json:"id"`
				InactivityTimeout    *float32 `json:"inactivity_timeout,omitempty"`
				IsDefault            *bool    `json:"is_default,omitempty"`
				IsDefaultFleetServer *bool    `json:"is_default_fleet_server,omitempty"`
				IsManaged            bool     `json:"is_managed"`
				IsPreconfigured      *bool    `json:"is_preconfigured,omitempty"`

				// IsProtected Indicates whether the agent policy has tamper protection enabled. Default false.
				IsProtected bool `json:"is_protected"`

				// KeepMonitoringAlive When set to true, monitoring will be enabled but logs/metrics collection will be disabled
				KeepMonitoringAlive   *bool `json:"keep_monitoring_alive,omitempty"`
				MonitoringDiagnostics *struct {
					Limit *struct {
						Burst    *float32 `json:"burst,omitempty"`
						Interval *string  `json:"interval,omitempty"`
					} `json:"limit,omitempty"`
					Uploader *struct {
						InitDur    *string  `json:"init_dur,omitempty"`
						MaxDur     *string  `json:"max_dur,omitempty"`
						MaxRetries *float32 `json:"max_retries,omitempty"`
					} `json:"uploader,omitempty"`
				} `json:"monitoring_diagnostics,omitempty"`
				MonitoringEnabled *[]PutFleetAgentPoliciesAgentpolicyid200ItemMonitoringEnabled `json:"monitoring_enabled,omitempty"`
				MonitoringHttp    *struct {
					Buffer *struct {
						Enabled *bool `json:"enabled,omitempty"`
					} `json:"buffer,omitempty"`
					Enabled *bool    `json:"enabled,omitempty"`
					Host    *string  `json:"host,omitempty"`
					Port    *float32 `json:"port,omitempty"`
				} `json:"monitoring_http,omitempty"`
				MonitoringOutputId     *string `json:"monitoring_output_id,omitempty"`
				MonitoringPprofEnabled *bool   `json:"monitoring_pprof_enabled,omitempty"`
				Name                   string  `json:"name"`
				Namespace              string  `json:"namespace"`

				// Overrides Override settings that are defined in the agent policy. Input settings cannot be overridden. The override option should be used only in unusual circumstances and not as a routine procedure.
				Overrides        *map[string]interface{}                                      `json:"overrides,omitempty"`
				PackagePolicies  *PutFleetAgentPoliciesAgentpolicyid_200_Item_PackagePolicies `json:"package_policies,omitempty"`
				RequiredVersions *[]struct {
					// Percentage Target percentage of agents to auto upgrade
					Percentage float32 `json:"percentage"`

					// Version Target version for automatic agent upgrade
					Version string `json:"version"`
				} `json:"required_versions,omitempty"`
				Revision      float32                                         `json:"revision"`
				SchemaVersion *string                                         `json:"schema_version,omitempty"`
				SpaceIds      *[]string                                       `json:"space_ids,omitempty"`
				Status        PutFleetAgentPoliciesAgentpolicyid200ItemStatus `json:"status"`

				// SupportsAgentless Indicates whether the agent policy supports agentless integrations.
				SupportsAgentless  *bool    `json:"supports_agentless,omitempty"`
				UnenrollTimeout    *float32 `json:"unenroll_timeout,omitempty"`
				UnprivilegedAgents *float32 `json:"unprivileged_agents,omitempty"`
				UpdatedAt          string   `json:"updated_at"`
				UpdatedBy          string   `json:"updated_by"`
				Version            *string  `json:"version,omitempty"`
			} `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseGetFleetEnrollmentApiKeysResponse parses an HTTP response from a GetFleetEnrollmentApiKeysWithResponse call
func ParseGetFleetEnrollmentApiKeysResponse(rsp *http.Response) (*GetFleetEnrollmentApiKeysResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetEnrollmentApiKeysResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Items []struct {
				// Active When false, the enrollment API key is revoked and cannot be used for enrolling Elastic Agents.
				Active bool `json:"active"`

				// ApiKey The enrollment API key (token) used for enrolling Elastic Agents.
				ApiKey string `json:"api_key"`

				// ApiKeyId The ID of the API key in the Security API.
				ApiKeyId  string `json:"api_key_id"`
				CreatedAt string `json:"created_at"`
				Hidden    *bool  `json:"hidden,omitempty"`
				Id        string `json:"id"`

				// Name The name of the enrollment API key.
				Name *string `json:"name,omitempty"`

				// PolicyId The ID of the agent policy the Elastic Agent will be enrolled in.
				PolicyId *string `json:"policy_id,omitempty"`
			} `json:"items"`
			// Deprecated:
			List []struct {
				// Active When false, the enrollment API key is revoked and cannot be used for enrolling Elastic Agents.
				Active bool `json:"active"`

				// ApiKey The enrollment API key (token) used for enrolling Elastic Agents.
				ApiKey string `json:"api_key"`

				// ApiKeyId The ID of the API key in the Security API.
				ApiKeyId  string `json:"api_key_id"`
				CreatedAt string `json:"created_at"`
				Hidden    *bool  `json:"hidden,omitempty"`
				Id        string `json:"id"`

				// Name The name of the enrollment API key.
				Name *string `json:"name,omitempty"`

				// PolicyId The ID of the agent policy the Elastic Agent will be enrolled in.
				PolicyId *string `json:"policy_id,omitempty"`
			} `json:"list"`
			Page    float32 `json:"page"`
			PerPage float32 `json:"perPage"`
			Total   float32 `json:"total"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseGetFleetEpmPackagesResponse parses an HTTP response from a GetFleetEpmPackagesWithResponse call
func ParseGetFleetEpmPackagesResponse(rsp *http.Response) (*GetFleetEpmPackagesResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetEpmPackagesResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Items []GetFleetEpmPackages_200_Items_Item `json:"items"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParsePostFleetEpmPackagesResponse parses an HTTP response from a PostFleetEpmPackagesWithResponse call
func ParsePostFleetEpmPackagesResponse(rsp *http.Response) (*PostFleetEpmPackagesResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostFleetEpmPackagesResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	return response, nil
}

// ParseDeleteFleetEpmPackagesPkgnamePkgversionResponse parses an HTTP response from a DeleteFleetEpmPackagesPkgnamePkgversionWithResponse call
func ParseDeleteFleetEpmPackagesPkgnamePkgversionResponse(rsp *http.Response) (*DeleteFleetEpmPackagesPkgnamePkgversionResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteFleetEpmPackagesPkgnamePkgversionResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Items []DeleteFleetEpmPackagesPkgnamePkgversion_200_Items_Item `json:"items"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseGetFleetEpmPackagesPkgnamePkgversionResponse parses an HTTP response from a GetFleetEpmPackagesPkgnamePkgversionWithResponse call
func ParseGetFleetEpmPackagesPkgnamePkgversionResponse(rsp *http.Response) (*GetFleetEpmPackagesPkgnamePkgversionResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetEpmPackagesPkgnamePkgversionResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item     GetFleetEpmPackagesPkgnamePkgversion_200_Item `json:"item"`
			Metadata *struct {
				HasPolicies bool `json:"has_policies"`
			} `json:"metadata,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParsePostFleetEpmPackagesPkgnamePkgversionResponse parses an HTTP response from a PostFleetEpmPackagesPkgnamePkgversionWithResponse call
func ParsePostFleetEpmPackagesPkgnamePkgversionResponse(rsp *http.Response) (*PostFleetEpmPackagesPkgnamePkgversionResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostFleetEpmPackagesPkgnamePkgversionResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Meta struct {
				InstallSource string `json:"install_source"`
				Name          string `json:"name"`
			} `json:"_meta"`
			Items []PostFleetEpmPackagesPkgnamePkgversion_200_Items_Item `json:"items"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseGetFleetFleetServerHostsResponse parses an HTTP response from a GetFleetFleetServerHostsWithResponse call
func ParseGetFleetFleetServerHostsResponse(rsp *http.Response) (*GetFleetFleetServerHostsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetFleetServerHostsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Items []struct {
				HostUrls        []string `json:"host_urls"`
				Id              string   `json:"id"`
				IsDefault       *bool    `json:"is_default,omitempty"`
				IsInternal      *bool    `json:"is_internal,omitempty"`
				IsPreconfigured *bool    `json:"is_preconfigured,omitempty"`
				Name            string   `json:"name"`
				ProxyId         *string  `json:"proxy_id,omitempty"`
				Secrets         *struct {
					Ssl *struct {
						EsKey *GetFleetFleetServerHosts_200_Items_Secrets_Ssl_EsKey `json:"es_key,omitempty"`
						Key   *GetFleetFleetServerHosts_200_Items_Secrets_Ssl_Key   `json:"key,omitempty"`
					} `json:"ssl,omitempty"`
				} `json:"secrets,omitempty"`
				Ssl *struct {
					Certificate              *string                                        `json:"certificate,omitempty"`
					CertificateAuthorities   *[]string                                      `json:"certificate_authorities,omitempty"`
					ClientAuth               *GetFleetFleetServerHosts200ItemsSslClientAuth `json:"client_auth,omitempty"`
					EsCertificate            *string                                        `json:"es_certificate,omitempty"`
					EsCertificateAuthorities *[]string                                      `json:"es_certificate_authorities,omitempty"`
					EsKey                    *string                                        `json:"es_key,omitempty"`
					Key                      *string                                        `json:"key,omitempty"`
				} `json:"ssl,omitempty"`
			} `json:"items"`
			Page    float32 `json:"page"`
			PerPage float32 `json:"perPage"`
			Total   float32 `json:"total"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParsePostFleetFleetServerHostsResponse parses an HTTP response from a PostFleetFleetServerHostsWithResponse call
func ParsePostFleetFleetServerHostsResponse(rsp *http.Response) (*PostFleetFleetServerHostsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostFleetFleetServerHostsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item struct {
				HostUrls        []string `json:"host_urls"`
				Id              string   `json:"id"`
				IsDefault       *bool    `json:"is_default,omitempty"`
				IsInternal      *bool    `json:"is_internal,omitempty"`
				IsPreconfigured *bool    `json:"is_preconfigured,omitempty"`
				Name            string   `json:"name"`
				ProxyId         *string  `json:"proxy_id,omitempty"`
				Secrets         *struct {
					Ssl *struct {
						EsKey *PostFleetFleetServerHosts_200_Item_Secrets_Ssl_EsKey `json:"es_key,omitempty"`
						Key   *PostFleetFleetServerHosts_200_Item_Secrets_Ssl_Key   `json:"key,omitempty"`
					} `json:"ssl,omitempty"`
				} `json:"secrets,omitempty"`
				Ssl *struct {
					Certificate              *string                                        `json:"certificate,omitempty"`
					CertificateAuthorities   *[]string                                      `json:"certificate_authorities,omitempty"`
					ClientAuth               *PostFleetFleetServerHosts200ItemSslClientAuth `json:"client_auth,omitempty"`
					EsCertificate            *string                                        `json:"es_certificate,omitempty"`
					EsCertificateAuthorities *[]string                                      `json:"es_certificate_authorities,omitempty"`
					EsKey                    *string                                        `json:"es_key,omitempty"`
					Key                      *string                                        `json:"key,omitempty"`
				} `json:"ssl,omitempty"`
			} `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseDeleteFleetFleetServerHostsItemidResponse parses an HTTP response from a DeleteFleetFleetServerHostsItemidWithResponse call
func ParseDeleteFleetFleetServerHostsItemidResponse(rsp *http.Response) (*DeleteFleetFleetServerHostsItemidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteFleetFleetServerHostsItemidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Id string `json:"id"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseGetFleetFleetServerHostsItemidResponse parses an HTTP response from a GetFleetFleetServerHostsItemidWithResponse call
func ParseGetFleetFleetServerHostsItemidResponse(rsp *http.Response) (*GetFleetFleetServerHostsItemidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetFleetServerHostsItemidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item struct {
				HostUrls        []string `json:"host_urls"`
				Id              string   `json:"id"`
				IsDefault       *bool    `json:"is_default,omitempty"`
				IsInternal      *bool    `json:"is_internal,omitempty"`
				IsPreconfigured *bool    `json:"is_preconfigured,omitempty"`
				Name            string   `json:"name"`
				ProxyId         *string  `json:"proxy_id,omitempty"`
				Secrets         *struct {
					Ssl *struct {
						EsKey *GetFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_EsKey `json:"es_key,omitempty"`
						Key   *GetFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_Key   `json:"key,omitempty"`
					} `json:"ssl,omitempty"`
				} `json:"secrets,omitempty"`
				Ssl *struct {
					Certificate              *string                                             `json:"certificate,omitempty"`
					CertificateAuthorities   *[]string                                           `json:"certificate_authorities,omitempty"`
					ClientAuth               *GetFleetFleetServerHostsItemid200ItemSslClientAuth `json:"client_auth,omitempty"`
					EsCertificate            *string                                             `json:"es_certificate,omitempty"`
					EsCertificateAuthorities *[]string                                           `json:"es_certificate_authorities,omitempty"`
					EsKey                    *string                                             `json:"es_key,omitempty"`
					Key                      *string                                             `json:"key,omitempty"`
				} `json:"ssl,omitempty"`
			} `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParsePutFleetFleetServerHostsItemidResponse parses an HTTP response from a PutFleetFleetServerHostsItemidWithResponse call
func ParsePutFleetFleetServerHostsItemidResponse(rsp *http.Response) (*PutFleetFleetServerHostsItemidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PutFleetFleetServerHostsItemidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item struct {
				HostUrls        []string `json:"host_urls"`
				Id              string   `json:"id"`
				IsDefault       *bool    `json:"is_default,omitempty"`
				IsInternal      *bool    `json:"is_internal,omitempty"`
				IsPreconfigured *bool    `json:"is_preconfigured,omitempty"`
				Name            string   `json:"name"`
				ProxyId         *string  `json:"proxy_id,omitempty"`
				Secrets         *struct {
					Ssl *struct {
						EsKey *PutFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_EsKey `json:"es_key,omitempty"`
						Key   *PutFleetFleetServerHostsItemid_200_Item_Secrets_Ssl_Key   `json:"key,omitempty"`
					} `json:"ssl,omitempty"`
				} `json:"secrets,omitempty"`
				Ssl *struct {
					Certificate              *string                                             `json:"certificate,omitempty"`
					CertificateAuthorities   *[]string                                           `json:"certificate_authorities,omitempty"`
					ClientAuth               *PutFleetFleetServerHostsItemid200ItemSslClientAuth `json:"client_auth,omitempty"`
					EsCertificate            *string                                             `json:"es_certificate,omitempty"`
					EsCertificateAuthorities *[]string                                           `json:"es_certificate_authorities,omitempty"`
					EsKey                    *string                                             `json:"es_key,omitempty"`
					Key                      *string                                             `json:"key,omitempty"`
				} `json:"ssl,omitempty"`
			} `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseGetFleetOutputsResponse parses an HTTP response from a GetFleetOutputsWithResponse call
func ParseGetFleetOutputsResponse(rsp *http.Response) (*GetFleetOutputsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetOutputsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Items   []GetFleetOutputs_200_Items_Item `json:"items"`
			Page    float32                          `json:"page"`
			PerPage float32                          `json:"perPage"`
			Total   float32                          `json:"total"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParsePostFleetOutputsResponse parses an HTTP response from a PostFleetOutputsWithResponse call
func ParsePostFleetOutputsResponse(rsp *http.Response) (*PostFleetOutputsResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostFleetOutputsResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item PostFleetOutputs_200_Item `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseDeleteFleetOutputsOutputidResponse parses an HTTP response from a DeleteFleetOutputsOutputidWithResponse call
func ParseDeleteFleetOutputsOutputidResponse(rsp *http.Response) (*DeleteFleetOutputsOutputidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteFleetOutputsOutputidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Id string `json:"id"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParseGetFleetOutputsOutputidResponse parses an HTTP response from a GetFleetOutputsOutputidWithResponse call
func ParseGetFleetOutputsOutputidResponse(rsp *http.Response) (*GetFleetOutputsOutputidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetOutputsOutputidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item GetFleetOutputsOutputid_200_Item `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParsePutFleetOutputsOutputidResponse parses an HTTP response from a PutFleetOutputsOutputidWithResponse call
func ParsePutFleetOutputsOutputidResponse(rsp *http.Response) (*PutFleetOutputsOutputidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PutFleetOutputsOutputidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item PutFleetOutputsOutputid_200_Item `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseGetFleetPackagePoliciesResponse parses an HTTP response from a GetFleetPackagePoliciesWithResponse call
func ParseGetFleetPackagePoliciesResponse(rsp *http.Response) (*GetFleetPackagePoliciesResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetPackagePoliciesResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Items []struct {
				// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
				AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
				Agents                           *float32  `json:"agents,omitempty"`
				CreatedAt                        string    `json:"created_at"`
				CreatedBy                        string    `json:"created_by"`

				// Description Package policy description
				Description   *string                                          `json:"description,omitempty"`
				Elasticsearch *GetFleetPackagePolicies_200_Items_Elasticsearch `json:"elasticsearch,omitempty"`
				Enabled       bool                                             `json:"enabled"`
				Id            string                                           `json:"id"`
				Inputs        GetFleetPackagePolicies_200_Items_Inputs         `json:"inputs"`
				IsManaged     *bool                                            `json:"is_managed,omitempty"`

				// Name Package policy name (should be unique)
				Name string `json:"name"`

				// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
				Namespace *string `json:"namespace,omitempty"`
				OutputId  *string `json:"output_id,omitempty"`

				// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
				Overrides *struct {
					Inputs *map[string]interface{} `json:"inputs,omitempty"`
				} `json:"overrides,omitempty"`
				Package *struct {
					ExperimentalDataStreamFeatures *[]struct {
						DataStream string `json:"data_stream"`
						Features   struct {
							DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
							DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
							SyntheticSource     *bool `json:"synthetic_source,omitempty"`
							Tsdb                *bool `json:"tsdb,omitempty"`
						} `json:"features"`
					} `json:"experimental_data_stream_features,omitempty"`

					// Name Package name
					Name         string  `json:"name"`
					RequiresRoot *bool   `json:"requires_root,omitempty"`
					Title        *string `json:"title,omitempty"`

					// Version Package version
					Version string `json:"version"`
				} `json:"package,omitempty"`

				// PolicyId Agent policy ID where that package policy will be added
				// Deprecated:
				PolicyId         *string   `json:"policy_id,omitempty"`
				PolicyIds        *[]string `json:"policy_ids,omitempty"`
				Revision         float32   `json:"revision"`
				SecretReferences *[]struct {
					Id string `json:"id"`
				} `json:"secret_references,omitempty"`
				SpaceIds *[]string `json:"spaceIds,omitempty"`

				// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
				SupportsAgentless *bool                                   `json:"supports_agentless,omitempty"`
				UpdatedAt         string                                  `json:"updated_at"`
				UpdatedBy         string                                  `json:"updated_by"`
				Vars              *GetFleetPackagePolicies_200_Items_Vars `json:"vars,omitempty"`
				Version           *string                                 `json:"version,omitempty"`
			} `json:"items"`
			Page    float32 `json:"page"`
			PerPage float32 `json:"perPage"`
			Total   float32 `json:"total"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParsePostFleetPackagePoliciesResponse parses an HTTP response from a PostFleetPackagePoliciesWithResponse call
func ParsePostFleetPackagePoliciesResponse(rsp *http.Response) (*PostFleetPackagePoliciesResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostFleetPackagePoliciesResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item struct {
				// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
				AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
				Agents                           *float32  `json:"agents,omitempty"`
				CreatedAt                        string    `json:"created_at"`
				CreatedBy                        string    `json:"created_by"`

				// Description Package policy description
				Description   *string                                          `json:"description,omitempty"`
				Elasticsearch *PostFleetPackagePolicies_200_Item_Elasticsearch `json:"elasticsearch,omitempty"`
				Enabled       bool                                             `json:"enabled"`
				Id            string                                           `json:"id"`
				Inputs        PostFleetPackagePolicies_200_Item_Inputs         `json:"inputs"`
				IsManaged     *bool                                            `json:"is_managed,omitempty"`

				// Name Package policy name (should be unique)
				Name string `json:"name"`

				// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
				Namespace *string `json:"namespace,omitempty"`
				OutputId  *string `json:"output_id,omitempty"`

				// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
				Overrides *struct {
					Inputs *map[string]interface{} `json:"inputs,omitempty"`
				} `json:"overrides,omitempty"`
				Package *struct {
					ExperimentalDataStreamFeatures *[]struct {
						DataStream string `json:"data_stream"`
						Features   struct {
							DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
							DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
							SyntheticSource     *bool `json:"synthetic_source,omitempty"`
							Tsdb                *bool `json:"tsdb,omitempty"`
						} `json:"features"`
					} `json:"experimental_data_stream_features,omitempty"`

					// Name Package name
					Name         string  `json:"name"`
					RequiresRoot *bool   `json:"requires_root,omitempty"`
					Title        *string `json:"title,omitempty"`

					// Version Package version
					Version string `json:"version"`
				} `json:"package,omitempty"`

				// PolicyId Agent policy ID where that package policy will be added
				// Deprecated:
				PolicyId         *string   `json:"policy_id,omitempty"`
				PolicyIds        *[]string `json:"policy_ids,omitempty"`
				Revision         float32   `json:"revision"`
				SecretReferences *[]struct {
					Id string `json:"id"`
				} `json:"secret_references,omitempty"`
				SpaceIds *[]string `json:"spaceIds,omitempty"`

				// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
				SupportsAgentless *bool                                   `json:"supports_agentless,omitempty"`
				UpdatedAt         string                                  `json:"updated_at"`
				UpdatedBy         string                                  `json:"updated_by"`
				Vars              *PostFleetPackagePolicies_200_Item_Vars `json:"vars,omitempty"`
				Version           *string                                 `json:"version,omitempty"`
			} `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 409:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON409 = &dest

	}

	return response, nil
}

// ParseDeleteFleetPackagePoliciesPackagepolicyidResponse parses an HTTP response from a DeleteFleetPackagePoliciesPackagepolicyidWithResponse call
func ParseDeleteFleetPackagePoliciesPackagepolicyidResponse(rsp *http.Response) (*DeleteFleetPackagePoliciesPackagepolicyidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteFleetPackagePoliciesPackagepolicyidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Id string `json:"id"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	}

	return response, nil
}

// ParseGetFleetPackagePoliciesPackagepolicyidResponse parses an HTTP response from a GetFleetPackagePoliciesPackagepolicyidWithResponse call
func ParseGetFleetPackagePoliciesPackagepolicyidResponse(rsp *http.Response) (*GetFleetPackagePoliciesPackagepolicyidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetFleetPackagePoliciesPackagepolicyidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item struct {
				// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
				AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
				Agents                           *float32  `json:"agents,omitempty"`
				CreatedAt                        string    `json:"created_at"`
				CreatedBy                        string    `json:"created_by"`

				// Description Package policy description
				Description   *string                                                        `json:"description,omitempty"`
				Elasticsearch *GetFleetPackagePoliciesPackagepolicyid_200_Item_Elasticsearch `json:"elasticsearch,omitempty"`
				Enabled       bool                                                           `json:"enabled"`
				Id            string                                                         `json:"id"`
				Inputs        GetFleetPackagePoliciesPackagepolicyid_200_Item_Inputs         `json:"inputs"`
				IsManaged     *bool                                                          `json:"is_managed,omitempty"`

				// Name Package policy name (should be unique)
				Name string `json:"name"`

				// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
				Namespace *string `json:"namespace,omitempty"`
				OutputId  *string `json:"output_id,omitempty"`

				// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
				Overrides *struct {
					Inputs *map[string]interface{} `json:"inputs,omitempty"`
				} `json:"overrides,omitempty"`
				Package *struct {
					ExperimentalDataStreamFeatures *[]struct {
						DataStream string `json:"data_stream"`
						Features   struct {
							DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
							DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
							SyntheticSource     *bool `json:"synthetic_source,omitempty"`
							Tsdb                *bool `json:"tsdb,omitempty"`
						} `json:"features"`
					} `json:"experimental_data_stream_features,omitempty"`

					// Name Package name
					Name         string  `json:"name"`
					RequiresRoot *bool   `json:"requires_root,omitempty"`
					Title        *string `json:"title,omitempty"`

					// Version Package version
					Version string `json:"version"`
				} `json:"package,omitempty"`

				// PolicyId Agent policy ID where that package policy will be added
				// Deprecated:
				PolicyId         *string   `json:"policy_id,omitempty"`
				PolicyIds        *[]string `json:"policy_ids,omitempty"`
				Revision         float32   `json:"revision"`
				SecretReferences *[]struct {
					Id string `json:"id"`
				} `json:"secret_references,omitempty"`
				SpaceIds *[]string `json:"spaceIds,omitempty"`

				// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
				SupportsAgentless *bool                                                 `json:"supports_agentless,omitempty"`
				UpdatedAt         string                                                `json:"updated_at"`
				UpdatedBy         string                                                `json:"updated_by"`
				Vars              *GetFleetPackagePoliciesPackagepolicyid_200_Item_Vars `json:"vars,omitempty"`
				Version           *string                                               `json:"version,omitempty"`
			} `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 404:
		var dest struct {
			Message string `json:"message"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON404 = &dest

	}

	return response, nil
}

// ParsePutFleetPackagePoliciesPackagepolicyidResponse parses an HTTP response from a PutFleetPackagePoliciesPackagepolicyidWithResponse call
func ParsePutFleetPackagePoliciesPackagepolicyidResponse(rsp *http.Response) (*PutFleetPackagePoliciesPackagepolicyidResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PutFleetPackagePoliciesPackagepolicyidResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			Item struct {
				// AdditionalDatastreamsPermissions Additional datastream permissions, that will be added to the agent policy.
				AdditionalDatastreamsPermissions *[]string `json:"additional_datastreams_permissions,omitempty"`
				Agents                           *float32  `json:"agents,omitempty"`
				CreatedAt                        string    `json:"created_at"`
				CreatedBy                        string    `json:"created_by"`

				// Description Package policy description
				Description   *string                                                        `json:"description,omitempty"`
				Elasticsearch *PutFleetPackagePoliciesPackagepolicyid_200_Item_Elasticsearch `json:"elasticsearch,omitempty"`
				Enabled       bool                                                           `json:"enabled"`
				Id            string                                                         `json:"id"`
				Inputs        PutFleetPackagePoliciesPackagepolicyid_200_Item_Inputs         `json:"inputs"`
				IsManaged     *bool                                                          `json:"is_managed,omitempty"`

				// Name Package policy name (should be unique)
				Name string `json:"name"`

				// Namespace The package policy namespace. Leave blank to inherit the agent policy's namespace.
				Namespace *string `json:"namespace,omitempty"`
				OutputId  *string `json:"output_id,omitempty"`

				// Overrides Override settings that are defined in the package policy. The override option should be used only in unusual circumstances and not as a routine procedure.
				Overrides *struct {
					Inputs *map[string]interface{} `json:"inputs,omitempty"`
				} `json:"overrides,omitempty"`
				Package *struct {
					ExperimentalDataStreamFeatures *[]struct {
						DataStream string `json:"data_stream"`
						Features   struct {
							DocValueOnlyNumeric *bool `json:"doc_value_only_numeric,omitempty"`
							DocValueOnlyOther   *bool `json:"doc_value_only_other,omitempty"`
							SyntheticSource     *bool `json:"synthetic_source,omitempty"`
							Tsdb                *bool `json:"tsdb,omitempty"`
						} `json:"features"`
					} `json:"experimental_data_stream_features,omitempty"`

					// Name Package name
					Name         string  `json:"name"`
					RequiresRoot *bool   `json:"requires_root,omitempty"`
					Title        *string `json:"title,omitempty"`

					// Version Package version
					Version string `json:"version"`
				} `json:"package,omitempty"`

				// PolicyId Agent policy ID where that package policy will be added
				// Deprecated:
				PolicyId         *string   `json:"policy_id,omitempty"`
				PolicyIds        *[]string `json:"policy_ids,omitempty"`
				Revision         float32   `json:"revision"`
				SecretReferences *[]struct {
					Id string `json:"id"`
				} `json:"secret_references,omitempty"`
				SpaceIds *[]string `json:"spaceIds,omitempty"`

				// SupportsAgentless Indicates whether the package policy belongs to an agentless agent policy.
				SupportsAgentless *bool                                                 `json:"supports_agentless,omitempty"`
				UpdatedAt         string                                                `json:"updated_at"`
				UpdatedBy         string                                                `json:"updated_by"`
				Vars              *PutFleetPackagePoliciesPackagepolicyid_200_Item_Vars `json:"vars,omitempty"`
				Version           *string                                               `json:"version,omitempty"`
			} `json:"item"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 400:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON400 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 403:
		var dest struct {
			Attributes interface{} `json:"attributes"`
			Error      *string     `json:"error,omitempty"`
			ErrorType  *string     `json:"errorType,omitempty"`
			Message    string      `json:"message"`
			StatusCode *float32    `json:"statusCode,omitempty"`
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON403 = &dest

	}

	return response, nil
}

// ParseGetStatusResponse parses an HTTP response from a GetStatusWithResponse call
func ParseGetStatusResponse(rsp *http.Response) (*GetStatusResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetStatusResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			union json.RawMessage
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 503:
		var dest struct {
			union json.RawMessage
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON503 = &dest

	}

	return response, nil
}

// ParsePostParametersResponse parses an HTTP response from a PostParametersWithResponse call
func ParsePostParametersResponse(rsp *http.Response) (*PostParametersResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PostParametersResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest struct {
			union json.RawMessage
		}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}

// ParseDeleteParameterResponse parses an HTTP response from a DeleteParameterWithResponse call
func ParseDeleteParameterResponse(rsp *http.Response) (*DeleteParameterResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &DeleteParameterResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	return response, nil
}

// ParseGetParameterResponse parses an HTTP response from a GetParameterWithResponse call
func ParseGetParameterResponse(rsp *http.Response) (*GetParameterResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &GetParameterResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest SyntheticsGetParameterResponse
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}

// ParsePutParameterResponse parses an HTTP response from a PutParameterWithResponse call
func ParsePutParameterResponse(rsp *http.Response) (*PutParameterResponse, error) {
	bodyBytes, err := io.ReadAll(rsp.Body)
	defer func() { _ = rsp.Body.Close() }()
	if err != nil {
		return nil, err
	}

	response := &PutParameterResponse{
		Body:         bodyBytes,
		HTTPResponse: rsp,
	}

	switch {
	case strings.Contains(rsp.Header.Get("Content-Type"), "json") && rsp.StatusCode == 200:
		var dest map[string]interface{}
		if err := json.Unmarshal(bodyBytes, &dest); err != nil {
			return nil, err
		}
		response.JSON200 = &dest

	}

	return response, nil
}
