// Code generated by ogen, DO NOT EDIT.

package connectors

import (
	"context"
	"net/http"

	"github.com/go-faster/errors"

	"github.com/ogen-go/ogen/ogenerrors"
)

// SecuritySource is provider of security values (tokens, passwords, etc.).
type SecuritySource interface {
	// ApiKeyAuth provides apiKeyAuth security value.
	ApiKeyAuth(ctx context.Context, operationName string) (ApiKeyAuth, error)
	// BasicAuth provides basicAuth security value.
	BasicAuth(ctx context.Context, operationName string) (BasicAuth, error)
}

func (s *Client) securityApiKeyAuth(ctx context.Context, operationName string, req *http.Request) error {
	t, err := s.sec.ApiKeyAuth(ctx, operationName)
	if err != nil {
		if errors.Is(err, ogenerrors.ErrSkipClientSecurity) {
			return ogenerrors.ErrSkipClientSecurity
		}
		return errors.Wrap(err, "security source \"ApiKeyAuth\"")
	}
	req.Header.Set("ApiKey", t.APIKey)
	return nil
}
func (s *Client) securityBasicAuth(ctx context.Context, operationName string, req *http.Request) error {
	t, err := s.sec.BasicAuth(ctx, operationName)
	if err != nil {
		if errors.Is(err, ogenerrors.ErrSkipClientSecurity) {
			return ogenerrors.ErrSkipClientSecurity
		}
		return errors.Wrap(err, "security source \"BasicAuth\"")
	}
	req.SetBasicAuth(t.Username, t.Password)
	return nil
}
