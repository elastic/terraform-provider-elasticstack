/*
Data views

OpenAPI schema for data view endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_views

import (
	"encoding/json"
)

// checks if the UpdateRuntimeFieldRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateRuntimeFieldRequest{}

// UpdateRuntimeFieldRequest struct for UpdateRuntimeFieldRequest
type UpdateRuntimeFieldRequest struct {
	// The runtime field definition object.  You can update following fields:  - `type` - `script`
	RuntimeField map[string]interface{} `json:"runtimeField"`
}

// NewUpdateRuntimeFieldRequest instantiates a new UpdateRuntimeFieldRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateRuntimeFieldRequest(runtimeField map[string]interface{}) *UpdateRuntimeFieldRequest {
	this := UpdateRuntimeFieldRequest{}
	this.RuntimeField = runtimeField
	return &this
}

// NewUpdateRuntimeFieldRequestWithDefaults instantiates a new UpdateRuntimeFieldRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateRuntimeFieldRequestWithDefaults() *UpdateRuntimeFieldRequest {
	this := UpdateRuntimeFieldRequest{}
	return &this
}

// GetRuntimeField returns the RuntimeField field value
func (o *UpdateRuntimeFieldRequest) GetRuntimeField() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.RuntimeField
}

// GetRuntimeFieldOk returns a tuple with the RuntimeField field value
// and a boolean to check if the value has been set.
func (o *UpdateRuntimeFieldRequest) GetRuntimeFieldOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.RuntimeField, true
}

// SetRuntimeField sets field value
func (o *UpdateRuntimeFieldRequest) SetRuntimeField(v map[string]interface{}) {
	o.RuntimeField = v
}

func (o UpdateRuntimeFieldRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateRuntimeFieldRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["runtimeField"] = o.RuntimeField
	return toSerialize, nil
}

type NullableUpdateRuntimeFieldRequest struct {
	value *UpdateRuntimeFieldRequest
	isSet bool
}

func (v NullableUpdateRuntimeFieldRequest) Get() *UpdateRuntimeFieldRequest {
	return v.value
}

func (v *NullableUpdateRuntimeFieldRequest) Set(val *UpdateRuntimeFieldRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateRuntimeFieldRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateRuntimeFieldRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateRuntimeFieldRequest(val *UpdateRuntimeFieldRequest) *NullableUpdateRuntimeFieldRequest {
	return &NullableUpdateRuntimeFieldRequest{value: val, isSet: true}
}

func (v NullableUpdateRuntimeFieldRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateRuntimeFieldRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
