/*
Data views

OpenAPI schema for data view endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_views

import (
	"encoding/json"
)

// checks if the GetRuntimeField200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRuntimeField200Response{}

// GetRuntimeField200Response struct for GetRuntimeField200Response
type GetRuntimeField200Response struct {
	DataView map[string]interface{}   `json:"data_view,omitempty"`
	Fields   []map[string]interface{} `json:"fields,omitempty"`
}

// NewGetRuntimeField200Response instantiates a new GetRuntimeField200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRuntimeField200Response() *GetRuntimeField200Response {
	this := GetRuntimeField200Response{}
	return &this
}

// NewGetRuntimeField200ResponseWithDefaults instantiates a new GetRuntimeField200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRuntimeField200ResponseWithDefaults() *GetRuntimeField200Response {
	this := GetRuntimeField200Response{}
	return &this
}

// GetDataView returns the DataView field value if set, zero value otherwise.
func (o *GetRuntimeField200Response) GetDataView() map[string]interface{} {
	if o == nil || IsNil(o.DataView) {
		var ret map[string]interface{}
		return ret
	}
	return o.DataView
}

// GetDataViewOk returns a tuple with the DataView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuntimeField200Response) GetDataViewOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.DataView) {
		return map[string]interface{}{}, false
	}
	return o.DataView, true
}

// HasDataView returns a boolean if a field has been set.
func (o *GetRuntimeField200Response) HasDataView() bool {
	if o != nil && !IsNil(o.DataView) {
		return true
	}

	return false
}

// SetDataView gets a reference to the given map[string]interface{} and assigns it to the DataView field.
func (o *GetRuntimeField200Response) SetDataView(v map[string]interface{}) {
	o.DataView = v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *GetRuntimeField200Response) GetFields() []map[string]interface{} {
	if o == nil || IsNil(o.Fields) {
		var ret []map[string]interface{}
		return ret
	}
	return o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRuntimeField200Response) GetFieldsOk() ([]map[string]interface{}, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *GetRuntimeField200Response) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given []map[string]interface{} and assigns it to the Fields field.
func (o *GetRuntimeField200Response) SetFields(v []map[string]interface{}) {
	o.Fields = v
}

func (o GetRuntimeField200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRuntimeField200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DataView) {
		toSerialize["data_view"] = o.DataView
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	return toSerialize, nil
}

type NullableGetRuntimeField200Response struct {
	value *GetRuntimeField200Response
	isSet bool
}

func (v NullableGetRuntimeField200Response) Get() *GetRuntimeField200Response {
	return v.value
}

func (v *NullableGetRuntimeField200Response) Set(val *GetRuntimeField200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRuntimeField200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRuntimeField200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRuntimeField200Response(val *GetRuntimeField200Response) *NullableGetRuntimeField200Response {
	return &NullableGetRuntimeField200Response{value: val, isSet: true}
}

func (v NullableGetRuntimeField200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRuntimeField200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
