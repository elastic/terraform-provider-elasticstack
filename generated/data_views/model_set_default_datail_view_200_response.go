/*
Data views

OpenAPI schema for data view endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package data_views

import (
	"encoding/json"
)

// checks if the SetDefaultDatailView200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetDefaultDatailView200Response{}

// SetDefaultDatailView200Response struct for SetDefaultDatailView200Response
type SetDefaultDatailView200Response struct {
	Acknowledged *bool `json:"acknowledged,omitempty"`
}

// NewSetDefaultDatailView200Response instantiates a new SetDefaultDatailView200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetDefaultDatailView200Response() *SetDefaultDatailView200Response {
	this := SetDefaultDatailView200Response{}
	return &this
}

// NewSetDefaultDatailView200ResponseWithDefaults instantiates a new SetDefaultDatailView200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetDefaultDatailView200ResponseWithDefaults() *SetDefaultDatailView200Response {
	this := SetDefaultDatailView200Response{}
	return &this
}

// GetAcknowledged returns the Acknowledged field value if set, zero value otherwise.
func (o *SetDefaultDatailView200Response) GetAcknowledged() bool {
	if o == nil || IsNil(o.Acknowledged) {
		var ret bool
		return ret
	}
	return *o.Acknowledged
}

// GetAcknowledgedOk returns a tuple with the Acknowledged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetDefaultDatailView200Response) GetAcknowledgedOk() (*bool, bool) {
	if o == nil || IsNil(o.Acknowledged) {
		return nil, false
	}
	return o.Acknowledged, true
}

// HasAcknowledged returns a boolean if a field has been set.
func (o *SetDefaultDatailView200Response) HasAcknowledged() bool {
	if o != nil && !IsNil(o.Acknowledged) {
		return true
	}

	return false
}

// SetAcknowledged gets a reference to the given bool and assigns it to the Acknowledged field.
func (o *SetDefaultDatailView200Response) SetAcknowledged(v bool) {
	o.Acknowledged = &v
}

func (o SetDefaultDatailView200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetDefaultDatailView200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Acknowledged) {
		toSerialize["acknowledged"] = o.Acknowledged
	}
	return toSerialize, nil
}

type NullableSetDefaultDatailView200Response struct {
	value *SetDefaultDatailView200Response
	isSet bool
}

func (v NullableSetDefaultDatailView200Response) Get() *SetDefaultDatailView200Response {
	return v.value
}

func (v *NullableSetDefaultDatailView200Response) Set(val *SetDefaultDatailView200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableSetDefaultDatailView200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableSetDefaultDatailView200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetDefaultDatailView200Response(val *SetDefaultDatailView200Response) *NullableSetDefaultDatailView200Response {
	return &NullableSetDefaultDatailView200Response{value: val, isSet: true}
}

func (v NullableSetDefaultDatailView200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetDefaultDatailView200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
