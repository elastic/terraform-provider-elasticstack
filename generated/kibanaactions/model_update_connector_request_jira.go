/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the UpdateConnectorRequestJira type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateConnectorRequestJira{}

// UpdateConnectorRequestJira struct for UpdateConnectorRequestJira
type UpdateConnectorRequestJira struct {
	Config ConfigPropertiesJira `json:"config"`
	// The display name for the connector.
	Name    string                `json:"name"`
	Secrets SecretsPropertiesJira `json:"secrets"`
}

// NewUpdateConnectorRequestJira instantiates a new UpdateConnectorRequestJira object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateConnectorRequestJira(config ConfigPropertiesJira, name string, secrets SecretsPropertiesJira) *UpdateConnectorRequestJira {
	this := UpdateConnectorRequestJira{}
	this.Config = config
	this.Name = name
	this.Secrets = secrets
	return &this
}

// NewUpdateConnectorRequestJiraWithDefaults instantiates a new UpdateConnectorRequestJira object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateConnectorRequestJiraWithDefaults() *UpdateConnectorRequestJira {
	this := UpdateConnectorRequestJira{}
	return &this
}

// GetConfig returns the Config field value
func (o *UpdateConnectorRequestJira) GetConfig() ConfigPropertiesJira {
	if o == nil {
		var ret ConfigPropertiesJira
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestJira) GetConfigOk() (*ConfigPropertiesJira, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *UpdateConnectorRequestJira) SetConfig(v ConfigPropertiesJira) {
	o.Config = v
}

// GetName returns the Name field value
func (o *UpdateConnectorRequestJira) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestJira) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateConnectorRequestJira) SetName(v string) {
	o.Name = v
}

// GetSecrets returns the Secrets field value
func (o *UpdateConnectorRequestJira) GetSecrets() SecretsPropertiesJira {
	if o == nil {
		var ret SecretsPropertiesJira
		return ret
	}

	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestJira) GetSecretsOk() (*SecretsPropertiesJira, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secrets, true
}

// SetSecrets sets field value
func (o *UpdateConnectorRequestJira) SetSecrets(v SecretsPropertiesJira) {
	o.Secrets = v
}

func (o UpdateConnectorRequestJira) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateConnectorRequestJira) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config"] = o.Config
	toSerialize["name"] = o.Name
	toSerialize["secrets"] = o.Secrets
	return toSerialize, nil
}

type NullableUpdateConnectorRequestJira struct {
	value *UpdateConnectorRequestJira
	isSet bool
}

func (v NullableUpdateConnectorRequestJira) Get() *UpdateConnectorRequestJira {
	return v.value
}

func (v *NullableUpdateConnectorRequestJira) Set(val *UpdateConnectorRequestJira) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateConnectorRequestJira) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateConnectorRequestJira) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateConnectorRequestJira(val *UpdateConnectorRequestJira) *NullableUpdateConnectorRequestJira {
	return &NullableUpdateConnectorRequestJira{value: val, isSet: true}
}

func (v NullableUpdateConnectorRequestJira) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateConnectorRequestJira) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
