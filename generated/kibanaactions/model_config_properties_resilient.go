/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the ConfigPropertiesResilient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPropertiesResilient{}

// ConfigPropertiesResilient Defines properties for connectors when type is `.resilient`.
type ConfigPropertiesResilient struct {
	// The IBM Resilient instance URL.
	ApiUrl string `json:"apiUrl"`
	// The IBM Resilient organization ID.
	OrgId string `json:"orgId"`
}

// NewConfigPropertiesResilient instantiates a new ConfigPropertiesResilient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPropertiesResilient(apiUrl string, orgId string) *ConfigPropertiesResilient {
	this := ConfigPropertiesResilient{}
	this.ApiUrl = apiUrl
	this.OrgId = orgId
	return &this
}

// NewConfigPropertiesResilientWithDefaults instantiates a new ConfigPropertiesResilient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPropertiesResilientWithDefaults() *ConfigPropertiesResilient {
	this := ConfigPropertiesResilient{}
	return &this
}

// GetApiUrl returns the ApiUrl field value
func (o *ConfigPropertiesResilient) GetApiUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesResilient) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiUrl, true
}

// SetApiUrl sets field value
func (o *ConfigPropertiesResilient) SetApiUrl(v string) {
	o.ApiUrl = v
}

// GetOrgId returns the OrgId field value
func (o *ConfigPropertiesResilient) GetOrgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgId
}

// GetOrgIdOk returns a tuple with the OrgId field value
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesResilient) GetOrgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgId, true
}

// SetOrgId sets field value
func (o *ConfigPropertiesResilient) SetOrgId(v string) {
	o.OrgId = v
}

func (o ConfigPropertiesResilient) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPropertiesResilient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiUrl"] = o.ApiUrl
	toSerialize["orgId"] = o.OrgId
	return toSerialize, nil
}

type NullableConfigPropertiesResilient struct {
	value *ConfigPropertiesResilient
	isSet bool
}

func (v NullableConfigPropertiesResilient) Get() *ConfigPropertiesResilient {
	return v.value
}

func (v *NullableConfigPropertiesResilient) Set(val *ConfigPropertiesResilient) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPropertiesResilient) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPropertiesResilient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPropertiesResilient(val *ConfigPropertiesResilient) *NullableConfigPropertiesResilient {
	return &NullableConfigPropertiesResilient{value: val, isSet: true}
}

func (v NullableConfigPropertiesResilient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPropertiesResilient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
