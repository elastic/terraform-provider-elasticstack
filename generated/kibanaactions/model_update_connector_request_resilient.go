/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the UpdateConnectorRequestResilient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateConnectorRequestResilient{}

// UpdateConnectorRequestResilient struct for UpdateConnectorRequestResilient
type UpdateConnectorRequestResilient struct {
	Config ConfigPropertiesResilient `json:"config"`
	// The display name for the connector.
	Name    string                     `json:"name"`
	Secrets SecretsPropertiesResilient `json:"secrets"`
}

// NewUpdateConnectorRequestResilient instantiates a new UpdateConnectorRequestResilient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateConnectorRequestResilient(config ConfigPropertiesResilient, name string, secrets SecretsPropertiesResilient) *UpdateConnectorRequestResilient {
	this := UpdateConnectorRequestResilient{}
	this.Config = config
	this.Name = name
	this.Secrets = secrets
	return &this
}

// NewUpdateConnectorRequestResilientWithDefaults instantiates a new UpdateConnectorRequestResilient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateConnectorRequestResilientWithDefaults() *UpdateConnectorRequestResilient {
	this := UpdateConnectorRequestResilient{}
	return &this
}

// GetConfig returns the Config field value
func (o *UpdateConnectorRequestResilient) GetConfig() ConfigPropertiesResilient {
	if o == nil {
		var ret ConfigPropertiesResilient
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestResilient) GetConfigOk() (*ConfigPropertiesResilient, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *UpdateConnectorRequestResilient) SetConfig(v ConfigPropertiesResilient) {
	o.Config = v
}

// GetName returns the Name field value
func (o *UpdateConnectorRequestResilient) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestResilient) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateConnectorRequestResilient) SetName(v string) {
	o.Name = v
}

// GetSecrets returns the Secrets field value
func (o *UpdateConnectorRequestResilient) GetSecrets() SecretsPropertiesResilient {
	if o == nil {
		var ret SecretsPropertiesResilient
		return ret
	}

	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestResilient) GetSecretsOk() (*SecretsPropertiesResilient, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secrets, true
}

// SetSecrets sets field value
func (o *UpdateConnectorRequestResilient) SetSecrets(v SecretsPropertiesResilient) {
	o.Secrets = v
}

func (o UpdateConnectorRequestResilient) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateConnectorRequestResilient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config"] = o.Config
	toSerialize["name"] = o.Name
	toSerialize["secrets"] = o.Secrets
	return toSerialize, nil
}

type NullableUpdateConnectorRequestResilient struct {
	value *UpdateConnectorRequestResilient
	isSet bool
}

func (v NullableUpdateConnectorRequestResilient) Get() *UpdateConnectorRequestResilient {
	return v.value
}

func (v *NullableUpdateConnectorRequestResilient) Set(val *UpdateConnectorRequestResilient) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateConnectorRequestResilient) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateConnectorRequestResilient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateConnectorRequestResilient(val *UpdateConnectorRequestResilient) *NullableUpdateConnectorRequestResilient {
	return &NullableUpdateConnectorRequestResilient{value: val, isSet: true}
}

func (v NullableUpdateConnectorRequestResilient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateConnectorRequestResilient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
