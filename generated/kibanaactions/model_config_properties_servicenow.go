/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the ConfigPropertiesServicenow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPropertiesServicenow{}

// ConfigPropertiesServicenow Defines properties for connectors when type is `.servicenow`.
type ConfigPropertiesServicenow struct {
	// The ServiceNow instance URL.
	ApiUrl string `json:"apiUrl"`
	// The client ID assigned to your OAuth application. This property is required when `isOAuth` is `true`.
	ClientId *string `json:"clientId,omitempty"`
	// The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
	IsOAuth *bool `json:"isOAuth,omitempty"`
	// The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when `isOAuth` is `true`.
	JwtKeyId *string `json:"jwtKeyId,omitempty"`
	// The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is `Email`, the user identifier should be the user's email address. This property is required when `isOAuth` is `true`.
	UserIdentifierValue *string `json:"userIdentifierValue,omitempty"`
	// Determines whether the connector uses the Table API or the Import Set API. This property is supported only for ServiceNow ITSM and ServiceNow SecOps connectors.  NOTE: If this property is set to `false`, the Elastic application should be installed in ServiceNow.
	UsesTableApi *bool `json:"usesTableApi,omitempty"`
}

// NewConfigPropertiesServicenow instantiates a new ConfigPropertiesServicenow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPropertiesServicenow(apiUrl string) *ConfigPropertiesServicenow {
	this := ConfigPropertiesServicenow{}
	this.ApiUrl = apiUrl
	var isOAuth bool = false
	this.IsOAuth = &isOAuth
	var usesTableApi bool = true
	this.UsesTableApi = &usesTableApi
	return &this
}

// NewConfigPropertiesServicenowWithDefaults instantiates a new ConfigPropertiesServicenow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPropertiesServicenowWithDefaults() *ConfigPropertiesServicenow {
	this := ConfigPropertiesServicenow{}
	var isOAuth bool = false
	this.IsOAuth = &isOAuth
	var usesTableApi bool = true
	this.UsesTableApi = &usesTableApi
	return &this
}

// GetApiUrl returns the ApiUrl field value
func (o *ConfigPropertiesServicenow) GetApiUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesServicenow) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiUrl, true
}

// SetApiUrl sets field value
func (o *ConfigPropertiesServicenow) SetApiUrl(v string) {
	o.ApiUrl = v
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *ConfigPropertiesServicenow) GetClientId() string {
	if o == nil || IsNil(o.ClientId) {
		var ret string
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesServicenow) GetClientIdOk() (*string, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *ConfigPropertiesServicenow) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given string and assigns it to the ClientId field.
func (o *ConfigPropertiesServicenow) SetClientId(v string) {
	o.ClientId = &v
}

// GetIsOAuth returns the IsOAuth field value if set, zero value otherwise.
func (o *ConfigPropertiesServicenow) GetIsOAuth() bool {
	if o == nil || IsNil(o.IsOAuth) {
		var ret bool
		return ret
	}
	return *o.IsOAuth
}

// GetIsOAuthOk returns a tuple with the IsOAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesServicenow) GetIsOAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.IsOAuth) {
		return nil, false
	}
	return o.IsOAuth, true
}

// HasIsOAuth returns a boolean if a field has been set.
func (o *ConfigPropertiesServicenow) HasIsOAuth() bool {
	if o != nil && !IsNil(o.IsOAuth) {
		return true
	}

	return false
}

// SetIsOAuth gets a reference to the given bool and assigns it to the IsOAuth field.
func (o *ConfigPropertiesServicenow) SetIsOAuth(v bool) {
	o.IsOAuth = &v
}

// GetJwtKeyId returns the JwtKeyId field value if set, zero value otherwise.
func (o *ConfigPropertiesServicenow) GetJwtKeyId() string {
	if o == nil || IsNil(o.JwtKeyId) {
		var ret string
		return ret
	}
	return *o.JwtKeyId
}

// GetJwtKeyIdOk returns a tuple with the JwtKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesServicenow) GetJwtKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.JwtKeyId) {
		return nil, false
	}
	return o.JwtKeyId, true
}

// HasJwtKeyId returns a boolean if a field has been set.
func (o *ConfigPropertiesServicenow) HasJwtKeyId() bool {
	if o != nil && !IsNil(o.JwtKeyId) {
		return true
	}

	return false
}

// SetJwtKeyId gets a reference to the given string and assigns it to the JwtKeyId field.
func (o *ConfigPropertiesServicenow) SetJwtKeyId(v string) {
	o.JwtKeyId = &v
}

// GetUserIdentifierValue returns the UserIdentifierValue field value if set, zero value otherwise.
func (o *ConfigPropertiesServicenow) GetUserIdentifierValue() string {
	if o == nil || IsNil(o.UserIdentifierValue) {
		var ret string
		return ret
	}
	return *o.UserIdentifierValue
}

// GetUserIdentifierValueOk returns a tuple with the UserIdentifierValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesServicenow) GetUserIdentifierValueOk() (*string, bool) {
	if o == nil || IsNil(o.UserIdentifierValue) {
		return nil, false
	}
	return o.UserIdentifierValue, true
}

// HasUserIdentifierValue returns a boolean if a field has been set.
func (o *ConfigPropertiesServicenow) HasUserIdentifierValue() bool {
	if o != nil && !IsNil(o.UserIdentifierValue) {
		return true
	}

	return false
}

// SetUserIdentifierValue gets a reference to the given string and assigns it to the UserIdentifierValue field.
func (o *ConfigPropertiesServicenow) SetUserIdentifierValue(v string) {
	o.UserIdentifierValue = &v
}

// GetUsesTableApi returns the UsesTableApi field value if set, zero value otherwise.
func (o *ConfigPropertiesServicenow) GetUsesTableApi() bool {
	if o == nil || IsNil(o.UsesTableApi) {
		var ret bool
		return ret
	}
	return *o.UsesTableApi
}

// GetUsesTableApiOk returns a tuple with the UsesTableApi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesServicenow) GetUsesTableApiOk() (*bool, bool) {
	if o == nil || IsNil(o.UsesTableApi) {
		return nil, false
	}
	return o.UsesTableApi, true
}

// HasUsesTableApi returns a boolean if a field has been set.
func (o *ConfigPropertiesServicenow) HasUsesTableApi() bool {
	if o != nil && !IsNil(o.UsesTableApi) {
		return true
	}

	return false
}

// SetUsesTableApi gets a reference to the given bool and assigns it to the UsesTableApi field.
func (o *ConfigPropertiesServicenow) SetUsesTableApi(v bool) {
	o.UsesTableApi = &v
}

func (o ConfigPropertiesServicenow) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPropertiesServicenow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiUrl"] = o.ApiUrl
	if !IsNil(o.ClientId) {
		toSerialize["clientId"] = o.ClientId
	}
	if !IsNil(o.IsOAuth) {
		toSerialize["isOAuth"] = o.IsOAuth
	}
	if !IsNil(o.JwtKeyId) {
		toSerialize["jwtKeyId"] = o.JwtKeyId
	}
	if !IsNil(o.UserIdentifierValue) {
		toSerialize["userIdentifierValue"] = o.UserIdentifierValue
	}
	if !IsNil(o.UsesTableApi) {
		toSerialize["usesTableApi"] = o.UsesTableApi
	}
	return toSerialize, nil
}

type NullableConfigPropertiesServicenow struct {
	value *ConfigPropertiesServicenow
	isSet bool
}

func (v NullableConfigPropertiesServicenow) Get() *ConfigPropertiesServicenow {
	return v.value
}

func (v *NullableConfigPropertiesServicenow) Set(val *ConfigPropertiesServicenow) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPropertiesServicenow) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPropertiesServicenow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPropertiesServicenow(val *ConfigPropertiesServicenow) *NullableConfigPropertiesServicenow {
	return &NullableConfigPropertiesServicenow{value: val, isSet: true}
}

func (v NullableConfigPropertiesServicenow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPropertiesServicenow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
