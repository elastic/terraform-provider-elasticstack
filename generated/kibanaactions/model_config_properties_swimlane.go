/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the ConfigPropertiesSwimlane type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPropertiesSwimlane{}

// ConfigPropertiesSwimlane Defines properties for connectors when type is `.swimlane`.
type ConfigPropertiesSwimlane struct {
	// The Swimlane instance URL.
	ApiUrl string `json:"apiUrl"`
	// The Swimlane application ID.
	AppId string `json:"appId"`
	// The type of connector. Valid values are `all`, `alerts`, and `cases`.
	ConnectorType string                                            `json:"connectorType"`
	Mappings      *ConnectorMappingsPropertiesForASwimlaneConnector `json:"mappings,omitempty"`
}

// NewConfigPropertiesSwimlane instantiates a new ConfigPropertiesSwimlane object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPropertiesSwimlane(apiUrl string, appId string, connectorType string) *ConfigPropertiesSwimlane {
	this := ConfigPropertiesSwimlane{}
	this.ApiUrl = apiUrl
	this.AppId = appId
	this.ConnectorType = connectorType
	return &this
}

// NewConfigPropertiesSwimlaneWithDefaults instantiates a new ConfigPropertiesSwimlane object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPropertiesSwimlaneWithDefaults() *ConfigPropertiesSwimlane {
	this := ConfigPropertiesSwimlane{}
	return &this
}

// GetApiUrl returns the ApiUrl field value
func (o *ConfigPropertiesSwimlane) GetApiUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesSwimlane) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiUrl, true
}

// SetApiUrl sets field value
func (o *ConfigPropertiesSwimlane) SetApiUrl(v string) {
	o.ApiUrl = v
}

// GetAppId returns the AppId field value
func (o *ConfigPropertiesSwimlane) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesSwimlane) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *ConfigPropertiesSwimlane) SetAppId(v string) {
	o.AppId = v
}

// GetConnectorType returns the ConnectorType field value
func (o *ConfigPropertiesSwimlane) GetConnectorType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorType
}

// GetConnectorTypeOk returns a tuple with the ConnectorType field value
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesSwimlane) GetConnectorTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorType, true
}

// SetConnectorType sets field value
func (o *ConfigPropertiesSwimlane) SetConnectorType(v string) {
	o.ConnectorType = v
}

// GetMappings returns the Mappings field value if set, zero value otherwise.
func (o *ConfigPropertiesSwimlane) GetMappings() ConnectorMappingsPropertiesForASwimlaneConnector {
	if o == nil || IsNil(o.Mappings) {
		var ret ConnectorMappingsPropertiesForASwimlaneConnector
		return ret
	}
	return *o.Mappings
}

// GetMappingsOk returns a tuple with the Mappings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesSwimlane) GetMappingsOk() (*ConnectorMappingsPropertiesForASwimlaneConnector, bool) {
	if o == nil || IsNil(o.Mappings) {
		return nil, false
	}
	return o.Mappings, true
}

// HasMappings returns a boolean if a field has been set.
func (o *ConfigPropertiesSwimlane) HasMappings() bool {
	if o != nil && !IsNil(o.Mappings) {
		return true
	}

	return false
}

// SetMappings gets a reference to the given ConnectorMappingsPropertiesForASwimlaneConnector and assigns it to the Mappings field.
func (o *ConfigPropertiesSwimlane) SetMappings(v ConnectorMappingsPropertiesForASwimlaneConnector) {
	o.Mappings = &v
}

func (o ConfigPropertiesSwimlane) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPropertiesSwimlane) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiUrl"] = o.ApiUrl
	toSerialize["appId"] = o.AppId
	toSerialize["connectorType"] = o.ConnectorType
	if !IsNil(o.Mappings) {
		toSerialize["mappings"] = o.Mappings
	}
	return toSerialize, nil
}

type NullableConfigPropertiesSwimlane struct {
	value *ConfigPropertiesSwimlane
	isSet bool
}

func (v NullableConfigPropertiesSwimlane) Get() *ConfigPropertiesSwimlane {
	return v.value
}

func (v *NullableConfigPropertiesSwimlane) Set(val *ConfigPropertiesSwimlane) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPropertiesSwimlane) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPropertiesSwimlane) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPropertiesSwimlane(val *ConfigPropertiesSwimlane) *NullableConfigPropertiesSwimlane {
	return &NullableConfigPropertiesSwimlane{value: val, isSet: true}
}

func (v NullableConfigPropertiesSwimlane) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPropertiesSwimlane) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
