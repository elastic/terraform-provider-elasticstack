/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the RunConnectorParamsDocuments type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunConnectorParamsDocuments{}

// RunConnectorParamsDocuments Test an action that indexes a document into Elasticsearch.
type RunConnectorParamsDocuments struct {
	// The documents in JSON format for index connectors.
	Documents []map[string]interface{} `json:"documents"`
}

// NewRunConnectorParamsDocuments instantiates a new RunConnectorParamsDocuments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunConnectorParamsDocuments(documents []map[string]interface{}) *RunConnectorParamsDocuments {
	this := RunConnectorParamsDocuments{}
	this.Documents = documents
	return &this
}

// NewRunConnectorParamsDocumentsWithDefaults instantiates a new RunConnectorParamsDocuments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunConnectorParamsDocumentsWithDefaults() *RunConnectorParamsDocuments {
	this := RunConnectorParamsDocuments{}
	return &this
}

// GetDocuments returns the Documents field value
func (o *RunConnectorParamsDocuments) GetDocuments() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value
// and a boolean to check if the value has been set.
func (o *RunConnectorParamsDocuments) GetDocumentsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Documents, true
}

// SetDocuments sets field value
func (o *RunConnectorParamsDocuments) SetDocuments(v []map[string]interface{}) {
	o.Documents = v
}

func (o RunConnectorParamsDocuments) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunConnectorParamsDocuments) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["documents"] = o.Documents
	return toSerialize, nil
}

type NullableRunConnectorParamsDocuments struct {
	value *RunConnectorParamsDocuments
	isSet bool
}

func (v NullableRunConnectorParamsDocuments) Get() *RunConnectorParamsDocuments {
	return v.value
}

func (v *NullableRunConnectorParamsDocuments) Set(val *RunConnectorParamsDocuments) {
	v.value = val
	v.isSet = true
}

func (v NullableRunConnectorParamsDocuments) IsSet() bool {
	return v.isSet
}

func (v *NullableRunConnectorParamsDocuments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunConnectorParamsDocuments(val *RunConnectorParamsDocuments) *NullableRunConnectorParamsDocuments {
	return &NullableRunConnectorParamsDocuments{value: val, isSet: true}
}

func (v NullableRunConnectorParamsDocuments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunConnectorParamsDocuments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
