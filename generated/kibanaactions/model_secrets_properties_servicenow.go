/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the SecretsPropertiesServicenow type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretsPropertiesServicenow{}

// SecretsPropertiesServicenow Defines secrets for connectors when type is `.servicenow`, `.servicenow-sir`, or `.servicenow-itom`.
type SecretsPropertiesServicenow struct {
	// The client secret assigned to your OAuth application. This property is required when `isOAuth` is `true`.
	ClientSecret *string `json:"clientSecret,omitempty"`
	// The password for HTTP basic authentication. This property is required when `isOAuth` is `false`.
	Password *string `json:"password,omitempty"`
	// The RSA private key that you created for use in ServiceNow. This property is required when `isOAuth` is `true`.
	PrivateKey *string `json:"privateKey,omitempty"`
	// The password for the RSA private key. This property is required when `isOAuth` is `true` and you set a password on your private key.
	PrivateKeyPassword *string `json:"privateKeyPassword,omitempty"`
	// The username for HTTP basic authentication. This property is required when `isOAuth` is `false`.
	Username *string `json:"username,omitempty"`
}

// NewSecretsPropertiesServicenow instantiates a new SecretsPropertiesServicenow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretsPropertiesServicenow() *SecretsPropertiesServicenow {
	this := SecretsPropertiesServicenow{}
	return &this
}

// NewSecretsPropertiesServicenowWithDefaults instantiates a new SecretsPropertiesServicenow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretsPropertiesServicenowWithDefaults() *SecretsPropertiesServicenow {
	this := SecretsPropertiesServicenow{}
	return &this
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *SecretsPropertiesServicenow) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsPropertiesServicenow) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *SecretsPropertiesServicenow) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *SecretsPropertiesServicenow) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *SecretsPropertiesServicenow) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsPropertiesServicenow) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *SecretsPropertiesServicenow) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *SecretsPropertiesServicenow) SetPassword(v string) {
	o.Password = &v
}

// GetPrivateKey returns the PrivateKey field value if set, zero value otherwise.
func (o *SecretsPropertiesServicenow) GetPrivateKey() string {
	if o == nil || IsNil(o.PrivateKey) {
		var ret string
		return ret
	}
	return *o.PrivateKey
}

// GetPrivateKeyOk returns a tuple with the PrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsPropertiesServicenow) GetPrivateKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKey) {
		return nil, false
	}
	return o.PrivateKey, true
}

// HasPrivateKey returns a boolean if a field has been set.
func (o *SecretsPropertiesServicenow) HasPrivateKey() bool {
	if o != nil && !IsNil(o.PrivateKey) {
		return true
	}

	return false
}

// SetPrivateKey gets a reference to the given string and assigns it to the PrivateKey field.
func (o *SecretsPropertiesServicenow) SetPrivateKey(v string) {
	o.PrivateKey = &v
}

// GetPrivateKeyPassword returns the PrivateKeyPassword field value if set, zero value otherwise.
func (o *SecretsPropertiesServicenow) GetPrivateKeyPassword() string {
	if o == nil || IsNil(o.PrivateKeyPassword) {
		var ret string
		return ret
	}
	return *o.PrivateKeyPassword
}

// GetPrivateKeyPasswordOk returns a tuple with the PrivateKeyPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsPropertiesServicenow) GetPrivateKeyPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.PrivateKeyPassword) {
		return nil, false
	}
	return o.PrivateKeyPassword, true
}

// HasPrivateKeyPassword returns a boolean if a field has been set.
func (o *SecretsPropertiesServicenow) HasPrivateKeyPassword() bool {
	if o != nil && !IsNil(o.PrivateKeyPassword) {
		return true
	}

	return false
}

// SetPrivateKeyPassword gets a reference to the given string and assigns it to the PrivateKeyPassword field.
func (o *SecretsPropertiesServicenow) SetPrivateKeyPassword(v string) {
	o.PrivateKeyPassword = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *SecretsPropertiesServicenow) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsPropertiesServicenow) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *SecretsPropertiesServicenow) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *SecretsPropertiesServicenow) SetUsername(v string) {
	o.Username = &v
}

func (o SecretsPropertiesServicenow) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretsPropertiesServicenow) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.PrivateKey) {
		toSerialize["privateKey"] = o.PrivateKey
	}
	if !IsNil(o.PrivateKeyPassword) {
		toSerialize["privateKeyPassword"] = o.PrivateKeyPassword
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableSecretsPropertiesServicenow struct {
	value *SecretsPropertiesServicenow
	isSet bool
}

func (v NullableSecretsPropertiesServicenow) Get() *SecretsPropertiesServicenow {
	return v.value
}

func (v *NullableSecretsPropertiesServicenow) Set(val *SecretsPropertiesServicenow) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretsPropertiesServicenow) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretsPropertiesServicenow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretsPropertiesServicenow(val *SecretsPropertiesServicenow) *NullableSecretsPropertiesServicenow {
	return &NullableSecretsPropertiesServicenow{value: val, isSet: true}
}

func (v NullableSecretsPropertiesServicenow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretsPropertiesServicenow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
