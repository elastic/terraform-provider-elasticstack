/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the SecretsPropertiesCasesWebhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretsPropertiesCasesWebhook{}

// SecretsPropertiesCasesWebhook struct for SecretsPropertiesCasesWebhook
type SecretsPropertiesCasesWebhook struct {
	// The password for HTTP basic authentication. If `hasAuth` is set to `true`, this property is required.
	Password *string `json:"password,omitempty"`
	// The username for HTTP basic authentication. If `hasAuth` is set to `true`, this property is required.
	User *string `json:"user,omitempty"`
}

// NewSecretsPropertiesCasesWebhook instantiates a new SecretsPropertiesCasesWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretsPropertiesCasesWebhook() *SecretsPropertiesCasesWebhook {
	this := SecretsPropertiesCasesWebhook{}
	return &this
}

// NewSecretsPropertiesCasesWebhookWithDefaults instantiates a new SecretsPropertiesCasesWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretsPropertiesCasesWebhookWithDefaults() *SecretsPropertiesCasesWebhook {
	this := SecretsPropertiesCasesWebhook{}
	return &this
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *SecretsPropertiesCasesWebhook) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsPropertiesCasesWebhook) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *SecretsPropertiesCasesWebhook) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *SecretsPropertiesCasesWebhook) SetPassword(v string) {
	o.Password = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *SecretsPropertiesCasesWebhook) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsPropertiesCasesWebhook) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *SecretsPropertiesCasesWebhook) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *SecretsPropertiesCasesWebhook) SetUser(v string) {
	o.User = &v
}

func (o SecretsPropertiesCasesWebhook) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretsPropertiesCasesWebhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableSecretsPropertiesCasesWebhook struct {
	value *SecretsPropertiesCasesWebhook
	isSet bool
}

func (v NullableSecretsPropertiesCasesWebhook) Get() *SecretsPropertiesCasesWebhook {
	return v.value
}

func (v *NullableSecretsPropertiesCasesWebhook) Set(val *SecretsPropertiesCasesWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretsPropertiesCasesWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretsPropertiesCasesWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretsPropertiesCasesWebhook(val *SecretsPropertiesCasesWebhook) *NullableSecretsPropertiesCasesWebhook {
	return &NullableSecretsPropertiesCasesWebhook{value: val, isSet: true}
}

func (v NullableSecretsPropertiesCasesWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretsPropertiesCasesWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
