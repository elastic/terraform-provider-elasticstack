/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the LegacyRunConnector200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LegacyRunConnector200Response{}

// LegacyRunConnector200Response struct for LegacyRunConnector200Response
type LegacyRunConnector200Response struct {
	ActionId *string                      `json:"actionId,omitempty"`
	Data     *RunConnector200ResponseData `json:"data,omitempty"`
	// The status of the action.
	Status *string `json:"status,omitempty"`
}

// NewLegacyRunConnector200Response instantiates a new LegacyRunConnector200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLegacyRunConnector200Response() *LegacyRunConnector200Response {
	this := LegacyRunConnector200Response{}
	return &this
}

// NewLegacyRunConnector200ResponseWithDefaults instantiates a new LegacyRunConnector200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLegacyRunConnector200ResponseWithDefaults() *LegacyRunConnector200Response {
	this := LegacyRunConnector200Response{}
	return &this
}

// GetActionId returns the ActionId field value if set, zero value otherwise.
func (o *LegacyRunConnector200Response) GetActionId() string {
	if o == nil || IsNil(o.ActionId) {
		var ret string
		return ret
	}
	return *o.ActionId
}

// GetActionIdOk returns a tuple with the ActionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyRunConnector200Response) GetActionIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActionId) {
		return nil, false
	}
	return o.ActionId, true
}

// HasActionId returns a boolean if a field has been set.
func (o *LegacyRunConnector200Response) HasActionId() bool {
	if o != nil && !IsNil(o.ActionId) {
		return true
	}

	return false
}

// SetActionId gets a reference to the given string and assigns it to the ActionId field.
func (o *LegacyRunConnector200Response) SetActionId(v string) {
	o.ActionId = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *LegacyRunConnector200Response) GetData() RunConnector200ResponseData {
	if o == nil || IsNil(o.Data) {
		var ret RunConnector200ResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyRunConnector200Response) GetDataOk() (*RunConnector200ResponseData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *LegacyRunConnector200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given RunConnector200ResponseData and assigns it to the Data field.
func (o *LegacyRunConnector200Response) SetData(v RunConnector200ResponseData) {
	o.Data = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *LegacyRunConnector200Response) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyRunConnector200Response) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *LegacyRunConnector200Response) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *LegacyRunConnector200Response) SetStatus(v string) {
	o.Status = &v
}

func (o LegacyRunConnector200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LegacyRunConnector200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionId) {
		toSerialize["actionId"] = o.ActionId
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableLegacyRunConnector200Response struct {
	value *LegacyRunConnector200Response
	isSet bool
}

func (v NullableLegacyRunConnector200Response) Get() *LegacyRunConnector200Response {
	return v.value
}

func (v *NullableLegacyRunConnector200Response) Set(val *LegacyRunConnector200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableLegacyRunConnector200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableLegacyRunConnector200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegacyRunConnector200Response(val *LegacyRunConnector200Response) *NullableLegacyRunConnector200Response {
	return &NullableLegacyRunConnector200Response{value: val, isSet: true}
}

func (v NullableLegacyRunConnector200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegacyRunConnector200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
