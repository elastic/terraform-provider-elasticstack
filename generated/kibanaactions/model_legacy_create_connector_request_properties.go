/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the LegacyCreateConnectorRequestProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LegacyCreateConnectorRequestProperties{}

// LegacyCreateConnectorRequestProperties struct for LegacyCreateConnectorRequestProperties
type LegacyCreateConnectorRequestProperties struct {
	// The connector type identifier.
	ActionTypeId *string `json:"actionTypeId,omitempty"`
	// The configuration for the connector. Configuration properties vary depending on the connector type.
	Config map[string]interface{} `json:"config,omitempty"`
	// The display name for the connector.
	Name *string `json:"name,omitempty"`
	// The secrets configuration for the connector. Secrets configuration properties vary depending on the connector type. NOTE: Remember these values. You must provide them each time you update the connector.
	Secrets map[string]interface{} `json:"secrets,omitempty"`
}

// NewLegacyCreateConnectorRequestProperties instantiates a new LegacyCreateConnectorRequestProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLegacyCreateConnectorRequestProperties() *LegacyCreateConnectorRequestProperties {
	this := LegacyCreateConnectorRequestProperties{}
	return &this
}

// NewLegacyCreateConnectorRequestPropertiesWithDefaults instantiates a new LegacyCreateConnectorRequestProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLegacyCreateConnectorRequestPropertiesWithDefaults() *LegacyCreateConnectorRequestProperties {
	this := LegacyCreateConnectorRequestProperties{}
	return &this
}

// GetActionTypeId returns the ActionTypeId field value if set, zero value otherwise.
func (o *LegacyCreateConnectorRequestProperties) GetActionTypeId() string {
	if o == nil || IsNil(o.ActionTypeId) {
		var ret string
		return ret
	}
	return *o.ActionTypeId
}

// GetActionTypeIdOk returns a tuple with the ActionTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyCreateConnectorRequestProperties) GetActionTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActionTypeId) {
		return nil, false
	}
	return o.ActionTypeId, true
}

// HasActionTypeId returns a boolean if a field has been set.
func (o *LegacyCreateConnectorRequestProperties) HasActionTypeId() bool {
	if o != nil && !IsNil(o.ActionTypeId) {
		return true
	}

	return false
}

// SetActionTypeId gets a reference to the given string and assigns it to the ActionTypeId field.
func (o *LegacyCreateConnectorRequestProperties) SetActionTypeId(v string) {
	o.ActionTypeId = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *LegacyCreateConnectorRequestProperties) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyCreateConnectorRequestProperties) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *LegacyCreateConnectorRequestProperties) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *LegacyCreateConnectorRequestProperties) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *LegacyCreateConnectorRequestProperties) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyCreateConnectorRequestProperties) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *LegacyCreateConnectorRequestProperties) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *LegacyCreateConnectorRequestProperties) SetName(v string) {
	o.Name = &v
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *LegacyCreateConnectorRequestProperties) GetSecrets() map[string]interface{} {
	if o == nil || IsNil(o.Secrets) {
		var ret map[string]interface{}
		return ret
	}
	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LegacyCreateConnectorRequestProperties) GetSecretsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Secrets) {
		return map[string]interface{}{}, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *LegacyCreateConnectorRequestProperties) HasSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given map[string]interface{} and assigns it to the Secrets field.
func (o *LegacyCreateConnectorRequestProperties) SetSecrets(v map[string]interface{}) {
	o.Secrets = v
}

func (o LegacyCreateConnectorRequestProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LegacyCreateConnectorRequestProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionTypeId) {
		toSerialize["actionTypeId"] = o.ActionTypeId
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	return toSerialize, nil
}

type NullableLegacyCreateConnectorRequestProperties struct {
	value *LegacyCreateConnectorRequestProperties
	isSet bool
}

func (v NullableLegacyCreateConnectorRequestProperties) Get() *LegacyCreateConnectorRequestProperties {
	return v.value
}

func (v *NullableLegacyCreateConnectorRequestProperties) Set(val *LegacyCreateConnectorRequestProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableLegacyCreateConnectorRequestProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableLegacyCreateConnectorRequestProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLegacyCreateConnectorRequestProperties(val *LegacyCreateConnectorRequestProperties) *NullableLegacyCreateConnectorRequestProperties {
	return &NullableLegacyCreateConnectorRequestProperties{value: val, isSet: true}
}

func (v NullableLegacyCreateConnectorRequestProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLegacyCreateConnectorRequestProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
