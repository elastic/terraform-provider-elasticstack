/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the UpdateConnectorRequestCasesWebhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateConnectorRequestCasesWebhook{}

// UpdateConnectorRequestCasesWebhook struct for UpdateConnectorRequestCasesWebhook
type UpdateConnectorRequestCasesWebhook struct {
	Config ConfigPropertiesCasesWebhook `json:"config"`
	// The display name for the connector.
	Name    string                         `json:"name"`
	Secrets *SecretsPropertiesCasesWebhook `json:"secrets,omitempty"`
}

// NewUpdateConnectorRequestCasesWebhook instantiates a new UpdateConnectorRequestCasesWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateConnectorRequestCasesWebhook(config ConfigPropertiesCasesWebhook, name string) *UpdateConnectorRequestCasesWebhook {
	this := UpdateConnectorRequestCasesWebhook{}
	this.Config = config
	this.Name = name
	return &this
}

// NewUpdateConnectorRequestCasesWebhookWithDefaults instantiates a new UpdateConnectorRequestCasesWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateConnectorRequestCasesWebhookWithDefaults() *UpdateConnectorRequestCasesWebhook {
	this := UpdateConnectorRequestCasesWebhook{}
	return &this
}

// GetConfig returns the Config field value
func (o *UpdateConnectorRequestCasesWebhook) GetConfig() ConfigPropertiesCasesWebhook {
	if o == nil {
		var ret ConfigPropertiesCasesWebhook
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestCasesWebhook) GetConfigOk() (*ConfigPropertiesCasesWebhook, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *UpdateConnectorRequestCasesWebhook) SetConfig(v ConfigPropertiesCasesWebhook) {
	o.Config = v
}

// GetName returns the Name field value
func (o *UpdateConnectorRequestCasesWebhook) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestCasesWebhook) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UpdateConnectorRequestCasesWebhook) SetName(v string) {
	o.Name = v
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *UpdateConnectorRequestCasesWebhook) GetSecrets() SecretsPropertiesCasesWebhook {
	if o == nil || IsNil(o.Secrets) {
		var ret SecretsPropertiesCasesWebhook
		return ret
	}
	return *o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestCasesWebhook) GetSecretsOk() (*SecretsPropertiesCasesWebhook, bool) {
	if o == nil || IsNil(o.Secrets) {
		return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *UpdateConnectorRequestCasesWebhook) HasSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given SecretsPropertiesCasesWebhook and assigns it to the Secrets field.
func (o *UpdateConnectorRequestCasesWebhook) SetSecrets(v SecretsPropertiesCasesWebhook) {
	o.Secrets = &v
}

func (o UpdateConnectorRequestCasesWebhook) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateConnectorRequestCasesWebhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config"] = o.Config
	toSerialize["name"] = o.Name
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	return toSerialize, nil
}

type NullableUpdateConnectorRequestCasesWebhook struct {
	value *UpdateConnectorRequestCasesWebhook
	isSet bool
}

func (v NullableUpdateConnectorRequestCasesWebhook) Get() *UpdateConnectorRequestCasesWebhook {
	return v.value
}

func (v *NullableUpdateConnectorRequestCasesWebhook) Set(val *UpdateConnectorRequestCasesWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateConnectorRequestCasesWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateConnectorRequestCasesWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateConnectorRequestCasesWebhook(val *UpdateConnectorRequestCasesWebhook) *NullableUpdateConnectorRequestCasesWebhook {
	return &NullableUpdateConnectorRequestCasesWebhook{value: val, isSet: true}
}

func (v NullableUpdateConnectorRequestCasesWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateConnectorRequestCasesWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
