/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the SecretsPropertiesOpsgenie type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretsPropertiesOpsgenie{}

// SecretsPropertiesOpsgenie Defines secrets for connectors when type is `.opsgenie`.
type SecretsPropertiesOpsgenie struct {
	// The Opsgenie API authentication key for HTTP Basic authentication.
	ApiKey string `json:"apiKey"`
}

// NewSecretsPropertiesOpsgenie instantiates a new SecretsPropertiesOpsgenie object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretsPropertiesOpsgenie(apiKey string) *SecretsPropertiesOpsgenie {
	this := SecretsPropertiesOpsgenie{}
	this.ApiKey = apiKey
	return &this
}

// NewSecretsPropertiesOpsgenieWithDefaults instantiates a new SecretsPropertiesOpsgenie object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretsPropertiesOpsgenieWithDefaults() *SecretsPropertiesOpsgenie {
	this := SecretsPropertiesOpsgenie{}
	return &this
}

// GetApiKey returns the ApiKey field value
func (o *SecretsPropertiesOpsgenie) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *SecretsPropertiesOpsgenie) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *SecretsPropertiesOpsgenie) SetApiKey(v string) {
	o.ApiKey = v
}

func (o SecretsPropertiesOpsgenie) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretsPropertiesOpsgenie) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiKey"] = o.ApiKey
	return toSerialize, nil
}

type NullableSecretsPropertiesOpsgenie struct {
	value *SecretsPropertiesOpsgenie
	isSet bool
}

func (v NullableSecretsPropertiesOpsgenie) Get() *SecretsPropertiesOpsgenie {
	return v.value
}

func (v *NullableSecretsPropertiesOpsgenie) Set(val *SecretsPropertiesOpsgenie) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretsPropertiesOpsgenie) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretsPropertiesOpsgenie) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretsPropertiesOpsgenie(val *SecretsPropertiesOpsgenie) *NullableSecretsPropertiesOpsgenie {
	return &NullableSecretsPropertiesOpsgenie{value: val, isSet: true}
}

func (v NullableSecretsPropertiesOpsgenie) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretsPropertiesOpsgenie) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
