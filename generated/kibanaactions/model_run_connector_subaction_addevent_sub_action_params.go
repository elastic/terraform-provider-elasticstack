/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the RunConnectorSubactionAddeventSubActionParams type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunConnectorSubactionAddeventSubActionParams{}

// RunConnectorSubactionAddeventSubActionParams The set of configuration properties for the action.
type RunConnectorSubactionAddeventSubActionParams struct {
	// Additional information about the event.
	AdditionalInfo *string `json:"additional_info,omitempty"`
	// The details about the event.
	Description *string `json:"description,omitempty"`
	// A specific instance of the source.
	EventClass *string `json:"event_class,omitempty"`
	// All actions sharing this key are associated with the same ServiceNow alert. The default value is `<rule ID>:<alert instance ID>`.
	MessageKey *string `json:"message_key,omitempty"`
	// The name of the metric.
	MetricName *string `json:"metric_name,omitempty"`
	// The host that the event was triggered for.
	Node *string `json:"node,omitempty"`
	// The name of the resource.
	Resource *string `json:"resource,omitempty"`
	// The severity of the event.
	Severity *string `json:"severity,omitempty"`
	// The name of the event source type.
	Source *string `json:"source,omitempty"`
	// The time of the event.
	TimeOfEvent *string `json:"time_of_event,omitempty"`
	// The type of event.
	Type *string `json:"type,omitempty"`
}

// NewRunConnectorSubactionAddeventSubActionParams instantiates a new RunConnectorSubactionAddeventSubActionParams object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunConnectorSubactionAddeventSubActionParams() *RunConnectorSubactionAddeventSubActionParams {
	this := RunConnectorSubactionAddeventSubActionParams{}
	return &this
}

// NewRunConnectorSubactionAddeventSubActionParamsWithDefaults instantiates a new RunConnectorSubactionAddeventSubActionParams object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunConnectorSubactionAddeventSubActionParamsWithDefaults() *RunConnectorSubactionAddeventSubActionParams {
	this := RunConnectorSubactionAddeventSubActionParams{}
	return &this
}

// GetAdditionalInfo returns the AdditionalInfo field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetAdditionalInfo() string {
	if o == nil || IsNil(o.AdditionalInfo) {
		var ret string
		return ret
	}
	return *o.AdditionalInfo
}

// GetAdditionalInfoOk returns a tuple with the AdditionalInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetAdditionalInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalInfo) {
		return nil, false
	}
	return o.AdditionalInfo, true
}

// HasAdditionalInfo returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasAdditionalInfo() bool {
	if o != nil && !IsNil(o.AdditionalInfo) {
		return true
	}

	return false
}

// SetAdditionalInfo gets a reference to the given string and assigns it to the AdditionalInfo field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetAdditionalInfo(v string) {
	o.AdditionalInfo = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetDescription(v string) {
	o.Description = &v
}

// GetEventClass returns the EventClass field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetEventClass() string {
	if o == nil || IsNil(o.EventClass) {
		var ret string
		return ret
	}
	return *o.EventClass
}

// GetEventClassOk returns a tuple with the EventClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetEventClassOk() (*string, bool) {
	if o == nil || IsNil(o.EventClass) {
		return nil, false
	}
	return o.EventClass, true
}

// HasEventClass returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasEventClass() bool {
	if o != nil && !IsNil(o.EventClass) {
		return true
	}

	return false
}

// SetEventClass gets a reference to the given string and assigns it to the EventClass field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetEventClass(v string) {
	o.EventClass = &v
}

// GetMessageKey returns the MessageKey field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetMessageKey() string {
	if o == nil || IsNil(o.MessageKey) {
		var ret string
		return ret
	}
	return *o.MessageKey
}

// GetMessageKeyOk returns a tuple with the MessageKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetMessageKeyOk() (*string, bool) {
	if o == nil || IsNil(o.MessageKey) {
		return nil, false
	}
	return o.MessageKey, true
}

// HasMessageKey returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasMessageKey() bool {
	if o != nil && !IsNil(o.MessageKey) {
		return true
	}

	return false
}

// SetMessageKey gets a reference to the given string and assigns it to the MessageKey field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetMessageKey(v string) {
	o.MessageKey = &v
}

// GetMetricName returns the MetricName field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetMetricName() string {
	if o == nil || IsNil(o.MetricName) {
		var ret string
		return ret
	}
	return *o.MetricName
}

// GetMetricNameOk returns a tuple with the MetricName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetMetricNameOk() (*string, bool) {
	if o == nil || IsNil(o.MetricName) {
		return nil, false
	}
	return o.MetricName, true
}

// HasMetricName returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasMetricName() bool {
	if o != nil && !IsNil(o.MetricName) {
		return true
	}

	return false
}

// SetMetricName gets a reference to the given string and assigns it to the MetricName field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetMetricName(v string) {
	o.MetricName = &v
}

// GetNode returns the Node field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetNode() string {
	if o == nil || IsNil(o.Node) {
		var ret string
		return ret
	}
	return *o.Node
}

// GetNodeOk returns a tuple with the Node field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetNodeOk() (*string, bool) {
	if o == nil || IsNil(o.Node) {
		return nil, false
	}
	return o.Node, true
}

// HasNode returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasNode() bool {
	if o != nil && !IsNil(o.Node) {
		return true
	}

	return false
}

// SetNode gets a reference to the given string and assigns it to the Node field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetNode(v string) {
	o.Node = &v
}

// GetResource returns the Resource field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetResource() string {
	if o == nil || IsNil(o.Resource) {
		var ret string
		return ret
	}
	return *o.Resource
}

// GetResourceOk returns a tuple with the Resource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetResourceOk() (*string, bool) {
	if o == nil || IsNil(o.Resource) {
		return nil, false
	}
	return o.Resource, true
}

// HasResource returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasResource() bool {
	if o != nil && !IsNil(o.Resource) {
		return true
	}

	return false
}

// SetResource gets a reference to the given string and assigns it to the Resource field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetResource(v string) {
	o.Resource = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetSeverity(v string) {
	o.Severity = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetSource() string {
	if o == nil || IsNil(o.Source) {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetSourceOk() (*string, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetSource(v string) {
	o.Source = &v
}

// GetTimeOfEvent returns the TimeOfEvent field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetTimeOfEvent() string {
	if o == nil || IsNil(o.TimeOfEvent) {
		var ret string
		return ret
	}
	return *o.TimeOfEvent
}

// GetTimeOfEventOk returns a tuple with the TimeOfEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetTimeOfEventOk() (*string, bool) {
	if o == nil || IsNil(o.TimeOfEvent) {
		return nil, false
	}
	return o.TimeOfEvent, true
}

// HasTimeOfEvent returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasTimeOfEvent() bool {
	if o != nil && !IsNil(o.TimeOfEvent) {
		return true
	}

	return false
}

// SetTimeOfEvent gets a reference to the given string and assigns it to the TimeOfEvent field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetTimeOfEvent(v string) {
	o.TimeOfEvent = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RunConnectorSubactionAddeventSubActionParams) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RunConnectorSubactionAddeventSubActionParams) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RunConnectorSubactionAddeventSubActionParams) SetType(v string) {
	o.Type = &v
}

func (o RunConnectorSubactionAddeventSubActionParams) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunConnectorSubactionAddeventSubActionParams) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalInfo) {
		toSerialize["additional_info"] = o.AdditionalInfo
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.EventClass) {
		toSerialize["event_class"] = o.EventClass
	}
	if !IsNil(o.MessageKey) {
		toSerialize["message_key"] = o.MessageKey
	}
	if !IsNil(o.MetricName) {
		toSerialize["metric_name"] = o.MetricName
	}
	if !IsNil(o.Node) {
		toSerialize["node"] = o.Node
	}
	if !IsNil(o.Resource) {
		toSerialize["resource"] = o.Resource
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	if !IsNil(o.TimeOfEvent) {
		toSerialize["time_of_event"] = o.TimeOfEvent
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableRunConnectorSubactionAddeventSubActionParams struct {
	value *RunConnectorSubactionAddeventSubActionParams
	isSet bool
}

func (v NullableRunConnectorSubactionAddeventSubActionParams) Get() *RunConnectorSubactionAddeventSubActionParams {
	return v.value
}

func (v *NullableRunConnectorSubactionAddeventSubActionParams) Set(val *RunConnectorSubactionAddeventSubActionParams) {
	v.value = val
	v.isSet = true
}

func (v NullableRunConnectorSubactionAddeventSubActionParams) IsSet() bool {
	return v.isSet
}

func (v *NullableRunConnectorSubactionAddeventSubActionParams) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunConnectorSubactionAddeventSubActionParams(val *RunConnectorSubactionAddeventSubActionParams) *NullableRunConnectorSubactionAddeventSubActionParams {
	return &NullableRunConnectorSubactionAddeventSubActionParams{value: val, isSet: true}
}

func (v NullableRunConnectorSubactionAddeventSubActionParams) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunConnectorSubactionAddeventSubActionParams) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
