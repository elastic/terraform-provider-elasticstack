/*
 * Connectors
 *
 * OpenAPI schema for Connectors endpoints
 *
 * API version: 0.1
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package kibanaactions

// Defines properties for connectors when type is `.cases-webhook`.
type ConfigPropertiesCasesWebhook struct {
	// A JSON payload sent to the create comment URL to create a case comment. You can use variables to add Kibana Cases data to the payload. The required variable is `case.comment`. Due to Mustache template variables (the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated when you create the connector. The JSON is validated once the Mustache variables have been placed when the REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
	CreateCommentJson string `json:"createCommentJson,omitempty"`
	// The REST API HTTP request method to create a case comment in the third-party system. Valid values are `patch`, `post`, and `put`.
	CreateCommentMethod string `json:"createCommentMethod,omitempty"`
	// The REST API URL to create a case comment by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the `xpack.actions.allowedHosts setting`, add the hostname to the allowed hosts.
	CreateCommentUrl string `json:"createCommentUrl,omitempty"`
	// A JSON payload sent to the create case URL to create a case. You can use variables to add case data to the payload. Required variables are `case.title` and `case.description`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
	CreateIncidentJson string `json:"createIncidentJson"`
	// The REST API HTTP request method to create a case in the third-party system. Valid values are `patch`, `post`, and `put`.
	CreateIncidentMethod string `json:"createIncidentMethod,omitempty"`
	// The JSON key in the create case response that contains the external case ID.
	CreateIncidentResponseKey string `json:"createIncidentResponseKey"`
	// The REST API URL to create a case in the third-party system. If you are using the `xpack.actions.allowedHosts` setting, add the hostname to the allowed hosts.
	CreateIncidentUrl string `json:"createIncidentUrl"`
	// The JSON key in get case response that contains the external case title.
	GetIncidentResponseExternalTitleKey string `json:"getIncidentResponseExternalTitleKey"`
	// The REST API URL to get the case by ID from the third-party system. If you are using the `xpack.actions.allowedHosts` setting, add the hostname to the allowed hosts. You can use a variable to add the external system ID to the URL. Due to Mustache template variables (the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
	GetIncidentUrl string `json:"getIncidentUrl"`
	// If true, a username and password for login type authentication must be provided.
	HasAuth bool `json:"hasAuth,omitempty"`
	// A set of key-value pairs sent as headers with the request URLs for the create case, update case, get case, and create comment methods.
	Headers string `json:"headers,omitempty"`
	// The JSON payload sent to the update case URL to update the case. You can use variables to add Kibana Cases data to the payload. Required variables are `case.title` and `case.description`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
	UpdateIncidentJson string `json:"updateIncidentJson"`
	// The REST API HTTP request method to update the case in the third-party system. Valid values are `patch`, `post`, and `put`.
	UpdateIncidentMethod string `json:"updateIncidentMethod,omitempty"`
	// The REST API URL to update the case by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the `xpack.actions.allowedHosts` setting, add the hostname to the allowed hosts.
	UpdateIncidentUrl string `json:"updateIncidentUrl"`
	// The URL to view the case in the external system. You can use variables to add the external system ID or external system title to the URL.
	ViewIncidentUrl string `json:"viewIncidentUrl"`
}
