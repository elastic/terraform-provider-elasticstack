/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the CreateConnectorRequestIndex type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConnectorRequestIndex{}

// CreateConnectorRequestIndex The index connector indexes a document into Elasticsearch.
type CreateConnectorRequestIndex struct {
	Config ConfigPropertiesIndex `json:"config"`
	// The type of connector.
	ConnectorTypeId string `json:"connector_type_id"`
	// The display name for the connector.
	Name string `json:"name"`
}

// NewCreateConnectorRequestIndex instantiates a new CreateConnectorRequestIndex object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnectorRequestIndex(config ConfigPropertiesIndex, connectorTypeId string, name string) *CreateConnectorRequestIndex {
	this := CreateConnectorRequestIndex{}
	this.Config = config
	this.ConnectorTypeId = connectorTypeId
	this.Name = name
	return &this
}

// NewCreateConnectorRequestIndexWithDefaults instantiates a new CreateConnectorRequestIndex object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnectorRequestIndexWithDefaults() *CreateConnectorRequestIndex {
	this := CreateConnectorRequestIndex{}
	return &this
}

// GetConfig returns the Config field value
func (o *CreateConnectorRequestIndex) GetConfig() ConfigPropertiesIndex {
	if o == nil {
		var ret ConfigPropertiesIndex
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestIndex) GetConfigOk() (*ConfigPropertiesIndex, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *CreateConnectorRequestIndex) SetConfig(v ConfigPropertiesIndex) {
	o.Config = v
}

// GetConnectorTypeId returns the ConnectorTypeId field value
func (o *CreateConnectorRequestIndex) GetConnectorTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorTypeId
}

// GetConnectorTypeIdOk returns a tuple with the ConnectorTypeId field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestIndex) GetConnectorTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorTypeId, true
}

// SetConnectorTypeId sets field value
func (o *CreateConnectorRequestIndex) SetConnectorTypeId(v string) {
	o.ConnectorTypeId = v
}

// GetName returns the Name field value
func (o *CreateConnectorRequestIndex) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestIndex) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateConnectorRequestIndex) SetName(v string) {
	o.Name = v
}

func (o CreateConnectorRequestIndex) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConnectorRequestIndex) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config"] = o.Config
	toSerialize["connector_type_id"] = o.ConnectorTypeId
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableCreateConnectorRequestIndex struct {
	value *CreateConnectorRequestIndex
	isSet bool
}

func (v NullableCreateConnectorRequestIndex) Get() *CreateConnectorRequestIndex {
	return v.value
}

func (v *NullableCreateConnectorRequestIndex) Set(val *CreateConnectorRequestIndex) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnectorRequestIndex) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnectorRequestIndex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnectorRequestIndex(val *CreateConnectorRequestIndex) *NullableCreateConnectorRequestIndex {
	return &NullableCreateConnectorRequestIndex{value: val, isSet: true}
}

func (v NullableCreateConnectorRequestIndex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnectorRequestIndex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
