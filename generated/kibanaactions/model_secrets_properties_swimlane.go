/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the SecretsPropertiesSwimlane type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretsPropertiesSwimlane{}

// SecretsPropertiesSwimlane Defines secrets for connectors when type is `.swimlane`.
type SecretsPropertiesSwimlane struct {
	// Swimlane API authentication token.
	ApiToken *string `json:"apiToken,omitempty"`
}

// NewSecretsPropertiesSwimlane instantiates a new SecretsPropertiesSwimlane object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretsPropertiesSwimlane() *SecretsPropertiesSwimlane {
	this := SecretsPropertiesSwimlane{}
	return &this
}

// NewSecretsPropertiesSwimlaneWithDefaults instantiates a new SecretsPropertiesSwimlane object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretsPropertiesSwimlaneWithDefaults() *SecretsPropertiesSwimlane {
	this := SecretsPropertiesSwimlane{}
	return &this
}

// GetApiToken returns the ApiToken field value if set, zero value otherwise.
func (o *SecretsPropertiesSwimlane) GetApiToken() string {
	if o == nil || IsNil(o.ApiToken) {
		var ret string
		return ret
	}
	return *o.ApiToken
}

// GetApiTokenOk returns a tuple with the ApiToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsPropertiesSwimlane) GetApiTokenOk() (*string, bool) {
	if o == nil || IsNil(o.ApiToken) {
		return nil, false
	}
	return o.ApiToken, true
}

// HasApiToken returns a boolean if a field has been set.
func (o *SecretsPropertiesSwimlane) HasApiToken() bool {
	if o != nil && !IsNil(o.ApiToken) {
		return true
	}

	return false
}

// SetApiToken gets a reference to the given string and assigns it to the ApiToken field.
func (o *SecretsPropertiesSwimlane) SetApiToken(v string) {
	o.ApiToken = &v
}

func (o SecretsPropertiesSwimlane) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretsPropertiesSwimlane) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiToken) {
		toSerialize["apiToken"] = o.ApiToken
	}
	return toSerialize, nil
}

type NullableSecretsPropertiesSwimlane struct {
	value *SecretsPropertiesSwimlane
	isSet bool
}

func (v NullableSecretsPropertiesSwimlane) Get() *SecretsPropertiesSwimlane {
	return v.value
}

func (v *NullableSecretsPropertiesSwimlane) Set(val *SecretsPropertiesSwimlane) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretsPropertiesSwimlane) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretsPropertiesSwimlane) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretsPropertiesSwimlane(val *SecretsPropertiesSwimlane) *NullableSecretsPropertiesSwimlane {
	return &NullableSecretsPropertiesSwimlane{value: val, isSet: true}
}

func (v NullableSecretsPropertiesSwimlane) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretsPropertiesSwimlane) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
