/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the RunConnector200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunConnector200Response{}

// RunConnector200Response struct for RunConnector200Response
type RunConnector200Response struct {
	// The identifier for the connector.
	ConnectorId string                       `json:"connector_id"`
	Data        *RunConnector200ResponseData `json:"data,omitempty"`
	// The status of the action.
	Status string `json:"status"`
}

// NewRunConnector200Response instantiates a new RunConnector200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunConnector200Response(connectorId string, status string) *RunConnector200Response {
	this := RunConnector200Response{}
	this.ConnectorId = connectorId
	this.Status = status
	return &this
}

// NewRunConnector200ResponseWithDefaults instantiates a new RunConnector200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunConnector200ResponseWithDefaults() *RunConnector200Response {
	this := RunConnector200Response{}
	return &this
}

// GetConnectorId returns the ConnectorId field value
func (o *RunConnector200Response) GetConnectorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value
// and a boolean to check if the value has been set.
func (o *RunConnector200Response) GetConnectorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorId, true
}

// SetConnectorId sets field value
func (o *RunConnector200Response) SetConnectorId(v string) {
	o.ConnectorId = v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *RunConnector200Response) GetData() RunConnector200ResponseData {
	if o == nil || IsNil(o.Data) {
		var ret RunConnector200ResponseData
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnector200Response) GetDataOk() (*RunConnector200ResponseData, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *RunConnector200Response) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given RunConnector200ResponseData and assigns it to the Data field.
func (o *RunConnector200Response) SetData(v RunConnector200ResponseData) {
	o.Data = &v
}

// GetStatus returns the Status field value
func (o *RunConnector200Response) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *RunConnector200Response) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *RunConnector200Response) SetStatus(v string) {
	o.Status = v
}

func (o RunConnector200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunConnector200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connector_id"] = o.ConnectorId
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableRunConnector200Response struct {
	value *RunConnector200Response
	isSet bool
}

func (v NullableRunConnector200Response) Get() *RunConnector200Response {
	return v.value
}

func (v *NullableRunConnector200Response) Set(val *RunConnector200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableRunConnector200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableRunConnector200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunConnector200Response(val *RunConnector200Response) *NullableRunConnector200Response {
	return &NullableRunConnector200Response{value: val, isSet: true}
}

func (v NullableRunConnector200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunConnector200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
