openapi: 3.0.1
info:
  contact:
    name: Connectors Team
  description: OpenAPI schema for Connectors endpoints
  license:
    name: Elastic License 2.0
    url: https://www.elastic.co/licensing/elastic-license
  title: Connectors
  version: "0.1"
servers:
- description: local
  url: http://localhost:5601
security:
- basicAuth: []
- apiKeyAuth: []
tags:
- description: Connector APIs enable you to create and manage connectors.
  name: connectors
paths:
  /s/{spaceId}/api/actions/connector:
    post:
      description: |
        You must have `all` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
      operationId: createConnector
      parameters:
      - description: Cross-site request forgery protection
        explode: false
        in: header
        name: kbn-xsrf
        required: true
        schema:
          type: string
        style: simple
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              createIndexConnectorRequest:
                $ref: '#/components/examples/create_index_connector_request'
                value: null
            schema:
              $ref: '#/components/schemas/Create_connector_request_body_properties'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                createIndexConnectorResponse:
                  $ref: '#/components/examples/create_index_connector_response'
                  value: null
              schema:
                $ref: '#/components/schemas/connector_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      servers:
      - url: https://localhost:5601
      summary: Creates a connector.
      tags:
      - connectors
    servers:
    - url: https://localhost:5601
  /s/{spaceId}/api/actions/connector/{connectorId}:
    delete:
      description: |
        You must have `all` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. WARNING: When you delete a connector, it cannot be recovered.
      operationId: deleteConnector
      parameters:
      - description: Cross-site request forgery protection
        explode: false
        in: header
        name: kbn-xsrf
        required: true
        schema:
          type: string
        style: simple
      - description: An identifier for the connector.
        explode: false
        in: path
        name: connectorId
        required: true
        schema:
          example: df770e30-8b8b-11ed-a780-3b746c987a81
          type: string
        style: simple
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConnector_404_response'
          description: Object is not found.
      servers:
      - url: https://localhost:5601
      summary: Deletes a connector.
      tags:
      - connectors
    get:
      description: |
        You must have `read` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
      operationId: getConnector
      parameters:
      - description: An identifier for the connector.
        explode: false
        in: path
        name: connectorId
        required: true
        schema:
          example: df770e30-8b8b-11ed-a780-3b746c987a81
          type: string
        style: simple
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                getConnectorResponse:
                  $ref: '#/components/examples/get_connector_response'
                  value: null
              schema:
                $ref: '#/components/schemas/connector_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getConnector_404_response'
          description: Object is not found.
      servers:
      - url: https://localhost:5601
      summary: Retrieves a connector by ID.
      tags:
      - connectors
    put:
      description: |
        You must have `all` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
      operationId: updateConnector
      parameters:
      - description: Cross-site request forgery protection
        explode: false
        in: header
        name: kbn-xsrf
        required: true
        schema:
          type: string
        style: simple
      - description: An identifier for the connector.
        explode: false
        in: path
        name: connectorId
        required: true
        schema:
          example: df770e30-8b8b-11ed-a780-3b746c987a81
          type: string
        style: simple
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              updateIndexConnectorRequest:
                $ref: '#/components/examples/update_index_connector_request'
                value: null
            schema:
              $ref: '#/components/schemas/Update_connector_request_body_properties'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/connector_response_properties'
          description: Indicates a successful call.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateConnector_400_response'
          description: Indicates a bad request.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
          description: Object is not found.
      servers:
      - url: https://localhost:5601
      summary: Updates the attributes for a connector.
      tags:
      - connectors
    servers:
    - url: https://localhost:5601
  /s/{spaceId}/api/actions/connectors:
    get:
      description: |
        You must have `read` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges.
      operationId: getConnectors
      parameters:
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                getConnectorsResponse:
                  $ref: '#/components/examples/get_connectors_response'
                  value: null
              schema:
                items:
                  $ref: '#/components/schemas/Get_connectors_response_body_properties'
                type: array
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      servers:
      - url: https://localhost:5601
      summary: Retrieves all connectors.
      tags:
      - connectors
    servers:
    - url: https://localhost:5601
  /s/{spaceId}/api/actions/connector_types:
    get:
      description: |
        You do not need any Kibana feature privileges to run this API.
      operationId: getConnectorTypes
      parameters:
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      - description: A filter to limit the retrieved connector types to those that
          support a specific feature (such as alerting or cases).
        explode: true
        in: query
        name: feature_id
        required: false
        schema:
          $ref: '#/components/schemas/features'
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                getConnectorTypesResponse:
                  $ref: '#/components/examples/get_connector_types_response'
                  value: null
              schema:
                description: The properties vary for each connector type.
                items:
                  $ref: '#/components/schemas/Get_connector_types_response_body_properties_inner'
                title: Get connector types response body properties
                type: array
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      servers:
      - url: https://localhost:5601
      summary: Retrieves a list of all connector types.
      tags:
      - connectors
    servers:
    - url: https://localhost:5601
  /s/{spaceId}/api/actions/connector/{connectorId}/_execute:
    post:
      description: |
        You can use this API to test an action that involves interaction with Kibana services or integrations with third-party systems. You must have `read` privileges for the **Actions and Connectors** feature in the **Management** section of the Kibana feature privileges. If you use an index connector, you must also have `all`, `create`, `index`, or `write` indices privileges.
      operationId: runConnector
      parameters:
      - description: Cross-site request forgery protection
        explode: false
        in: header
        name: kbn-xsrf
        required: true
        schema:
          type: string
        style: simple
      - description: An identifier for the connector.
        explode: false
        in: path
        name: connectorId
        required: true
        schema:
          example: df770e30-8b8b-11ed-a780-3b746c987a81
          type: string
        style: simple
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              runIndexConnectorRequest:
                $ref: '#/components/examples/run_index_connector_request'
                value: null
              runJiraConnectorRequest:
                $ref: '#/components/examples/run_jira_connector_request'
                value: null
              runServerLogConnectorRequest:
                $ref: '#/components/examples/run_server_log_connector_request'
                value: null
              runServiceNowITOMConnectorRequest:
                $ref: '#/components/examples/run_servicenow_itom_connector_request'
                value: null
              runSwimlaneConnectorRequest:
                $ref: '#/components/examples/run_swimlane_connector_request'
                value: null
            schema:
              $ref: '#/components/schemas/Run_connector_request_body_properties'
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                runIndexConnectorResponse:
                  $ref: '#/components/examples/run_index_connector_response'
                  value: null
                runJiraConnectorResponse:
                  $ref: '#/components/examples/run_jira_connector_response'
                  value: null
                runServerLogConnectorResponse:
                  $ref: '#/components/examples/run_server_log_connector_response'
                  value: null
                runServiceNowITOMConnectorResponse:
                  $ref: '#/components/examples/run_servicenow_itom_connector_response'
                  value: null
                runSwimlaneConnectorResponse:
                  $ref: '#/components/examples/run_swimlane_connector_response'
                  value: null
              schema:
                $ref: '#/components/schemas/runConnector_200_response'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      servers:
      - url: https://localhost:5601
      summary: Runs a connector.
      tags:
      - connectors
    servers:
    - url: https://localhost:5601
  /s/{spaceId}/api/actions/action/{actionId}:
    delete:
      deprecated: true
      description: |
        Deprecated in 7.13.0. Use the delete connector API instead. WARNING: When you delete a connector, it cannot be recovered.
      operationId: legacyDeleteConnector
      parameters:
      - description: Cross-site request forgery protection
        explode: false
        in: header
        name: kbn-xsrf
        required: true
        schema:
          type: string
        style: simple
      - description: An identifier for the action.
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          example: c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad
          type: string
        style: simple
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      responses:
        "204":
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      servers:
      - url: https://localhost:5601
      summary: Deletes a connector.
      tags:
      - connectors
    get:
      deprecated: true
      description: Deprecated in 7.13.0. Use the get connector API instead.
      operationId: legacyGetConnector
      parameters:
      - description: An identifier for the action.
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          example: c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad
          type: string
        style: simple
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/action_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      servers:
      - url: https://localhost:5601
      summary: Retrieves a connector by ID.
      tags:
      - connectors
    put:
      deprecated: true
      description: Deprecated in 7.13.0. Use the update connector API instead.
      operationId: legacyUpdateConnector
      parameters:
      - description: Cross-site request forgery protection
        explode: false
        in: header
        name: kbn-xsrf
        required: true
        schema:
          type: string
        style: simple
      - description: An identifier for the action.
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          example: c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad
          type: string
        style: simple
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Legacy_update_connector_request_body_properties'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/action_response_properties'
          description: Indicates a successful call.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404_response'
          description: Object is not found.
      servers:
      - url: https://localhost:5601
      summary: Updates the attributes for a connector.
      tags:
      - connectors
    servers:
    - url: https://localhost:5601
  /s/{spaceId}/api/actions:
    get:
      deprecated: true
      description: Deprecated in 7.13.0. Use the get all connectors API instead.
      operationId: legacyGetConnectors
      parameters:
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/action_response_properties'
                type: array
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      servers:
      - url: https://localhost:5601
      summary: Retrieves all connectors.
      tags:
      - connectors
    post:
      deprecated: true
      description: Deprecated in 7.13.0. Use the create connector API instead.
      operationId: legacyCreateConnector
      parameters:
      - description: Cross-site request forgery protection
        explode: false
        in: header
        name: kbn-xsrf
        required: true
        schema:
          type: string
        style: simple
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Legacy_create_connector_request_properties'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/action_response_properties'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      servers:
      - url: https://localhost:5601
      summary: Creates a connector.
      tags:
      - connectors
    servers:
    - url: https://localhost:5601
  /s/{spaceId}/api/actions/list_action_types:
    get:
      deprecated: true
      description: Deprecated in 7.13.0. Use the get all connector types API instead.
      operationId: legacyGetConnectorTypes
      parameters:
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                description: The properties vary for each connector type.
                items:
                  $ref: '#/components/schemas/Legacy_get_connector_types_response_body_properties_inner'
                title: Legacy get connector types response body properties
                type: array
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      servers:
      - url: https://localhost:5601
      summary: Retrieves a list of all connector types.
      tags:
      - connectors
    servers:
    - url: https://localhost:5601
  /s/{spaceId}/api/actions/action/{actionId}/_execute:
    post:
      deprecated: true
      description: Deprecated in 7.13.0. Use the run connector API instead.
      operationId: legacyRunConnector
      parameters:
      - description: Cross-site request forgery protection
        explode: false
        in: header
        name: kbn-xsrf
        required: true
        schema:
          type: string
        style: simple
      - description: An identifier for the action.
        explode: false
        in: path
        name: actionId
        required: true
        schema:
          example: c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad
          type: string
        style: simple
      - description: "An identifier for the space. If `/s/` and the identifier are\
          \ omitted from the path, the default space is used."
        explode: false
        in: path
        name: spaceId
        required: true
        schema:
          example: default
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Legacy_run_connector_request_body_properties'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/legacyRunConnector_200_response'
          description: Indicates a successful call.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401_response'
          description: Authorization information is missing or invalid.
      servers:
      - url: https://localhost:5601
      summary: Runs a connector.
      tags:
      - connectors
    servers:
    - url: https://localhost:5601
components:
  examples:
    create_index_connector_request:
      summary: Create an index connector.
      value:
        name: my-connector
        connector_type_id: .index
        config:
          index: test-index
    create_index_connector_response:
      summary: A new index connector.
      value:
        id: c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad
        connector_type_id: .index
        name: my-connector
        config:
          index: test-index
          refresh: false
          executionTimeField: null
        is_preconfigured: false
        is_deprecated: false
        is_missing_secrets: false
    get_connector_response:
      summary: A list of connector types
      value:
        id: df770e30-8b8b-11ed-a780-3b746c987a81
        name: my_server_log_connector
        config: {}
        connector_type_id: .server-log
        is_preconfigured: false
        is_deprecated: false
        is_missing_secrets: false
    update_index_connector_request:
      summary: Update an index connector.
      value:
        name: updated-connector
        config:
          index: updated-index
    get_connectors_response:
      summary: A list of connectors
      value:
      - id: preconfigured-email-connector
        name: my-preconfigured-email-notification
        connector_type_id: .email
        is_preconfigured: true
        is_deprecated: false
        referenced_by_count: 0
      - id: e07d0c80-8b8b-11ed-a780-3b746c987a81
        name: my-index-connector
        config:
          index: test-index
          refresh: false
          executionTimeField: null
        connector_type_id: .index
        is_preconfigured: false
        is_deprecated: false
        referenced_by_count: 2
        is_missing_secrets: false
    get_connector_types_response:
      summary: A list of connector types
      value:
      - id: .swimlane
        name: Swimlane
        enabled: true
        enabled_in_config: true
        enabled_in_license: true
        minimum_license_required: gold
        supported_feature_ids:
        - alerting
        - cases
        - siem
      - id: .index
        name: Index
        enabled: true
        enabled_in_config: true
        enabled_in_license: true
        minimum_license_required: basic
        supported_feature_ids:
        - alerting
        - uptime
        - siem
      - id: .server-log
        name: Server log
        enabled: true
        enabled_in_config: true
        enabled_in_license: true
        minimum_license_required: basic
        supported_feature_ids:
        - alerting
        - uptime
    run_index_connector_request:
      summary: Run an index connector.
      value:
        params:
          documents:
          - id: my_doc_id
            name: my_doc_name
            message: "hello, world"
    run_jira_connector_request:
      summary: Run a Jira connector to retrieve the list of issue types.
      value:
        params:
          subAction: issueTypes
    run_server_log_connector_request:
      summary: Run a server log connector.
      value:
        params:
          level: warn
          message: Test warning message.
    run_servicenow_itom_connector_request:
      summary: Run a ServiceNow ITOM connector to retrieve the list of choices.
      value:
        params:
          subAction: getChoices
          subActionParams:
            fields:
            - severity
            - urgency
    run_swimlane_connector_request:
      summary: Run a Swimlane connector to create an incident.
      value:
        params:
          subAction: pushToService
          subActionParams:
            comments:
            - commentId: 1
              comment: A comment about the incident.
            incident:
              caseId: "1000"
              caseName: Case name
              description: Description of the incident.
    run_index_connector_response:
      summary: Response from running an index connector.
      value:
        connector_id: fd38c600-96a5-11ed-bb79-353b74189cba
        data:
          errors: false
          items:
          - create:
              _id: 4JtvwYUBrcyxt2NnfW3y
              _index: my-index
              _primary_term: 1
              _seq_no: 0
              _shards:
                failed: 0
                successful: 1
                total: 2
              _version: 1
              result: created
              status: 201
          took: 135
        status: ok
    run_jira_connector_response:
      summary: Response from retrieving the list of issue types for a Jira connector.
      value:
        connector_id: b3aad810-edbe-11ec-82d1-11348ecbf4a6
        data:
        - id: 10024
          name: Improvement
        - id: 10006
          name: Task
        - id: 10007
          name: Sub-task
        - id: 10025
          name: New Feature
        - id: 10023
          name: Bug
        - id: 10000
          name: Epic
        status: ok
    run_server_log_connector_response:
      summary: Response from running a server log connector.
      value:
        connector_id: 7fc7b9a0-ecc9-11ec-8736-e7d63118c907
        status: ok
    run_servicenow_itom_connector_response:
      summary: Response from retrieving the list of choices for a ServiceNow ITOM
        connector.
      value:
        connector_id: 9d9be270-2fd2-11ed-b0e0-87533c532698
        data:
        - dependent_value: ""
          element: severity
          label: Critical
          value: 1
        - dependent_value: ""
          element: severity
          label: Major
          value: 2
        - dependent_value: ""
          element: severity
          label: Minor
          value: 3
        - dependent_value: ""
          element: severity
          label: Warning
          value: 4
        - dependent_value: ""
          element: severity
          label: OK
          value: 5
        - dependent_value: ""
          element: severity
          label: Clear
          value: 0
        - dependent_value: ""
          element: urgency
          label: 1 - High
          value: 1
        - dependent_value: ""
          element: urgency
          label: 2 - Medium
          value: 2
        - dependent_value: ""
          element: urgency
          label: 3 - Low
          value: 3
        status: ok
    run_swimlane_connector_response:
      summary: Response from creating a Swimlane incident.
      value:
        connector_id: a4746470-2f94-11ed-b0e0-87533c532698
        data:
          id: aKPmBHWzmdRQtx6Mx
          title: TEST-457
          url: https://elastic.swimlane.url.us/record/aNcL2xniGHGpa2AHb/aKPmBHWzmdRQtx6Mx
          pushedDate: 2022-09-08T16:52:27.866Z
          comments:
          - commentId: 1
            pushedDate: 2022-09-08T16:52:27.865Z
        status: ok
  parameters:
    kbn_xsrf:
      description: Cross-site request forgery protection
      explode: false
      in: header
      name: kbn-xsrf
      required: true
      schema:
        type: string
      style: simple
    space_id:
      description: "An identifier for the space. If `/s/` and the identifier are omitted\
        \ from the path, the default space is used."
      explode: false
      in: path
      name: spaceId
      required: true
      schema:
        example: default
        type: string
      style: simple
    connector_id:
      description: An identifier for the connector.
      explode: false
      in: path
      name: connectorId
      required: true
      schema:
        example: df770e30-8b8b-11ed-a780-3b746c987a81
        type: string
      style: simple
    action_id:
      description: An identifier for the action.
      explode: false
      in: path
      name: actionId
      required: true
      schema:
        example: c55b6eb0-6bad-11eb-9f3b-611eebc6c3ad
        type: string
      style: simple
  schemas:
    config_properties_cases_webhook:
      description: Defines properties for connectors when type is `.cases-webhook`.
      properties:
        createCommentJson:
          description: |
            A JSON payload sent to the create comment URL to create a case comment. You can use variables to add Kibana Cases data to the payload. The required variable is `case.comment`. Due to Mustache template variables (the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated when you create the connector. The JSON is validated once the Mustache variables have been placed when the REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
          example: "{\"body\":{\"[object Object]\":null}}"
          type: string
        createCommentMethod:
          default: put
          description: |
            The REST API HTTP request method to create a case comment in the third-party system. Valid values are `patch`, `post`, and `put`.
          enum:
          - patch
          - post
          - put
          type: string
        createCommentUrl:
          description: |
            The REST API URL to create a case comment by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the `xpack.actions.allowedHosts setting`, add the hostname to the allowed hosts.
          example: "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}/comment"
          type: string
        createIncidentJson:
          description: |
            A JSON payload sent to the create case URL to create a case. You can use variables to add case data to the payload. Required variables are `case.title` and `case.description`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
          example: "{\"fields\":{\"summary\":{\"[object Object]\":null},\"description\"\
            :{\"[object Object]\":null},\"labels\":{\"[object Object]\":null}}}"
          type: string
        createIncidentMethod:
          default: post
          description: |
            The REST API HTTP request method to create a case in the third-party system. Valid values are `patch`, `post`, and `put`.
          enum:
          - patch
          - post
          - put
          type: string
        createIncidentResponseKey:
          description: The JSON key in the create case response that contains the
            external case ID.
          type: string
        createIncidentUrl:
          description: |
            The REST API URL to create a case in the third-party system. If you are using the `xpack.actions.allowedHosts` setting, add the hostname to the allowed hosts.
          type: string
        getIncidentResponseExternalTitleKey:
          description: The JSON key in get case response that contains the external
            case title.
          type: string
        getIncidentUrl:
          description: |
            The REST API URL to get the case by ID from the third-party system. If you are using the `xpack.actions.allowedHosts` setting, add the hostname to the allowed hosts. You can use a variable to add the external system ID to the URL. Due to Mustache template variables (the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid, disregarding the Mustache variables, so the later validation will pass.
          example: "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.id}}}"
          type: string
        hasAuth:
          default: true
          description: "If true, a username and password for login type authentication\
            \ must be provided."
          type: boolean
        headers:
          description: |
            A set of key-value pairs sent as headers with the request URLs for the create case, update case, get case, and create comment methods.
          type: string
        updateIncidentJson:
          description: |
            The JSON payload sent to the update case URL to update the case. You can use variables to add Kibana Cases data to the payload. Required variables are `case.title` and `case.description`. Due to Mustache template variables (which is the text enclosed in triple braces, for example, `{{{case.title}}}`), the JSON is not validated when you create the connector. The JSON is validated after the Mustache variables have been placed when REST method runs. Manually ensure that the JSON is valid to avoid future validation errors; disregard Mustache variables during your review.
          example: "{\"fields\":{\"summary\":{\"[object Object]\":null},\"description\"\
            :{\"[object Object]\":null},\"labels\":{\"[object Object]\":null}}}"
          type: string
        updateIncidentMethod:
          default: put
          description: |
            The REST API HTTP request method to update the case in the third-party system. Valid values are `patch`, `post`, and `put`.
          enum:
          - patch
          - post
          - put
          type: string
        updateIncidentUrl:
          description: |
            The REST API URL to update the case by ID in the third-party system. You can use a variable to add the external system ID to the URL. If you are using the `xpack.actions.allowedHosts` setting, add the hostname to the allowed hosts.
          example: "https://testing-jira.atlassian.net/rest/api/2/issue/{{{external.system.ID}}}"
          type: string
        viewIncidentUrl:
          description: |
            The URL to view the case in the external system. You can use variables to add the external system ID or external system title to the URL.
          example: "https://testing-jira.atlassian.net/browse/{{{external.system.title}}}"
          type: string
      required:
      - createIncidentJson
      - createIncidentResponseKey
      - createIncidentUrl
      - getIncidentResponseExternalTitleKey
      - getIncidentUrl
      - updateIncidentJson
      - updateIncidentUrl
      - viewIncidentUrl
      title: Connector request properties for Webhook - Case Management connector
      type: object
    secrets_properties_cases_webhook:
      properties:
        password:
          description: "The password for HTTP basic authentication. If `hasAuth` is\
            \ set to `true`, this property is required."
          type: string
        user:
          description: "The username for HTTP basic authentication. If `hasAuth` is\
            \ set to `true`, this property is required."
          type: string
      title: Connector secrets properties for Webhook - Case Management connector
      type: object
    create_connector_request_cases_webhook:
      description: |
        The Webhook - Case Management connector uses axios to send POST, PUT, and GET requests to a case management RESTful API web service.
      properties:
        config:
          $ref: '#/components/schemas/config_properties_cases_webhook'
        connector_type_id:
          description: The type of connector.
          enum:
          - .cases-webhook
          example: .cases-webhook
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_cases_webhook'
      required:
      - config
      - connector_type_id
      - name
      title: Create Webhook - Case Managment connector request
      type: object
    config_properties_email:
      additionalProperties: true
      description: Defines properties for connectors when type is `.email`.
      title: Connector request properties for an email connector
      type: object
    secrets_properties_email:
      additionalProperties: true
      description: Defines secrets for connectors when type is `.email`.
      title: Connector secrets properties for an email connector
      type: object
    create_connector_request_email:
      description: |
        The email connector uses the SMTP protocol to send mail messages, using an integration of Nodemailer. An exception is Microsoft Exchange, which uses HTTP protocol for sending emails, Send mail. Email message text is sent as both plain text and html text.
      properties:
        config:
          additionalProperties: true
          description: Defines properties for connectors when type is `.email`.
          title: Connector request properties for an email connector
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .email
          example: .email
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          additionalProperties: true
          description: Defines secrets for connectors when type is `.email`.
          title: Connector secrets properties for an email connector
          type: object
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create email connector request
      type: object
    config_properties_index:
      description: Defines properties for connectors when type is `.index`.
      properties:
        executionTimeField:
          description: Specifies a field that will contain the time the alert condition
            was detected.
          nullable: true
          type: string
        index:
          description: The Elasticsearch index to be written to.
          type: string
        refresh:
          default: false
          description: |
            The refresh policy for the write request, which affects when changes are made visible to search. Refer to the refresh setting for Elasticsearch document APIs.
          type: boolean
      required:
      - index
      title: Connector request properties for an index connector
      type: object
    create_connector_request_index:
      description: The index connector indexes a document into Elasticsearch.
      properties:
        config:
          $ref: '#/components/schemas/config_properties_index'
        connector_type_id:
          description: The type of connector.
          enum:
          - .index
          example: .index
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
      required:
      - config
      - connector_type_id
      - name
      title: Create index connector request
      type: object
    config_properties_jira:
      description: Defines properties for connectors when type is `.jira`.
      properties:
        apiUrl:
          description: The Jira instance URL.
          type: string
        projectKey:
          description: The Jira project key.
          type: string
      required:
      - apiUrl
      - projectKey
      title: Connector request properties for a Jira connector
      type: object
    secrets_properties_jira:
      description: Defines secrets for connectors when type is `.jira`.
      properties:
        apiToken:
          description: The Jira API authentication token for HTTP basic authentication.
          type: string
        email:
          description: The account email for HTTP Basic authentication.
          type: string
      required:
      - apiToken
      - email
      title: Connector secrets properties for a Jira connector
      type: object
    create_connector_request_jira:
      description: The Jira connector uses the REST API v2 to create Jira issues.
      properties:
        config:
          $ref: '#/components/schemas/config_properties_jira'
        connector_type_id:
          description: The type of connector.
          enum:
          - .jira
          example: .jira
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_jira'
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create Jira connector request
      type: object
    config_properties_opsgenie:
      description: Defines properties for connectors when type is `.opsgenie`.
      properties:
        apiUrl:
          description: |
            The Opsgenie URL. For example, `https://api.opsgenie.com` or `https://api.eu.opsgenie.com`. If you are using the `xpack.actions.allowedHosts` setting, add the hostname to the allowed hosts.
          type: string
      required:
      - apiUrl
      title: Connector request properties for an Opsgenie connector
      type: object
    secrets_properties_opsgenie:
      description: Defines secrets for connectors when type is `.opsgenie`.
      properties:
        apiKey:
          description: The Opsgenie API authentication key for HTTP Basic authentication.
          type: string
      required:
      - apiKey
      title: Connector secrets properties for an Opsgenie connector
      type: object
    create_connector_request_opsgenie:
      description: The Opsgenie connector uses the Opsgenie alert API.
      properties:
        config:
          $ref: '#/components/schemas/config_properties_opsgenie'
        connector_type_id:
          description: The type of connector.
          enum:
          - .opsgenie
          example: .opsgenie
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_opsgenie'
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create Opsgenie connector request
      type: object
    config_properties_pagerduty:
      additionalProperties: true
      description: Defines properties for connectors when type is `.pagerduty`.
      title: Connector request properties for a PagerDuty connector
      type: object
    secrets_properties_pagerduty:
      additionalProperties: true
      description: Defines secrets for connectors when type is `.pagerduty`.
      title: Connector secrets properties for a PagerDuty connector
      type: object
    create_connector_request_pagerduty:
      description: |
        The PagerDuty connector uses the v2 Events API to trigger, acknowledge, and resolve PagerDuty alerts.
      properties:
        config:
          additionalProperties: true
          description: Defines properties for connectors when type is `.pagerduty`.
          title: Connector request properties for a PagerDuty connector
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .pagerduty
          example: .pagerduty
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          additionalProperties: true
          description: Defines secrets for connectors when type is `.pagerduty`.
          title: Connector secrets properties for a PagerDuty connector
          type: object
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create PagerDuty connector request
      type: object
    config_properties_resilient:
      description: Defines properties for connectors when type is `.resilient`.
      properties:
        apiUrl:
          description: The IBM Resilient instance URL.
          type: string
        orgId:
          description: The IBM Resilient organization ID.
          type: string
      required:
      - apiUrl
      - orgId
      title: Connector request properties for a IBM Resilient connector
      type: object
    secrets_properties_resilient:
      description: Defines secrets for connectors when type is `.resilient`.
      properties:
        apiKeyId:
          description: The authentication key ID for HTTP Basic authentication.
          type: string
        apiKeySecret:
          description: The authentication key secret for HTTP Basic authentication.
          type: string
      required:
      - apiKeyId
      - apiKeySecret
      title: Connector secrets properties for IBM Resilient connector
      type: object
    create_connector_request_resilient:
      description: The IBM Resilient connector uses the RESILIENT REST v2 to create
        IBM Resilient incidents.
      properties:
        config:
          $ref: '#/components/schemas/config_properties_resilient'
        connector_type_id:
          description: The type of connector.
          enum:
          - .resilient
          example: .resilient
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_resilient'
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create IBM Resilient connector request
      type: object
    create_connector_request_serverlog:
      description: This connector writes an entry to the Kibana server log.
      properties:
        connector_type_id:
          description: The type of connector.
          enum:
          - .server-log
          example: .server-log
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
      required:
      - connector_type_id
      - name
      title: Create server log connector request
      type: object
    config_properties_servicenow:
      description: Defines properties for connectors when type is `.servicenow`.
      properties:
        apiUrl:
          description: The ServiceNow instance URL.
          type: string
        clientId:
          description: |
            The client ID assigned to your OAuth application. This property is required when `isOAuth` is `true`.
          type: string
        isOAuth:
          default: false
          description: |
            The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
          type: boolean
        jwtKeyId:
          description: |
            The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when `isOAuth` is `true`.
          type: string
        userIdentifierValue:
          description: |
            The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is `Email`, the user identifier should be the user's email address. This property is required when `isOAuth` is `true`.
          type: string
        usesTableApi:
          default: true
          description: |
            Determines whether the connector uses the Table API or the Import Set API. This property is supported only for ServiceNow ITSM and ServiceNow SecOps connectors.  NOTE: If this property is set to `false`, the Elastic application should be installed in ServiceNow.
          type: boolean
      required:
      - apiUrl
      title: Connector request properties for a ServiceNow ITSM connector
      type: object
    secrets_properties_servicenow:
      description: "Defines secrets for connectors when type is `.servicenow`, `.servicenow-sir`,\
        \ or `.servicenow-itom`."
      properties:
        clientSecret:
          description: The client secret assigned to your OAuth application. This
            property is required when `isOAuth` is `true`.
          type: string
        password:
          description: The password for HTTP basic authentication. This property is
            required when `isOAuth` is `false`.
          type: string
        privateKey:
          description: The RSA private key that you created for use in ServiceNow.
            This property is required when `isOAuth` is `true`.
          type: string
        privateKeyPassword:
          description: The password for the RSA private key. This property is required
            when `isOAuth` is `true` and you set a password on your private key.
          type: string
        username:
          description: The username for HTTP basic authentication. This property is
            required when `isOAuth` is `false`.
          type: string
      title: "Connector secrets properties for ServiceNow ITOM, ServiceNow ITSM, and\
        \ ServiceNow SecOps connectors"
      type: object
    create_connector_request_servicenow:
      description: |
        The ServiceNow ITSM connector uses the import set API to create ServiceNow incidents. You can use the connector for rule actions and cases.
      properties:
        config:
          $ref: '#/components/schemas/config_properties_servicenow'
        connector_type_id:
          description: The type of connector.
          enum:
          - .servicenow
          example: .servicenow
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_servicenow'
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create ServiceNow ITSM connector request
      type: object
    config_properties_servicenow_itom:
      description: Defines properties for connectors when type is `.servicenow`.
      properties:
        apiUrl:
          description: The ServiceNow instance URL.
          type: string
        clientId:
          description: |
            The client ID assigned to your OAuth application. This property is required when `isOAuth` is `true`.
          type: string
        isOAuth:
          default: false
          description: |
            The type of authentication to use. The default value is false, which means basic authentication is used instead of open authorization (OAuth).
          type: boolean
        jwtKeyId:
          description: |
            The key identifier assigned to the JWT verifier map of your OAuth application. This property is required when `isOAuth` is `true`.
          type: string
        userIdentifierValue:
          description: |
            The identifier to use for OAuth authentication. This identifier should be the user field you selected when you created an OAuth JWT API endpoint for external clients in your ServiceNow instance. For example, if the selected user field is `Email`, the user identifier should be the user's email address. This property is required when `isOAuth` is `true`.
          type: string
      required:
      - apiUrl
      title: Connector request properties for a ServiceNow ITSM connector
      type: object
    create_connector_request_servicenow_itom:
      description: |
        The ServiceNow ITOM connector uses the event API to create ServiceNow events. You can use the connector for rule actions.
      properties:
        config:
          $ref: '#/components/schemas/config_properties_servicenow_itom'
        connector_type_id:
          description: The type of connector.
          enum:
          - .servicenow-itom
          example: .servicenow-itom
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_servicenow'
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create ServiceNow ITOM connector request
      type: object
    create_connector_request_servicenow_sir:
      description: |
        The ServiceNow SecOps connector uses the import set API to create ServiceNow security incidents. You can use the connector for rule actions and cases.
      properties:
        config:
          $ref: '#/components/schemas/config_properties_servicenow'
        connector_type_id:
          description: The type of connector.
          enum:
          - .servicenow-sir
          example: .servicenow-sir
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_servicenow'
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create ServiceNow SecOps connector request
      type: object
    secrets_properties_slack:
      additionalProperties: true
      description: Defines secrets for connectors when type is `.slack`.
      title: Connector secrets properties for a Slack connector
      type: object
    create_connector_request_slack:
      description: The Slack connector uses Slack Incoming Webhooks.
      properties:
        connector_type_id:
          description: The type of connector.
          enum:
          - .slack
          example: .slack
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          additionalProperties: true
          description: Defines secrets for connectors when type is `.slack`.
          title: Connector secrets properties for a Slack connector
          type: object
      required:
      - connector_type_id
      - name
      - secrets
      title: Create Slack connector request
      type: object
    config_properties_swimlane:
      description: Defines properties for connectors when type is `.swimlane`.
      properties:
        apiUrl:
          description: The Swimlane instance URL.
          type: string
        appId:
          description: The Swimlane application ID.
          type: string
        connectorType:
          description: "The type of connector. Valid values are `all`, `alerts`, and\
            \ `cases`."
          enum:
          - all
          - alerts
          - cases
          type: string
        mappings:
          $ref: '#/components/schemas/Connector_mappings_properties_for_a_Swimlane_connector'
      required:
      - apiUrl
      - appId
      - connectorType
      title: Connector request properties for a Swimlane connector
      type: object
    secrets_properties_swimlane:
      description: Defines secrets for connectors when type is `.swimlane`.
      properties:
        apiToken:
          description: Swimlane API authentication token.
          type: string
      title: Connector secrets properties for a Swimlane connector
      type: object
    create_connector_request_swimlane:
      description: The Swimlane connector uses the Swimlane REST API to create Swimlane
        records.
      properties:
        config:
          $ref: '#/components/schemas/config_properties_swimlane'
        connector_type_id:
          description: The type of connector.
          enum:
          - .swimlane
          example: .swimlane
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_swimlane'
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create Swimlane connector request
      type: object
    secrets_properties_teams:
      additionalProperties: true
      description: Defines secrets for connectors when type is `.teams`.
      title: Connector secrets properties for a Microsoft Teams connector
      type: object
    create_connector_request_teams:
      description: The Microsoft Teams connector uses Incoming Webhooks.
      properties:
        connector_type_id:
          description: The type of connector.
          enum:
          - .teams
          example: .teams
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          additionalProperties: true
          description: Defines secrets for connectors when type is `.teams`.
          title: Connector secrets properties for a Microsoft Teams connector
          type: object
      required:
      - connector_type_id
      - name
      - secrets
      title: Create Microsoft Teams connector request
      type: object
    config_properties_tines:
      additionalProperties: true
      description: Defines properties for connectors when type is `.tines`.
      title: Connector request properties for a Tines connector
      type: object
    secrets_properties_tines:
      additionalProperties: true
      description: Defines secrets for connectors when type is `.tines`.
      title: Connector secrets properties for a Tines connector
      type: object
    create_connector_request_tines:
      description: |
        The Tines connector uses Tines Webhook actions to send events via POST request.
      properties:
        config:
          additionalProperties: true
          description: Defines properties for connectors when type is `.tines`.
          title: Connector request properties for a Tines connector
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .tines
          example: .tines
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          additionalProperties: true
          description: Defines secrets for connectors when type is `.tines`.
          title: Connector secrets properties for a Tines connector
          type: object
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create Tines connector request
      type: object
    config_properties_webhook:
      additionalProperties: true
      description: Defines properties for connectors when type is `.webhook`.
      title: Connector request properties for a Webhook connector
      type: object
    secrets_properties_webhook:
      additionalProperties: true
      description: Defines secrets for connectors when type is `.webhook`.
      title: Connector secrets properties for a Webhook connector
      type: object
    create_connector_request_webhook:
      description: |
        The Webhook connector uses axios to send a POST or PUT request to a web service.
      properties:
        config:
          additionalProperties: true
          description: Defines properties for connectors when type is `.webhook`.
          title: Connector request properties for a Webhook connector
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .webhook
          example: .webhook
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          additionalProperties: true
          description: Defines secrets for connectors when type is `.webhook`.
          title: Connector secrets properties for a Webhook connector
          type: object
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create Webhook connector request
      type: object
    config_properties_xmatters:
      additionalProperties: true
      description: Defines properties for connectors when type is `.xmatters`.
      title: Connector request properties for a xMatters connector
      type: object
    secrets_properties_xmatters:
      additionalProperties: true
      description: Defines secrets for connectors when type is `.xmatters`.
      title: Connector secrets properties for an xMatters connector
      type: object
    create_connector_request_xmatters:
      description: |
        The xMatters connector uses the xMatters Workflow for Elastic to send actionable alerts to on-call xMatters resources.
      properties:
        config:
          additionalProperties: true
          description: Defines properties for connectors when type is `.xmatters`.
          title: Connector request properties for a xMatters connector
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .xmatters
          example: .xmatters
          type: string
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          additionalProperties: true
          description: Defines secrets for connectors when type is `.xmatters`.
          title: Connector secrets properties for an xMatters connector
          type: object
      required:
      - config
      - connector_type_id
      - name
      - secrets
      title: Create xMatters connector request
      type: object
    is_deprecated:
      description: Indicates whether the connector type is deprecated.
      example: false
      type: boolean
    is_missing_secrets:
      description: Indicates whether secrets are missing for the connector. Secrets
        configuration properties vary depending on the connector type.
      example: false
      type: boolean
    is_preconfigured:
      description: "Indicates whether it is a preconfigured connector. If true, the\
        \ `config` and `is_missing_secrets` properties are omitted from the response."
      example: false
      type: boolean
    connector_response_properties_cases_webhook:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_cases_webhook'
        connector_type_id:
          description: The type of connector.
          enum:
          - .cases-webhook
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector request properties for a Webhook - Case Management connector
      type: object
    connector_response_properties_email:
      properties:
        config:
          additionalProperties: true
          description: Defines properties for connectors when type is `.email`.
          title: Connector request properties for an email connector
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .email
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for an email connector
      type: object
    connector_response_properties_index:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_index'
        connector_type_id:
          description: The type of connector.
          enum:
          - .index
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for an index connector
      type: object
    connector_response_properties_jira:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_jira'
        connector_type_id:
          description: The type of connector.
          enum:
          - .jira
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a Jira connector
      type: object
    connector_response_properties_opsgenie:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_opsgenie'
        connector_type_id:
          description: The type of connector.
          enum:
          - .opsgenie
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for an Opsgenie connector
      type: object
    connector_response_properties_pagerduty:
      properties:
        config:
          additionalProperties: true
          description: Defines properties for connectors when type is `.pagerduty`.
          title: Connector request properties for a PagerDuty connector
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .pagerduty
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a PagerDuty connector
      type: object
    connector_response_properties_resilient:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_resilient'
        connector_type_id:
          description: The type of connector.
          enum:
          - .resilient
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a IBM Resilient connector
      type: object
    connector_response_properties_serverlog:
      properties:
        config:
          nullable: true
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .server-log
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a server log connector
      type: object
    connector_response_properties_servicenow:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_servicenow'
        connector_type_id:
          description: The type of connector.
          enum:
          - .servicenow
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a ServiceNow ITSM connector
      type: object
    connector_response_properties_servicenow_itom:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_servicenow_itom'
        connector_type_id:
          description: The type of connector.
          enum:
          - .servicenow-itom
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a ServiceNow ITOM connector
      type: object
    connector_response_properties_servicenow_sir:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_servicenow'
        connector_type_id:
          description: The type of connector.
          enum:
          - .servicenow-sir
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a ServiceNow SecOps connector
      type: object
    connector_response_properties_slack:
      properties:
        connector_type_id:
          description: The type of connector.
          enum:
          - .slack
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a Slack connector
      type: object
    connector_response_properties_swimlane:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_swimlane'
        connector_type_id:
          description: The type of connector.
          enum:
          - .swimlane
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a Swimlane connector
      type: object
    connector_response_properties_teams:
      properties:
        connector_type_id:
          description: The type of connector.
          enum:
          - .teams
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a Microsoft Teams connector
      type: object
    connector_response_properties_tines:
      properties:
        config:
          additionalProperties: true
          description: Defines properties for connectors when type is `.tines`.
          title: Connector request properties for a Tines connector
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .tines
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a Tines connector
      type: object
    connector_response_properties_webhook:
      properties:
        config:
          additionalProperties: true
          description: Defines properties for connectors when type is `.webhook`.
          title: Connector request properties for a Webhook connector
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .webhook
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for a Webhook connector
      type: object
    connector_response_properties_xmatters:
      properties:
        config:
          additionalProperties: true
          description: Defines properties for connectors when type is `.xmatters`.
          title: Connector request properties for a xMatters connector
          type: object
        connector_type_id:
          description: The type of connector.
          enum:
          - .xmatters
          type: string
        id:
          description: The identifier for the connector.
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      title: Connector response properties for an xMatters connector
      type: object
    connector_response_properties:
      description: The properties vary depending on the connector type.
      discriminator:
        propertyName: connector_type_id
      oneOf:
      - $ref: '#/components/schemas/connector_response_properties_cases_webhook'
      - $ref: '#/components/schemas/connector_response_properties_email'
      - $ref: '#/components/schemas/connector_response_properties_index'
      - $ref: '#/components/schemas/connector_response_properties_jira'
      - $ref: '#/components/schemas/connector_response_properties_opsgenie'
      - $ref: '#/components/schemas/connector_response_properties_pagerduty'
      - $ref: '#/components/schemas/connector_response_properties_resilient'
      - $ref: '#/components/schemas/connector_response_properties_serverlog'
      - $ref: '#/components/schemas/connector_response_properties_servicenow'
      - $ref: '#/components/schemas/connector_response_properties_servicenow_itom'
      - $ref: '#/components/schemas/connector_response_properties_servicenow_sir'
      - $ref: '#/components/schemas/connector_response_properties_slack'
      - $ref: '#/components/schemas/connector_response_properties_swimlane'
      - $ref: '#/components/schemas/connector_response_properties_teams'
      - $ref: '#/components/schemas/connector_response_properties_tines'
      - $ref: '#/components/schemas/connector_response_properties_webhook'
      - $ref: '#/components/schemas/connector_response_properties_xmatters'
      title: Connector response properties
    "401_response":
      properties:
        error:
          enum:
          - Unauthorized
          example: Unauthorized
          type: string
        message:
          type: string
        statusCode:
          enum:
          - 401
          example: 401
          type: integer
      title: Unsuccessful rule API response
      type: object
    update_connector_request_cases_webhook:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_cases_webhook'
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_cases_webhook'
      required:
      - config
      - name
      title: Update Webhook - Case Managment connector request
      type: object
    update_connector_request_index:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_index'
        name:
          description: The display name for the connector.
          type: string
      required:
      - config
      - name
      title: Update index connector request
      type: object
    update_connector_request_jira:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_jira'
        name:
          description: The display name for the connector.
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_jira'
      required:
      - config
      - name
      - secrets
      title: Update Jira connector request
      type: object
    update_connector_request_opsgenie:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_opsgenie'
        name:
          description: The display name for the connector.
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_opsgenie'
      required:
      - config
      - name
      - secrets
      title: Update Opsgenie connector request
      type: object
    update_connector_request_resilient:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_resilient'
        name:
          description: The display name for the connector.
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_resilient'
      required:
      - config
      - name
      - secrets
      title: Update IBM Resilient connector request
      type: object
    update_connector_request_serverlog:
      properties:
        name:
          description: The display name for the connector.
          type: string
      required:
      - name
      title: Update server log connector request
      type: object
    update_connector_request_servicenow:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_servicenow'
        name:
          description: The display name for the connector.
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_servicenow'
      required:
      - config
      - name
      - secrets
      title: Update ServiceNow ITSM connector or ServiceNow SecOps request
      type: object
    update_connector_request_servicenow_itom:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_servicenow_itom'
        name:
          description: The display name for the connector.
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_servicenow'
      required:
      - config
      - name
      - secrets
      title: Create ServiceNow ITOM connector request
      type: object
    update_connector_request_swimlane:
      properties:
        config:
          $ref: '#/components/schemas/config_properties_swimlane'
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        secrets:
          $ref: '#/components/schemas/secrets_properties_swimlane'
      required:
      - config
      - name
      - secrets
      title: Update Swimlane connector request
      type: object
    "404_response":
      properties:
        error:
          enum:
          - Not Found
          example: Not Found
          type: string
        message:
          example: "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not\
            \ found"
          type: string
        statusCode:
          enum:
          - 404
          example: 404
          type: integer
      type: object
    connector_types:
      description: "The type of connector. For example, `.email`, `.index`, `.jira`,\
        \ `.opsgenie`, or `.server-log`."
      enum:
      - .cases-webhook
      - .email
      - .index
      - .jira
      - .opsgenie
      - .pagerduty
      - .resilient
      - .servicenow
      - .servicenow-itom
      - .servicenow-sir
      - .server-log
      - .slack
      - .swimlane
      - .teams
      - .tines
      - .webhook
      - .xmatters
      example: .server-log
      title: Connector types
      type: string
    features:
      description: |
        The feature that uses the connector. Valid values are `alerting`, `cases`, `uptime`, and `siem`.
      enum:
      - alerting
      - cases
      - uptime
      - siem
      type: string
    run_connector_params_documents:
      description: Test an action that indexes a document into Elasticsearch.
      properties:
        documents:
          description: The documents in JSON format for index connectors.
          items:
            additionalProperties: true
            type: object
          type: array
      required:
      - documents
      title: Index connector parameters
      type: object
    run_connector_params_level_message:
      description: Test an action that writes an entry to the Kibana server log.
      properties:
        level:
          default: info
          description: The log level of the message for server log connectors.
          enum:
          - debug
          - error
          - fatal
          - info
          - trace
          - warn
          type: string
        message:
          description: The message for server log connectors.
          type: string
      required:
      - message
      title: Server log connector parameters
      type: object
    run_connector_subaction_addevent:
      description: The `addEvent` subaction for ServiceNow ITOM connectors.
      properties:
        subAction:
          description: The action to test.
          enum:
          - addEvent
          type: string
        subActionParams:
          $ref: '#/components/schemas/run_connector_subaction_addevent_subActionParams'
      required:
      - subAction
      title: The addEvent subaction
      type: object
    run_connector_subaction_closealert:
      description: The `closeAlert` subaction for Opsgenie connectors.
      properties:
        subAction:
          description: The action to test.
          enum:
          - closeAlert
          type: string
        subActionParams:
          $ref: '#/components/schemas/run_connector_subaction_closealert_subActionParams'
      required:
      - subAction
      - subActionParams
      title: The closeAlert subaction
      type: object
    run_connector_subaction_createalert:
      description: The `createAlert` subaction for Opsgenie connectors.
      properties:
        subAction:
          description: The action to test.
          enum:
          - createAlert
          type: string
        subActionParams:
          $ref: '#/components/schemas/run_connector_subaction_createalert_subActionParams'
      required:
      - subAction
      - subActionParams
      title: The createAlert subaction
      type: object
    run_connector_subaction_fieldsbyissuetype:
      description: The `fieldsByIssueType` subaction for Jira connectors.
      properties:
        subAction:
          description: The action to test.
          enum:
          - fieldsByIssueType
          type: string
        subActionParams:
          $ref: '#/components/schemas/run_connector_subaction_fieldsbyissuetype_subActionParams'
      required:
      - subAction
      - subActionParams
      title: The fieldsByIssueType subaction
      type: object
    run_connector_subaction_getchoices:
      description: "The `getChoices` subaction for ServiceNow ITOM, ServiceNow ITSM,\
        \ and ServiceNow SecOps connectors."
      properties:
        subAction:
          description: The action to test.
          enum:
          - getChoices
          type: string
        subActionParams:
          $ref: '#/components/schemas/run_connector_subaction_getchoices_subActionParams'
      required:
      - subAction
      - subActionParams
      title: The getChoices subaction
      type: object
    run_connector_subaction_getfields:
      description: "The `getFields` subaction for Jira, ServiceNow ITSM, and ServiceNow\
        \ SecOps connectors."
      properties:
        subAction:
          description: The action to test.
          enum:
          - getFields
          type: string
      required:
      - subAction
      title: The getFields subaction
      type: object
    run_connector_subaction_getincident:
      description: "The `getIncident` subaction for Jira, ServiceNow ITSM, and ServiceNow\
        \ SecOps connectors."
      properties:
        subAction:
          description: The action to test.
          enum:
          - getIncident
          type: string
        subActionParams:
          $ref: '#/components/schemas/run_connector_subaction_getincident_subActionParams'
      required:
      - subAction
      - subActionParams
      title: The getIncident subaction
      type: object
    run_connector_subaction_issue:
      description: The `issue` subaction for Jira connectors.
      properties:
        subAction:
          description: The action to test.
          enum:
          - issue
          type: string
        subActionParams:
          $ref: '#/components/schemas/run_connector_subaction_issue_subActionParams'
      required:
      - subAction
      title: The issue subaction
      type: object
    run_connector_subaction_issues:
      description: The `issues` subaction for Jira connectors.
      properties:
        subAction:
          description: The action to test.
          enum:
          - issues
          type: string
        subActionParams:
          $ref: '#/components/schemas/run_connector_subaction_issues_subActionParams'
      required:
      - subAction
      - subActionParams
      title: The issues subaction
      type: object
    run_connector_subaction_issuetypes:
      description: The `issueTypes` subaction for Jira connectors.
      properties:
        subAction:
          description: The action to test.
          enum:
          - issueTypes
          type: string
      required:
      - subAction
      title: The issueTypes subaction
      type: object
    run_connector_subaction_pushtoservice:
      description: "The `pushToService` subaction for Jira, ServiceNow ITSM, ServiceNow\
        \ SecOps, and Swimlane connectors."
      properties:
        subAction:
          description: The action to test.
          enum:
          - pushToService
          type: string
        subActionParams:
          $ref: '#/components/schemas/run_connector_subaction_pushtoservice_subActionParams'
      required:
      - subAction
      - subActionParams
      title: The pushToService subaction
      type: object
    action_response_properties:
      description: The properties vary depending on the action type.
      example:
        isPreconfigured: true
        isDeprecated: true
        actionTypeId: actionTypeId
        name: name
        id: id
        config: "{}"
        isMissingSecrets: true
      properties:
        actionTypeId:
          type: string
        config:
          type: object
        id:
          type: string
        isDeprecated:
          description: Indicates whether the action type is deprecated.
          type: boolean
        isMissingSecrets:
          description: Indicates whether secrets are missing for the action.
          type: boolean
        isPreconfigured:
          description: Indicates whether it is a preconfigured action.
          type: boolean
        name:
          type: string
      title: Action response properties
      type: object
    Create_connector_request_body_properties:
      description: The properties vary depending on the connector type.
      discriminator:
        propertyName: connector_type_id
      oneOf:
      - $ref: '#/components/schemas/create_connector_request_cases_webhook'
      - $ref: '#/components/schemas/create_connector_request_email'
      - $ref: '#/components/schemas/create_connector_request_index'
      - $ref: '#/components/schemas/create_connector_request_jira'
      - $ref: '#/components/schemas/create_connector_request_opsgenie'
      - $ref: '#/components/schemas/create_connector_request_pagerduty'
      - $ref: '#/components/schemas/create_connector_request_resilient'
      - $ref: '#/components/schemas/create_connector_request_serverlog'
      - $ref: '#/components/schemas/create_connector_request_servicenow'
      - $ref: '#/components/schemas/create_connector_request_servicenow_itom'
      - $ref: '#/components/schemas/create_connector_request_servicenow_sir'
      - $ref: '#/components/schemas/create_connector_request_slack'
      - $ref: '#/components/schemas/create_connector_request_swimlane'
      - $ref: '#/components/schemas/create_connector_request_teams'
      - $ref: '#/components/schemas/create_connector_request_tines'
      - $ref: '#/components/schemas/create_connector_request_webhook'
      - $ref: '#/components/schemas/create_connector_request_xmatters'
      title: Create connector request body properties
    getConnector_404_response:
      properties:
        error:
          example: Not Found
          type: string
        message:
          example: "Saved object [action/baf33fc0-920c-11ed-b36a-874bd1548a00] not\
            \ found"
          type: string
        statusCode:
          example: 404
          type: integer
      type: object
    Update_connector_request_body_properties:
      description: The properties vary depending on the connector type.
      oneOf:
      - $ref: '#/components/schemas/update_connector_request_cases_webhook'
      - $ref: '#/components/schemas/update_connector_request_index'
      - $ref: '#/components/schemas/update_connector_request_jira'
      - $ref: '#/components/schemas/update_connector_request_opsgenie'
      - $ref: '#/components/schemas/update_connector_request_resilient'
      - $ref: '#/components/schemas/update_connector_request_serverlog'
      - $ref: '#/components/schemas/update_connector_request_servicenow'
      - $ref: '#/components/schemas/update_connector_request_servicenow_itom'
      - $ref: '#/components/schemas/update_connector_request_swimlane'
      title: Update connector request body properties
    updateConnector_400_response:
      properties:
        error:
          example: Bad Request
          type: string
        message:
          example: "error validating action type config: [index]: expected value of\
            \ type [string] but got [undefined]"
          type: string
        statusCode:
          example: 400
          type: integer
      type: object
    Get_connectors_response_body_properties:
      description: The properties vary for each connector type.
      example:
        is_missing_secrets: false
        is_deprecated: false
        is_preconfigured: false
        name: my-connector
        referenced_by_count: 2
        id: b0766e10-d190-11ec-b04c-776c77d14fca
        config:
          key: ""
        connector_type_id: .server-log
      properties:
        connector_type_id:
          $ref: '#/components/schemas/connector_types'
        config:
          additionalProperties: true
          description: The configuration for the connector. Configuration properties
            vary depending on the connector type.
          nullable: true
          type: object
        id:
          description: The identifier for the connector.
          example: b0766e10-d190-11ec-b04c-776c77d14fca
          type: string
        is_deprecated:
          description: Indicates whether the connector type is deprecated.
          example: false
          type: boolean
        is_missing_secrets:
          description: Indicates whether secrets are missing for the connector. Secrets
            configuration properties vary depending on the connector type.
          example: false
          type: boolean
        is_preconfigured:
          description: "Indicates whether it is a preconfigured connector. If true,\
            \ the `config` and `is_missing_secrets` properties are omitted from the\
            \ response."
          example: false
          type: boolean
        name:
          description: The display name for the connector.
          example: my-connector
          type: string
        referenced_by_count:
          default: 0
          description: "Indicates the number of saved objects that reference the connector.\
            \ If `is_preconfigured` is true, this value is not calculated."
          example: 2
          type: integer
      required:
      - connector_type_id
      - id
      - is_deprecated
      - is_preconfigured
      - name
      - referenced_by_count
      title: Get connectors response body properties
      type: object
    Get_connector_types_response_body_properties_inner:
      example:
        supported_feature_ids:
        - alerting
        - uptime
        - siem
        name: Index
        enabled_in_license: true
        id: .server-log
        enabled_in_config: true
        minimum_license_required: basic
        enabled: true
      properties:
        enabled:
          description: Indicates whether the connector type is enabled in Kibana.
          example: true
          type: boolean
        enabled_in_config:
          description: Indicates whether the connector type is enabled in the Kibana
            `.yml` file.
          example: true
          type: boolean
        enabled_in_license:
          description: Indicates whether the connector is enabled in the license.
          example: true
          type: boolean
        id:
          $ref: '#/components/schemas/connector_types'
        minimum_license_required:
          description: The license that is required to use the connector type.
          example: basic
          type: string
        name:
          description: The name of the connector type.
          example: Index
          type: string
        supported_feature_ids:
          description: The Kibana features that are supported by the connector type.
          example:
          - alerting
          - uptime
          - siem
          items:
            $ref: '#/components/schemas/features'
          type: array
      type: object
    Subaction_parameters:
      description: Test an action that involves a subaction.
      discriminator:
        propertyName: subAction
      oneOf:
      - $ref: '#/components/schemas/run_connector_subaction_addevent'
      - $ref: '#/components/schemas/run_connector_subaction_closealert'
      - $ref: '#/components/schemas/run_connector_subaction_createalert'
      - $ref: '#/components/schemas/run_connector_subaction_fieldsbyissuetype'
      - $ref: '#/components/schemas/run_connector_subaction_getchoices'
      - $ref: '#/components/schemas/run_connector_subaction_getfields'
      - $ref: '#/components/schemas/run_connector_subaction_getincident'
      - $ref: '#/components/schemas/run_connector_subaction_issue'
      - $ref: '#/components/schemas/run_connector_subaction_issues'
      - $ref: '#/components/schemas/run_connector_subaction_issuetypes'
      - $ref: '#/components/schemas/run_connector_subaction_pushtoservice'
      title: Subaction parameters
    Run_connector_request_body_properties_params:
      oneOf:
      - $ref: '#/components/schemas/run_connector_params_documents'
      - $ref: '#/components/schemas/run_connector_params_level_message'
      - $ref: '#/components/schemas/Subaction_parameters'
    Run_connector_request_body_properties:
      description: The properties vary depending on the connector type.
      properties:
        params:
          $ref: '#/components/schemas/Run_connector_request_body_properties_params'
      required:
      - params
      title: Run connector request body properties
      type: object
    runConnector_200_response_data:
      oneOf:
      - additionalProperties: true
        description: Information returned from the action.
        type: object
      - description: An array of information returned from the action.
        items:
          type: object
        type: array
    runConnector_200_response:
      example:
        data: null
        connector_id: connector_id
        status: error
      properties:
        connector_id:
          description: The identifier for the connector.
          type: string
        data:
          $ref: '#/components/schemas/runConnector_200_response_data'
        status:
          description: The status of the action.
          enum:
          - error
          - ok
          type: string
      required:
      - connector_id
      - status
      type: object
    Legacy_update_connector_request_body_properties:
      description: The properties vary depending on the connector type.
      properties:
        config:
          description: The new connector configuration. Configuration properties vary
            depending on the connector type.
          type: object
        name:
          description: The new name for the connector.
          type: string
        secrets:
          description: The updated secrets configuration for the connector. Secrets
            properties vary depending on the connector type.
          type: object
      title: Legacy update connector request body properties
      type: object
    Legacy_create_connector_request_properties:
      properties:
        actionTypeId:
          description: The connector type identifier.
          type: string
        config:
          description: The configuration for the connector. Configuration properties
            vary depending on the connector type.
          type: object
        name:
          description: The display name for the connector.
          type: string
        secrets:
          description: |
            The secrets configuration for the connector. Secrets configuration properties vary depending on the connector type. NOTE: Remember these values. You must provide them each time you update the connector.
          type: object
      title: Legacy create connector request properties
      type: object
    Legacy_get_connector_types_response_body_properties_inner:
      example:
        enabledInConfig: true
        name: name
        enabledInLicense: true
        id: id
        minimumLicenseRequired: minimumLicenseRequired
        enabled: true
      properties:
        enabled:
          description: Indicates whether the connector type is enabled in Kibana.
          type: boolean
        enabledInConfig:
          description: Indicates whether the connector type is enabled in the Kibana
            `.yml` file.
          type: boolean
        enabledInLicense:
          description: Indicates whether the connector is enabled in the license.
          example: true
          type: boolean
        id:
          description: The unique identifier for the connector type.
          type: string
        minimumLicenseRequired:
          description: The license that is required to use the connector type.
          type: string
        name:
          description: The name of the connector type.
          type: string
      type: object
    Legacy_run_connector_request_body_properties:
      description: The properties vary depending on the connector type.
      properties:
        params:
          description: The parameters of the connector. Parameter properties vary
            depending on the connector type.
          type: object
      required:
      - params
      title: Legacy run connector request body properties
      type: object
    legacyRunConnector_200_response:
      example:
        data: null
        actionId: actionId
        status: status
      properties:
        actionId:
          type: string
        data:
          $ref: '#/components/schemas/runConnector_200_response_data'
        status:
          description: The status of the action.
          type: string
      type: object
    Alert_identifier_mapping:
      description: Mapping for the alert ID.
      properties:
        fieldType:
          description: The type of field in Swimlane.
          type: string
        id:
          description: The identifier for the field in Swimlane.
          type: string
        key:
          description: The key for the field in Swimlane.
          type: string
        name:
          description: The name of the field in Swimlane.
          type: string
      required:
      - fieldType
      - id
      - key
      - name
      title: Alert identifier mapping
      type: object
    Case_identifier_mapping:
      description: Mapping for the case ID.
      properties:
        fieldType:
          description: The type of field in Swimlane.
          type: string
        id:
          description: The identifier for the field in Swimlane.
          type: string
        key:
          description: The key for the field in Swimlane.
          type: string
        name:
          description: The name of the field in Swimlane.
          type: string
      required:
      - fieldType
      - id
      - key
      - name
      title: Case identifier mapping
      type: object
    Case_name_mapping:
      description: Mapping for the case name.
      properties:
        fieldType:
          description: The type of field in Swimlane.
          type: string
        id:
          description: The identifier for the field in Swimlane.
          type: string
        key:
          description: The key for the field in Swimlane.
          type: string
        name:
          description: The name of the field in Swimlane.
          type: string
      required:
      - fieldType
      - id
      - key
      - name
      title: Case name mapping
      type: object
    Case_comment_mapping:
      description: Mapping for the case comments.
      properties:
        fieldType:
          description: The type of field in Swimlane.
          type: string
        id:
          description: The identifier for the field in Swimlane.
          type: string
        key:
          description: The key for the field in Swimlane.
          type: string
        name:
          description: The name of the field in Swimlane.
          type: string
      required:
      - fieldType
      - id
      - key
      - name
      title: Case comment mapping
      type: object
    Case_description_mapping:
      description: Mapping for the case description.
      properties:
        fieldType:
          description: The type of field in Swimlane.
          type: string
        id:
          description: The identifier for the field in Swimlane.
          type: string
        key:
          description: The key for the field in Swimlane.
          type: string
        name:
          description: The name of the field in Swimlane.
          type: string
      required:
      - fieldType
      - id
      - key
      - name
      title: Case description mapping
      type: object
    Rule_name_mapping:
      description: Mapping for the name of the alert's rule.
      properties:
        fieldType:
          description: The type of field in Swimlane.
          type: string
        id:
          description: The identifier for the field in Swimlane.
          type: string
        key:
          description: The key for the field in Swimlane.
          type: string
        name:
          description: The name of the field in Swimlane.
          type: string
      required:
      - fieldType
      - id
      - key
      - name
      title: Rule name mapping
      type: object
    Severity_mapping:
      description: Mapping for the severity.
      properties:
        fieldType:
          description: The type of field in Swimlane.
          type: string
        id:
          description: The identifier for the field in Swimlane.
          type: string
        key:
          description: The key for the field in Swimlane.
          type: string
        name:
          description: The name of the field in Swimlane.
          type: string
      required:
      - fieldType
      - id
      - key
      - name
      title: Severity mapping
      type: object
    Connector_mappings_properties_for_a_Swimlane_connector:
      description: The field mapping.
      properties:
        alertIdConfig:
          $ref: '#/components/schemas/Alert_identifier_mapping'
        caseIdConfig:
          $ref: '#/components/schemas/Case_identifier_mapping'
        caseNameConfig:
          $ref: '#/components/schemas/Case_name_mapping'
        commentsConfig:
          $ref: '#/components/schemas/Case_comment_mapping'
        descriptionConfig:
          $ref: '#/components/schemas/Case_description_mapping'
        ruleNameConfig:
          $ref: '#/components/schemas/Rule_name_mapping'
        severityConfig:
          $ref: '#/components/schemas/Severity_mapping'
      title: Connector mappings properties for a Swimlane connector
      type: object
    run_connector_subaction_addevent_subActionParams:
      description: The set of configuration properties for the action.
      properties:
        additional_info:
          description: Additional information about the event.
          type: string
        description:
          description: The details about the event.
          type: string
        event_class:
          description: A specific instance of the source.
          type: string
        message_key:
          description: All actions sharing this key are associated with the same ServiceNow
            alert. The default value is `<rule ID>:<alert instance ID>`.
          type: string
        metric_name:
          description: The name of the metric.
          type: string
        node:
          description: The host that the event was triggered for.
          type: string
        resource:
          description: The name of the resource.
          type: string
        severity:
          description: The severity of the event.
          type: string
        source:
          description: The name of the event source type.
          type: string
        time_of_event:
          description: The time of the event.
          type: string
        type:
          description: The type of event.
          type: string
      type: object
    run_connector_subaction_closealert_subActionParams:
      properties:
        alias:
          description: The unique identifier used for alert deduplication in Opsgenie.
            The alias must match the value used when creating the alert.
          type: string
        note:
          description: Additional information for the alert.
          type: string
        source:
          description: The display name for the source of the alert.
          type: string
        user:
          description: The display name for the owner.
          type: string
      required:
      - alias
      type: object
    run_connector_subaction_createalert_subActionParams_responders_inner:
      properties:
        id:
          description: The identifier for the entity.
          type: string
        name:
          description: The name of the entity.
          type: string
        type:
          description: "The type of responders, in this case `escalation`."
          enum:
          - escalation
          - schedule
          - team
          - user
          type: string
        username:
          description: A valid email address for the user.
          type: string
      type: object
    run_connector_subaction_createalert_subActionParams_visibleTo_inner:
      properties:
        id:
          description: The identifier for the entity.
          type: string
        name:
          description: The name of the entity.
          type: string
        type:
          description: Valid values are `team` and `user`.
          enum:
          - team
          - user
          type: string
        username:
          description: The user name. This property is required only when the `type`
            is `user`.
          type: string
      required:
      - type
      type: object
    run_connector_subaction_createalert_subActionParams:
      properties:
        actions:
          description: The custom actions available to the alert.
          items:
            type: string
          type: array
        alias:
          description: The unique identifier used for alert deduplication in Opsgenie.
          type: string
        description:
          description: A description that provides detailed information about the
            alert.
          type: string
        details:
          additionalProperties: true
          description: The custom properties of the alert.
          example:
            key1: value1
            key2: value2
          type: object
        entity:
          description: "The domain of the alert. For example, the application or server\
            \ name."
          type: string
        message:
          description: The alert message.
          type: string
        note:
          description: Additional information for the alert.
          type: string
        priority:
          description: The priority level for the alert.
          enum:
          - P1
          - P2
          - P3
          - P4
          - P5
          type: string
        responders:
          description: |
            The entities to receive notifications about the alert. If `type` is `user`, either `id` or `username` is required. If `type` is `team`, either `id` or `name` is required.
          items:
            $ref: '#/components/schemas/run_connector_subaction_createalert_subActionParams_responders_inner'
          type: array
        source:
          description: The display name for the source of the alert.
          type: string
        tags:
          description: The tags for the alert.
          items:
            type: string
          type: array
        user:
          description: The display name for the owner.
          type: string
        visibleTo:
          description: "The teams and users that the alert will be visible to without\
            \ sending a notification. Only one of `id`, `name`, or `username` is required."
          items:
            $ref: '#/components/schemas/run_connector_subaction_createalert_subActionParams_visibleTo_inner'
          type: array
      required:
      - message
      type: object
    run_connector_subaction_fieldsbyissuetype_subActionParams:
      properties:
        id:
          description: The Jira issue type identifier.
          example: "10024"
          type: string
      required:
      - id
      type: object
    run_connector_subaction_getchoices_subActionParams:
      description: The set of configuration properties for the action.
      properties:
        fields:
          description: An array of fields.
          items:
            type: string
          type: array
      required:
      - fields
      type: object
    run_connector_subaction_getincident_subActionParams:
      properties:
        externalId:
          description: "The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier."
          example: "71778"
          type: string
      required:
      - externalId
      type: object
    run_connector_subaction_issue_subActionParams:
      properties:
        id:
          description: The Jira issue identifier.
          example: "71778"
          type: string
      required:
      - id
      type: object
    run_connector_subaction_issues_subActionParams:
      properties:
        title:
          description: The title of the Jira issue.
          type: string
      required:
      - title
      type: object
    run_connector_subaction_pushtoservice_subActionParams_comments_inner:
      properties:
        comment:
          description: "A comment related to the incident. For example, describe how\
            \ to troubleshoot the issue."
          type: string
        commentId:
          description: A unique identifier for the comment.
          type: integer
      type: object
    run_connector_subaction_pushtoservice_subActionParams_incident_dest_ip:
      description: |
        A list of destination IP addresses related to the security incident for ServiceNow SecOps connectors. The IPs are added as observables to the security incident.
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    run_connector_subaction_pushtoservice_subActionParams_incident_malware_hash:
      description: A list of malware hashes related to the security incident for ServiceNow
        SecOps connectors. The hashes are added as observables to the security incident.
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    run_connector_subaction_pushtoservice_subActionParams_incident_malware_url:
      description: A list of malware URLs related to the security incident for ServiceNow
        SecOps connectors. The URLs are added as observables to the security incident.
      oneOf:
      - type: string
      - items:
          type: string
        type: array
      type: string
    run_connector_subaction_pushtoservice_subActionParams_incident_source_ip:
      description: A list of source IP addresses related to the security incident
        for ServiceNow SecOps connectors. The IPs are added as observables to the
        security incident.
      oneOf:
      - type: string
      - items:
          type: string
        type: array
    run_connector_subaction_pushtoservice_subActionParams_incident:
      description: "Information necessary to create or update a Jira, ServiceNow ITSM,\
        \ ServiveNow SecOps, or Swimlane incident."
      properties:
        alertId:
          description: The alert identifier for Swimlane connectors.
          type: string
        caseId:
          description: The case identifier for the incident for Swimlane connectors.
          type: string
        caseName:
          description: The case name for the incident for Swimlane connectors.
          type: string
        category:
          description: The category of the incident for ServiceNow ITSM and ServiceNow
            SecOps connectors.
          type: string
        correlation_display:
          description: A descriptive label of the alert for correlation purposes for
            ServiceNow ITSM and ServiceNow SecOps connectors.
          type: string
        correlation_id:
          description: |
            The correlation identifier for the security incident for ServiceNow ITSM and ServiveNow SecOps connectors. Connectors using the same correlation ID are associated with the same ServiceNow incident. This value determines whether a new ServiceNow incident is created or an existing one is updated. Modifying this value is optional; if not modified, the rule ID and alert ID are combined as `{{ruleID}}:{{alert ID}}` to form the correlation ID value in ServiceNow. The maximum character length for this value is 100 characters. NOTE: Using the default configuration of `{{ruleID}}:{{alert ID}}` ensures that ServiceNow creates a separate incident record for every generated alert that uses a unique alert ID. If the rule generates multiple alerts that use the same alert IDs, ServiceNow creates and continually updates a single incident record for the alert.
          type: string
        description:
          description: "The description of the incident for Jira, ServiceNow ITSM,\
            \ ServiceNow SecOps, and Swimlane connectors."
          type: string
        dest_ip:
          $ref: '#/components/schemas/run_connector_subaction_pushtoservice_subActionParams_incident_dest_ip'
        externalId:
          description: |
            The Jira, ServiceNow ITSM, or ServiceNow SecOps issue identifier. If present, the incident is updated. Otherwise, a new incident is created.
          type: string
        impact:
          description: The impact of the incident for ServiceNow ITSM connectors.
          type: string
        issueType:
          description: "The type of incident for Jira connectors. For example, 10006.\
            \ To obtain the list of valid values, set `subAction` to `issueTypes`."
          type: integer
        labels:
          description: |
            The labels for the incident for Jira connectors. NOTE: Labels cannot contain spaces.
          items:
            type: string
          type: array
        malware_hash:
          $ref: '#/components/schemas/run_connector_subaction_pushtoservice_subActionParams_incident_malware_hash'
        malware_url:
          $ref: '#/components/schemas/run_connector_subaction_pushtoservice_subActionParams_incident_malware_url'
        parent:
          description: The ID or key of the parent issue for Jira connectors. Applies
            only to `Sub-task` types of issues.
          type: string
        priority:
          description: The priority of the incident in Jira and ServiceNow SecOps
            connectors.
          type: string
        ruleName:
          description: The rule name for Swimlane connectors.
          type: string
        severity:
          description: The severity of the incident for ServiceNow ITSM and Swimlane
            connectors.
          type: string
        short_description:
          description: |
            A short description of the incident for ServiceNow ITSM and ServiceNow SecOps connectors. It is used for searching the contents of the knowledge base.
          type: string
        source_ip:
          $ref: '#/components/schemas/run_connector_subaction_pushtoservice_subActionParams_incident_source_ip'
        subcategory:
          description: The subcategory of the incident for ServiceNow ITSM and ServiceNow
            SecOps connectors.
          type: string
        summary:
          description: A summary of the incident for Jira connectors.
          type: string
        title:
          description: |
            A title for the incident for Jira connectors. It is used for searching the contents of the knowledge base.
          type: string
        urgency:
          description: The urgency of the incident for ServiceNow ITSM connectors.
          type: string
      type: object
    run_connector_subaction_pushtoservice_subActionParams:
      description: The set of configuration properties for the action.
      properties:
        comments:
          description: "Additional information that is sent to Jira, ServiceNow ITSM,\
            \ ServiceNow SecOps, or Swimlane."
          items:
            $ref: '#/components/schemas/run_connector_subaction_pushtoservice_subActionParams_comments_inner'
          type: array
        incident:
          $ref: '#/components/schemas/run_connector_subaction_pushtoservice_subActionParams_incident'
      type: object
  securitySchemes:
    basicAuth:
      scheme: basic
      type: http
    apiKeyAuth:
      in: header
      name: ApiKey
      type: apiKey
