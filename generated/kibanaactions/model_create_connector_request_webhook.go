/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the CreateConnectorRequestWebhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConnectorRequestWebhook{}

// CreateConnectorRequestWebhook The Webhook connector uses axios to send a POST or PUT request to a web service.
type CreateConnectorRequestWebhook struct {
	// Defines properties for connectors when type is `.webhook`.
	Config map[string]interface{} `json:"config"`
	// The type of connector.
	ConnectorTypeId string `json:"connector_type_id"`
	// The display name for the connector.
	Name string `json:"name"`
	// Defines secrets for connectors when type is `.webhook`.
	Secrets map[string]interface{} `json:"secrets"`
}

// NewCreateConnectorRequestWebhook instantiates a new CreateConnectorRequestWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnectorRequestWebhook(config map[string]interface{}, connectorTypeId string, name string, secrets map[string]interface{}) *CreateConnectorRequestWebhook {
	this := CreateConnectorRequestWebhook{}
	this.Config = config
	this.ConnectorTypeId = connectorTypeId
	this.Name = name
	this.Secrets = secrets
	return &this
}

// NewCreateConnectorRequestWebhookWithDefaults instantiates a new CreateConnectorRequestWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnectorRequestWebhookWithDefaults() *CreateConnectorRequestWebhook {
	this := CreateConnectorRequestWebhook{}
	return &this
}

// GetConfig returns the Config field value
func (o *CreateConnectorRequestWebhook) GetConfig() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestWebhook) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// SetConfig sets field value
func (o *CreateConnectorRequestWebhook) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetConnectorTypeId returns the ConnectorTypeId field value
func (o *CreateConnectorRequestWebhook) GetConnectorTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorTypeId
}

// GetConnectorTypeIdOk returns a tuple with the ConnectorTypeId field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestWebhook) GetConnectorTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorTypeId, true
}

// SetConnectorTypeId sets field value
func (o *CreateConnectorRequestWebhook) SetConnectorTypeId(v string) {
	o.ConnectorTypeId = v
}

// GetName returns the Name field value
func (o *CreateConnectorRequestWebhook) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestWebhook) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateConnectorRequestWebhook) SetName(v string) {
	o.Name = v
}

// GetSecrets returns the Secrets field value
func (o *CreateConnectorRequestWebhook) GetSecrets() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestWebhook) GetSecretsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Secrets, true
}

// SetSecrets sets field value
func (o *CreateConnectorRequestWebhook) SetSecrets(v map[string]interface{}) {
	o.Secrets = v
}

func (o CreateConnectorRequestWebhook) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConnectorRequestWebhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config"] = o.Config
	toSerialize["connector_type_id"] = o.ConnectorTypeId
	toSerialize["name"] = o.Name
	toSerialize["secrets"] = o.Secrets
	return toSerialize, nil
}

type NullableCreateConnectorRequestWebhook struct {
	value *CreateConnectorRequestWebhook
	isSet bool
}

func (v NullableCreateConnectorRequestWebhook) Get() *CreateConnectorRequestWebhook {
	return v.value
}

func (v *NullableCreateConnectorRequestWebhook) Set(val *CreateConnectorRequestWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnectorRequestWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnectorRequestWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnectorRequestWebhook(val *CreateConnectorRequestWebhook) *NullableCreateConnectorRequestWebhook {
	return &NullableCreateConnectorRequestWebhook{value: val, isSet: true}
}

func (v NullableCreateConnectorRequestWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnectorRequestWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
