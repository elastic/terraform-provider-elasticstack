/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the RunConnectorSubactionPushtoservice type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunConnectorSubactionPushtoservice{}

// RunConnectorSubactionPushtoservice The `pushToService` subaction for Jira, ServiceNow ITSM, ServiceNow SecOps, and Swimlane connectors.
type RunConnectorSubactionPushtoservice struct {
	// The action to test.
	SubAction       string                                            `json:"subAction"`
	SubActionParams RunConnectorSubactionPushtoserviceSubActionParams `json:"subActionParams"`
}

// NewRunConnectorSubactionPushtoservice instantiates a new RunConnectorSubactionPushtoservice object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunConnectorSubactionPushtoservice(subAction string, subActionParams RunConnectorSubactionPushtoserviceSubActionParams) *RunConnectorSubactionPushtoservice {
	this := RunConnectorSubactionPushtoservice{}
	this.SubAction = subAction
	this.SubActionParams = subActionParams
	return &this
}

// NewRunConnectorSubactionPushtoserviceWithDefaults instantiates a new RunConnectorSubactionPushtoservice object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunConnectorSubactionPushtoserviceWithDefaults() *RunConnectorSubactionPushtoservice {
	this := RunConnectorSubactionPushtoservice{}
	return &this
}

// GetSubAction returns the SubAction field value
func (o *RunConnectorSubactionPushtoservice) GetSubAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubAction
}

// GetSubActionOk returns a tuple with the SubAction field value
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionPushtoservice) GetSubActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubAction, true
}

// SetSubAction sets field value
func (o *RunConnectorSubactionPushtoservice) SetSubAction(v string) {
	o.SubAction = v
}

// GetSubActionParams returns the SubActionParams field value
func (o *RunConnectorSubactionPushtoservice) GetSubActionParams() RunConnectorSubactionPushtoserviceSubActionParams {
	if o == nil {
		var ret RunConnectorSubactionPushtoserviceSubActionParams
		return ret
	}

	return o.SubActionParams
}

// GetSubActionParamsOk returns a tuple with the SubActionParams field value
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionPushtoservice) GetSubActionParamsOk() (*RunConnectorSubactionPushtoserviceSubActionParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubActionParams, true
}

// SetSubActionParams sets field value
func (o *RunConnectorSubactionPushtoservice) SetSubActionParams(v RunConnectorSubactionPushtoserviceSubActionParams) {
	o.SubActionParams = v
}

func (o RunConnectorSubactionPushtoservice) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunConnectorSubactionPushtoservice) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subAction"] = o.SubAction
	toSerialize["subActionParams"] = o.SubActionParams
	return toSerialize, nil
}

type NullableRunConnectorSubactionPushtoservice struct {
	value *RunConnectorSubactionPushtoservice
	isSet bool
}

func (v NullableRunConnectorSubactionPushtoservice) Get() *RunConnectorSubactionPushtoservice {
	return v.value
}

func (v *NullableRunConnectorSubactionPushtoservice) Set(val *RunConnectorSubactionPushtoservice) {
	v.value = val
	v.isSet = true
}

func (v NullableRunConnectorSubactionPushtoservice) IsSet() bool {
	return v.isSet
}

func (v *NullableRunConnectorSubactionPushtoservice) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunConnectorSubactionPushtoservice(val *RunConnectorSubactionPushtoservice) *NullableRunConnectorSubactionPushtoservice {
	return &NullableRunConnectorSubactionPushtoservice{value: val, isSet: true}
}

func (v NullableRunConnectorSubactionPushtoservice) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunConnectorSubactionPushtoservice) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
