/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the ConfigPropertiesJira type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigPropertiesJira{}

// ConfigPropertiesJira Defines properties for connectors when type is `.jira`.
type ConfigPropertiesJira struct {
	// The Jira instance URL.
	ApiUrl string `json:"apiUrl"`
	// The Jira project key.
	ProjectKey string `json:"projectKey"`
}

// NewConfigPropertiesJira instantiates a new ConfigPropertiesJira object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigPropertiesJira(apiUrl string, projectKey string) *ConfigPropertiesJira {
	this := ConfigPropertiesJira{}
	this.ApiUrl = apiUrl
	this.ProjectKey = projectKey
	return &this
}

// NewConfigPropertiesJiraWithDefaults instantiates a new ConfigPropertiesJira object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigPropertiesJiraWithDefaults() *ConfigPropertiesJira {
	this := ConfigPropertiesJira{}
	return &this
}

// GetApiUrl returns the ApiUrl field value
func (o *ConfigPropertiesJira) GetApiUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiUrl
}

// GetApiUrlOk returns a tuple with the ApiUrl field value
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesJira) GetApiUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiUrl, true
}

// SetApiUrl sets field value
func (o *ConfigPropertiesJira) SetApiUrl(v string) {
	o.ApiUrl = v
}

// GetProjectKey returns the ProjectKey field value
func (o *ConfigPropertiesJira) GetProjectKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectKey
}

// GetProjectKeyOk returns a tuple with the ProjectKey field value
// and a boolean to check if the value has been set.
func (o *ConfigPropertiesJira) GetProjectKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectKey, true
}

// SetProjectKey sets field value
func (o *ConfigPropertiesJira) SetProjectKey(v string) {
	o.ProjectKey = v
}

func (o ConfigPropertiesJira) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigPropertiesJira) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiUrl"] = o.ApiUrl
	toSerialize["projectKey"] = o.ProjectKey
	return toSerialize, nil
}

type NullableConfigPropertiesJira struct {
	value *ConfigPropertiesJira
	isSet bool
}

func (v NullableConfigPropertiesJira) Get() *ConfigPropertiesJira {
	return v.value
}

func (v *NullableConfigPropertiesJira) Set(val *ConfigPropertiesJira) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigPropertiesJira) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigPropertiesJira) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigPropertiesJira(val *ConfigPropertiesJira) *NullableConfigPropertiesJira {
	return &NullableConfigPropertiesJira{value: val, isSet: true}
}

func (v NullableConfigPropertiesJira) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigPropertiesJira) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
