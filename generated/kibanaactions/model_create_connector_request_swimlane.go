/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the CreateConnectorRequestSwimlane type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConnectorRequestSwimlane{}

// CreateConnectorRequestSwimlane The Swimlane connector uses the Swimlane REST API to create Swimlane records.
type CreateConnectorRequestSwimlane struct {
	Config ConfigPropertiesSwimlane `json:"config"`
	// The type of connector.
	ConnectorTypeId string `json:"connector_type_id"`
	// The display name for the connector.
	Name    string                    `json:"name"`
	Secrets SecretsPropertiesSwimlane `json:"secrets"`
}

// NewCreateConnectorRequestSwimlane instantiates a new CreateConnectorRequestSwimlane object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnectorRequestSwimlane(config ConfigPropertiesSwimlane, connectorTypeId string, name string, secrets SecretsPropertiesSwimlane) *CreateConnectorRequestSwimlane {
	this := CreateConnectorRequestSwimlane{}
	this.Config = config
	this.ConnectorTypeId = connectorTypeId
	this.Name = name
	this.Secrets = secrets
	return &this
}

// NewCreateConnectorRequestSwimlaneWithDefaults instantiates a new CreateConnectorRequestSwimlane object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnectorRequestSwimlaneWithDefaults() *CreateConnectorRequestSwimlane {
	this := CreateConnectorRequestSwimlane{}
	return &this
}

// GetConfig returns the Config field value
func (o *CreateConnectorRequestSwimlane) GetConfig() ConfigPropertiesSwimlane {
	if o == nil {
		var ret ConfigPropertiesSwimlane
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestSwimlane) GetConfigOk() (*ConfigPropertiesSwimlane, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *CreateConnectorRequestSwimlane) SetConfig(v ConfigPropertiesSwimlane) {
	o.Config = v
}

// GetConnectorTypeId returns the ConnectorTypeId field value
func (o *CreateConnectorRequestSwimlane) GetConnectorTypeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorTypeId
}

// GetConnectorTypeIdOk returns a tuple with the ConnectorTypeId field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestSwimlane) GetConnectorTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorTypeId, true
}

// SetConnectorTypeId sets field value
func (o *CreateConnectorRequestSwimlane) SetConnectorTypeId(v string) {
	o.ConnectorTypeId = v
}

// GetName returns the Name field value
func (o *CreateConnectorRequestSwimlane) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestSwimlane) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateConnectorRequestSwimlane) SetName(v string) {
	o.Name = v
}

// GetSecrets returns the Secrets field value
func (o *CreateConnectorRequestSwimlane) GetSecrets() SecretsPropertiesSwimlane {
	if o == nil {
		var ret SecretsPropertiesSwimlane
		return ret
	}

	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorRequestSwimlane) GetSecretsOk() (*SecretsPropertiesSwimlane, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secrets, true
}

// SetSecrets sets field value
func (o *CreateConnectorRequestSwimlane) SetSecrets(v SecretsPropertiesSwimlane) {
	o.Secrets = v
}

func (o CreateConnectorRequestSwimlane) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConnectorRequestSwimlane) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["config"] = o.Config
	toSerialize["connector_type_id"] = o.ConnectorTypeId
	toSerialize["name"] = o.Name
	toSerialize["secrets"] = o.Secrets
	return toSerialize, nil
}

type NullableCreateConnectorRequestSwimlane struct {
	value *CreateConnectorRequestSwimlane
	isSet bool
}

func (v NullableCreateConnectorRequestSwimlane) Get() *CreateConnectorRequestSwimlane {
	return v.value
}

func (v *NullableCreateConnectorRequestSwimlane) Set(val *CreateConnectorRequestSwimlane) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnectorRequestSwimlane) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnectorRequestSwimlane) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnectorRequestSwimlane(val *CreateConnectorRequestSwimlane) *NullableCreateConnectorRequestSwimlane {
	return &NullableCreateConnectorRequestSwimlane{value: val, isSet: true}
}

func (v NullableCreateConnectorRequestSwimlane) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnectorRequestSwimlane) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
