/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the RunConnectorSubactionGetincident type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunConnectorSubactionGetincident{}

// RunConnectorSubactionGetincident The `getIncident` subaction for Jira, ServiceNow ITSM, and ServiceNow SecOps connectors.
type RunConnectorSubactionGetincident struct {
	// The action to test.
	SubAction       string                                          `json:"subAction"`
	SubActionParams RunConnectorSubactionGetincidentSubActionParams `json:"subActionParams"`
}

// NewRunConnectorSubactionGetincident instantiates a new RunConnectorSubactionGetincident object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunConnectorSubactionGetincident(subAction string, subActionParams RunConnectorSubactionGetincidentSubActionParams) *RunConnectorSubactionGetincident {
	this := RunConnectorSubactionGetincident{}
	this.SubAction = subAction
	this.SubActionParams = subActionParams
	return &this
}

// NewRunConnectorSubactionGetincidentWithDefaults instantiates a new RunConnectorSubactionGetincident object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunConnectorSubactionGetincidentWithDefaults() *RunConnectorSubactionGetincident {
	this := RunConnectorSubactionGetincident{}
	return &this
}

// GetSubAction returns the SubAction field value
func (o *RunConnectorSubactionGetincident) GetSubAction() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubAction
}

// GetSubActionOk returns a tuple with the SubAction field value
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionGetincident) GetSubActionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubAction, true
}

// SetSubAction sets field value
func (o *RunConnectorSubactionGetincident) SetSubAction(v string) {
	o.SubAction = v
}

// GetSubActionParams returns the SubActionParams field value
func (o *RunConnectorSubactionGetincident) GetSubActionParams() RunConnectorSubactionGetincidentSubActionParams {
	if o == nil {
		var ret RunConnectorSubactionGetincidentSubActionParams
		return ret
	}

	return o.SubActionParams
}

// GetSubActionParamsOk returns a tuple with the SubActionParams field value
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionGetincident) GetSubActionParamsOk() (*RunConnectorSubactionGetincidentSubActionParams, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubActionParams, true
}

// SetSubActionParams sets field value
func (o *RunConnectorSubactionGetincident) SetSubActionParams(v RunConnectorSubactionGetincidentSubActionParams) {
	o.SubActionParams = v
}

func (o RunConnectorSubactionGetincident) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunConnectorSubactionGetincident) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subAction"] = o.SubAction
	toSerialize["subActionParams"] = o.SubActionParams
	return toSerialize, nil
}

type NullableRunConnectorSubactionGetincident struct {
	value *RunConnectorSubactionGetincident
	isSet bool
}

func (v NullableRunConnectorSubactionGetincident) Get() *RunConnectorSubactionGetincident {
	return v.value
}

func (v *NullableRunConnectorSubactionGetincident) Set(val *RunConnectorSubactionGetincident) {
	v.value = val
	v.isSet = true
}

func (v NullableRunConnectorSubactionGetincident) IsSet() bool {
	return v.isSet
}

func (v *NullableRunConnectorSubactionGetincident) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunConnectorSubactionGetincident(val *RunConnectorSubactionGetincident) *NullableRunConnectorSubactionGetincident {
	return &NullableRunConnectorSubactionGetincident{value: val, isSet: true}
}

func (v NullableRunConnectorSubactionGetincident) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunConnectorSubactionGetincident) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
