/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the ActionResponseProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActionResponseProperties{}

// ActionResponseProperties The properties vary depending on the action type.
type ActionResponseProperties struct {
	ActionTypeId *string                `json:"actionTypeId,omitempty"`
	Config       map[string]interface{} `json:"config,omitempty"`
	Id           *string                `json:"id,omitempty"`
	// Indicates whether the action type is deprecated.
	IsDeprecated *bool `json:"isDeprecated,omitempty"`
	// Indicates whether secrets are missing for the action.
	IsMissingSecrets *bool `json:"isMissingSecrets,omitempty"`
	// Indicates whether it is a preconfigured action.
	IsPreconfigured *bool   `json:"isPreconfigured,omitempty"`
	Name            *string `json:"name,omitempty"`
}

// NewActionResponseProperties instantiates a new ActionResponseProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionResponseProperties() *ActionResponseProperties {
	this := ActionResponseProperties{}
	return &this
}

// NewActionResponsePropertiesWithDefaults instantiates a new ActionResponseProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionResponsePropertiesWithDefaults() *ActionResponseProperties {
	this := ActionResponseProperties{}
	return &this
}

// GetActionTypeId returns the ActionTypeId field value if set, zero value otherwise.
func (o *ActionResponseProperties) GetActionTypeId() string {
	if o == nil || IsNil(o.ActionTypeId) {
		var ret string
		return ret
	}
	return *o.ActionTypeId
}

// GetActionTypeIdOk returns a tuple with the ActionTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseProperties) GetActionTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.ActionTypeId) {
		return nil, false
	}
	return o.ActionTypeId, true
}

// HasActionTypeId returns a boolean if a field has been set.
func (o *ActionResponseProperties) HasActionTypeId() bool {
	if o != nil && !IsNil(o.ActionTypeId) {
		return true
	}

	return false
}

// SetActionTypeId gets a reference to the given string and assigns it to the ActionTypeId field.
func (o *ActionResponseProperties) SetActionTypeId(v string) {
	o.ActionTypeId = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ActionResponseProperties) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseProperties) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ActionResponseProperties) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *ActionResponseProperties) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActionResponseProperties) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseProperties) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActionResponseProperties) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ActionResponseProperties) SetId(v string) {
	o.Id = &v
}

// GetIsDeprecated returns the IsDeprecated field value if set, zero value otherwise.
func (o *ActionResponseProperties) GetIsDeprecated() bool {
	if o == nil || IsNil(o.IsDeprecated) {
		var ret bool
		return ret
	}
	return *o.IsDeprecated
}

// GetIsDeprecatedOk returns a tuple with the IsDeprecated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseProperties) GetIsDeprecatedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeprecated) {
		return nil, false
	}
	return o.IsDeprecated, true
}

// HasIsDeprecated returns a boolean if a field has been set.
func (o *ActionResponseProperties) HasIsDeprecated() bool {
	if o != nil && !IsNil(o.IsDeprecated) {
		return true
	}

	return false
}

// SetIsDeprecated gets a reference to the given bool and assigns it to the IsDeprecated field.
func (o *ActionResponseProperties) SetIsDeprecated(v bool) {
	o.IsDeprecated = &v
}

// GetIsMissingSecrets returns the IsMissingSecrets field value if set, zero value otherwise.
func (o *ActionResponseProperties) GetIsMissingSecrets() bool {
	if o == nil || IsNil(o.IsMissingSecrets) {
		var ret bool
		return ret
	}
	return *o.IsMissingSecrets
}

// GetIsMissingSecretsOk returns a tuple with the IsMissingSecrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseProperties) GetIsMissingSecretsOk() (*bool, bool) {
	if o == nil || IsNil(o.IsMissingSecrets) {
		return nil, false
	}
	return o.IsMissingSecrets, true
}

// HasIsMissingSecrets returns a boolean if a field has been set.
func (o *ActionResponseProperties) HasIsMissingSecrets() bool {
	if o != nil && !IsNil(o.IsMissingSecrets) {
		return true
	}

	return false
}

// SetIsMissingSecrets gets a reference to the given bool and assigns it to the IsMissingSecrets field.
func (o *ActionResponseProperties) SetIsMissingSecrets(v bool) {
	o.IsMissingSecrets = &v
}

// GetIsPreconfigured returns the IsPreconfigured field value if set, zero value otherwise.
func (o *ActionResponseProperties) GetIsPreconfigured() bool {
	if o == nil || IsNil(o.IsPreconfigured) {
		var ret bool
		return ret
	}
	return *o.IsPreconfigured
}

// GetIsPreconfiguredOk returns a tuple with the IsPreconfigured field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseProperties) GetIsPreconfiguredOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPreconfigured) {
		return nil, false
	}
	return o.IsPreconfigured, true
}

// HasIsPreconfigured returns a boolean if a field has been set.
func (o *ActionResponseProperties) HasIsPreconfigured() bool {
	if o != nil && !IsNil(o.IsPreconfigured) {
		return true
	}

	return false
}

// SetIsPreconfigured gets a reference to the given bool and assigns it to the IsPreconfigured field.
func (o *ActionResponseProperties) SetIsPreconfigured(v bool) {
	o.IsPreconfigured = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ActionResponseProperties) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionResponseProperties) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ActionResponseProperties) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ActionResponseProperties) SetName(v string) {
	o.Name = &v
}

func (o ActionResponseProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActionResponseProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActionTypeId) {
		toSerialize["actionTypeId"] = o.ActionTypeId
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IsDeprecated) {
		toSerialize["isDeprecated"] = o.IsDeprecated
	}
	if !IsNil(o.IsMissingSecrets) {
		toSerialize["isMissingSecrets"] = o.IsMissingSecrets
	}
	if !IsNil(o.IsPreconfigured) {
		toSerialize["isPreconfigured"] = o.IsPreconfigured
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	return toSerialize, nil
}

type NullableActionResponseProperties struct {
	value *ActionResponseProperties
	isSet bool
}

func (v NullableActionResponseProperties) Get() *ActionResponseProperties {
	return v.value
}

func (v *NullableActionResponseProperties) Set(val *ActionResponseProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableActionResponseProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableActionResponseProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionResponseProperties(val *ActionResponseProperties) *NullableActionResponseProperties {
	return &NullableActionResponseProperties{value: val, isSet: true}
}

func (v NullableActionResponseProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionResponseProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
