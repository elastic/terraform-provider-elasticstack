/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
	"fmt"
)

// UpdateConnectorRequestBodyProperties - The properties vary depending on the connector type.
type UpdateConnectorRequestBodyProperties struct {
	UpdateConnectorRequestCasesWebhook   *UpdateConnectorRequestCasesWebhook
	UpdateConnectorRequestIndex          *UpdateConnectorRequestIndex
	UpdateConnectorRequestJira           *UpdateConnectorRequestJira
	UpdateConnectorRequestOpsgenie       *UpdateConnectorRequestOpsgenie
	UpdateConnectorRequestResilient      *UpdateConnectorRequestResilient
	UpdateConnectorRequestServerlog      *UpdateConnectorRequestServerlog
	UpdateConnectorRequestServicenow     *UpdateConnectorRequestServicenow
	UpdateConnectorRequestServicenowItom *UpdateConnectorRequestServicenowItom
	UpdateConnectorRequestSwimlane       *UpdateConnectorRequestSwimlane
}

// UpdateConnectorRequestCasesWebhookAsUpdateConnectorRequestBodyProperties is a convenience function that returns UpdateConnectorRequestCasesWebhook wrapped in UpdateConnectorRequestBodyProperties
func UpdateConnectorRequestCasesWebhookAsUpdateConnectorRequestBodyProperties(v *UpdateConnectorRequestCasesWebhook) UpdateConnectorRequestBodyProperties {
	return UpdateConnectorRequestBodyProperties{
		UpdateConnectorRequestCasesWebhook: v,
	}
}

// UpdateConnectorRequestIndexAsUpdateConnectorRequestBodyProperties is a convenience function that returns UpdateConnectorRequestIndex wrapped in UpdateConnectorRequestBodyProperties
func UpdateConnectorRequestIndexAsUpdateConnectorRequestBodyProperties(v *UpdateConnectorRequestIndex) UpdateConnectorRequestBodyProperties {
	return UpdateConnectorRequestBodyProperties{
		UpdateConnectorRequestIndex: v,
	}
}

// UpdateConnectorRequestJiraAsUpdateConnectorRequestBodyProperties is a convenience function that returns UpdateConnectorRequestJira wrapped in UpdateConnectorRequestBodyProperties
func UpdateConnectorRequestJiraAsUpdateConnectorRequestBodyProperties(v *UpdateConnectorRequestJira) UpdateConnectorRequestBodyProperties {
	return UpdateConnectorRequestBodyProperties{
		UpdateConnectorRequestJira: v,
	}
}

// UpdateConnectorRequestOpsgenieAsUpdateConnectorRequestBodyProperties is a convenience function that returns UpdateConnectorRequestOpsgenie wrapped in UpdateConnectorRequestBodyProperties
func UpdateConnectorRequestOpsgenieAsUpdateConnectorRequestBodyProperties(v *UpdateConnectorRequestOpsgenie) UpdateConnectorRequestBodyProperties {
	return UpdateConnectorRequestBodyProperties{
		UpdateConnectorRequestOpsgenie: v,
	}
}

// UpdateConnectorRequestResilientAsUpdateConnectorRequestBodyProperties is a convenience function that returns UpdateConnectorRequestResilient wrapped in UpdateConnectorRequestBodyProperties
func UpdateConnectorRequestResilientAsUpdateConnectorRequestBodyProperties(v *UpdateConnectorRequestResilient) UpdateConnectorRequestBodyProperties {
	return UpdateConnectorRequestBodyProperties{
		UpdateConnectorRequestResilient: v,
	}
}

// UpdateConnectorRequestServerlogAsUpdateConnectorRequestBodyProperties is a convenience function that returns UpdateConnectorRequestServerlog wrapped in UpdateConnectorRequestBodyProperties
func UpdateConnectorRequestServerlogAsUpdateConnectorRequestBodyProperties(v *UpdateConnectorRequestServerlog) UpdateConnectorRequestBodyProperties {
	return UpdateConnectorRequestBodyProperties{
		UpdateConnectorRequestServerlog: v,
	}
}

// UpdateConnectorRequestServicenowAsUpdateConnectorRequestBodyProperties is a convenience function that returns UpdateConnectorRequestServicenow wrapped in UpdateConnectorRequestBodyProperties
func UpdateConnectorRequestServicenowAsUpdateConnectorRequestBodyProperties(v *UpdateConnectorRequestServicenow) UpdateConnectorRequestBodyProperties {
	return UpdateConnectorRequestBodyProperties{
		UpdateConnectorRequestServicenow: v,
	}
}

// UpdateConnectorRequestServicenowItomAsUpdateConnectorRequestBodyProperties is a convenience function that returns UpdateConnectorRequestServicenowItom wrapped in UpdateConnectorRequestBodyProperties
func UpdateConnectorRequestServicenowItomAsUpdateConnectorRequestBodyProperties(v *UpdateConnectorRequestServicenowItom) UpdateConnectorRequestBodyProperties {
	return UpdateConnectorRequestBodyProperties{
		UpdateConnectorRequestServicenowItom: v,
	}
}

// UpdateConnectorRequestSwimlaneAsUpdateConnectorRequestBodyProperties is a convenience function that returns UpdateConnectorRequestSwimlane wrapped in UpdateConnectorRequestBodyProperties
func UpdateConnectorRequestSwimlaneAsUpdateConnectorRequestBodyProperties(v *UpdateConnectorRequestSwimlane) UpdateConnectorRequestBodyProperties {
	return UpdateConnectorRequestBodyProperties{
		UpdateConnectorRequestSwimlane: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *UpdateConnectorRequestBodyProperties) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into UpdateConnectorRequestCasesWebhook
	err = json.Unmarshal(data, &dst.UpdateConnectorRequestCasesWebhook)
	if err == nil {
		jsonUpdateConnectorRequestCasesWebhook, _ := json.Marshal(dst.UpdateConnectorRequestCasesWebhook)
		if string(jsonUpdateConnectorRequestCasesWebhook) == "{}" { // empty struct
			dst.UpdateConnectorRequestCasesWebhook = nil
		} else {
			match++
		}
	} else {
		dst.UpdateConnectorRequestCasesWebhook = nil
	}

	// try to unmarshal data into UpdateConnectorRequestIndex
	err = json.Unmarshal(data, &dst.UpdateConnectorRequestIndex)
	if err == nil {
		jsonUpdateConnectorRequestIndex, _ := json.Marshal(dst.UpdateConnectorRequestIndex)
		if string(jsonUpdateConnectorRequestIndex) == "{}" { // empty struct
			dst.UpdateConnectorRequestIndex = nil
		} else {
			match++
		}
	} else {
		dst.UpdateConnectorRequestIndex = nil
	}

	// try to unmarshal data into UpdateConnectorRequestJira
	err = json.Unmarshal(data, &dst.UpdateConnectorRequestJira)
	if err == nil {
		jsonUpdateConnectorRequestJira, _ := json.Marshal(dst.UpdateConnectorRequestJira)
		if string(jsonUpdateConnectorRequestJira) == "{}" { // empty struct
			dst.UpdateConnectorRequestJira = nil
		} else {
			match++
		}
	} else {
		dst.UpdateConnectorRequestJira = nil
	}

	// try to unmarshal data into UpdateConnectorRequestOpsgenie
	err = json.Unmarshal(data, &dst.UpdateConnectorRequestOpsgenie)
	if err == nil {
		jsonUpdateConnectorRequestOpsgenie, _ := json.Marshal(dst.UpdateConnectorRequestOpsgenie)
		if string(jsonUpdateConnectorRequestOpsgenie) == "{}" { // empty struct
			dst.UpdateConnectorRequestOpsgenie = nil
		} else {
			match++
		}
	} else {
		dst.UpdateConnectorRequestOpsgenie = nil
	}

	// try to unmarshal data into UpdateConnectorRequestResilient
	err = json.Unmarshal(data, &dst.UpdateConnectorRequestResilient)
	if err == nil {
		jsonUpdateConnectorRequestResilient, _ := json.Marshal(dst.UpdateConnectorRequestResilient)
		if string(jsonUpdateConnectorRequestResilient) == "{}" { // empty struct
			dst.UpdateConnectorRequestResilient = nil
		} else {
			match++
		}
	} else {
		dst.UpdateConnectorRequestResilient = nil
	}

	// try to unmarshal data into UpdateConnectorRequestServerlog
	err = json.Unmarshal(data, &dst.UpdateConnectorRequestServerlog)
	if err == nil {
		jsonUpdateConnectorRequestServerlog, _ := json.Marshal(dst.UpdateConnectorRequestServerlog)
		if string(jsonUpdateConnectorRequestServerlog) == "{}" { // empty struct
			dst.UpdateConnectorRequestServerlog = nil
		} else {
			match++
		}
	} else {
		dst.UpdateConnectorRequestServerlog = nil
	}

	// try to unmarshal data into UpdateConnectorRequestServicenow
	err = json.Unmarshal(data, &dst.UpdateConnectorRequestServicenow)
	if err == nil {
		jsonUpdateConnectorRequestServicenow, _ := json.Marshal(dst.UpdateConnectorRequestServicenow)
		if string(jsonUpdateConnectorRequestServicenow) == "{}" { // empty struct
			dst.UpdateConnectorRequestServicenow = nil
		} else {
			match++
		}
	} else {
		dst.UpdateConnectorRequestServicenow = nil
	}

	// try to unmarshal data into UpdateConnectorRequestServicenowItom
	err = json.Unmarshal(data, &dst.UpdateConnectorRequestServicenowItom)
	if err == nil {
		jsonUpdateConnectorRequestServicenowItom, _ := json.Marshal(dst.UpdateConnectorRequestServicenowItom)
		if string(jsonUpdateConnectorRequestServicenowItom) == "{}" { // empty struct
			dst.UpdateConnectorRequestServicenowItom = nil
		} else {
			match++
		}
	} else {
		dst.UpdateConnectorRequestServicenowItom = nil
	}

	// try to unmarshal data into UpdateConnectorRequestSwimlane
	err = json.Unmarshal(data, &dst.UpdateConnectorRequestSwimlane)
	if err == nil {
		jsonUpdateConnectorRequestSwimlane, _ := json.Marshal(dst.UpdateConnectorRequestSwimlane)
		if string(jsonUpdateConnectorRequestSwimlane) == "{}" { // empty struct
			dst.UpdateConnectorRequestSwimlane = nil
		} else {
			match++
		}
	} else {
		dst.UpdateConnectorRequestSwimlane = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.UpdateConnectorRequestCasesWebhook = nil
		dst.UpdateConnectorRequestIndex = nil
		dst.UpdateConnectorRequestJira = nil
		dst.UpdateConnectorRequestOpsgenie = nil
		dst.UpdateConnectorRequestResilient = nil
		dst.UpdateConnectorRequestServerlog = nil
		dst.UpdateConnectorRequestServicenow = nil
		dst.UpdateConnectorRequestServicenowItom = nil
		dst.UpdateConnectorRequestSwimlane = nil

		return fmt.Errorf("data matches more than one schema in oneOf(UpdateConnectorRequestBodyProperties)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(UpdateConnectorRequestBodyProperties)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src UpdateConnectorRequestBodyProperties) MarshalJSON() ([]byte, error) {
	if src.UpdateConnectorRequestCasesWebhook != nil {
		return json.Marshal(&src.UpdateConnectorRequestCasesWebhook)
	}

	if src.UpdateConnectorRequestIndex != nil {
		return json.Marshal(&src.UpdateConnectorRequestIndex)
	}

	if src.UpdateConnectorRequestJira != nil {
		return json.Marshal(&src.UpdateConnectorRequestJira)
	}

	if src.UpdateConnectorRequestOpsgenie != nil {
		return json.Marshal(&src.UpdateConnectorRequestOpsgenie)
	}

	if src.UpdateConnectorRequestResilient != nil {
		return json.Marshal(&src.UpdateConnectorRequestResilient)
	}

	if src.UpdateConnectorRequestServerlog != nil {
		return json.Marshal(&src.UpdateConnectorRequestServerlog)
	}

	if src.UpdateConnectorRequestServicenow != nil {
		return json.Marshal(&src.UpdateConnectorRequestServicenow)
	}

	if src.UpdateConnectorRequestServicenowItom != nil {
		return json.Marshal(&src.UpdateConnectorRequestServicenowItom)
	}

	if src.UpdateConnectorRequestSwimlane != nil {
		return json.Marshal(&src.UpdateConnectorRequestSwimlane)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *UpdateConnectorRequestBodyProperties) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.UpdateConnectorRequestCasesWebhook != nil {
		return obj.UpdateConnectorRequestCasesWebhook
	}

	if obj.UpdateConnectorRequestIndex != nil {
		return obj.UpdateConnectorRequestIndex
	}

	if obj.UpdateConnectorRequestJira != nil {
		return obj.UpdateConnectorRequestJira
	}

	if obj.UpdateConnectorRequestOpsgenie != nil {
		return obj.UpdateConnectorRequestOpsgenie
	}

	if obj.UpdateConnectorRequestResilient != nil {
		return obj.UpdateConnectorRequestResilient
	}

	if obj.UpdateConnectorRequestServerlog != nil {
		return obj.UpdateConnectorRequestServerlog
	}

	if obj.UpdateConnectorRequestServicenow != nil {
		return obj.UpdateConnectorRequestServicenow
	}

	if obj.UpdateConnectorRequestServicenowItom != nil {
		return obj.UpdateConnectorRequestServicenowItom
	}

	if obj.UpdateConnectorRequestSwimlane != nil {
		return obj.UpdateConnectorRequestSwimlane
	}

	// all schemas are nil
	return nil
}

type NullableUpdateConnectorRequestBodyProperties struct {
	value *UpdateConnectorRequestBodyProperties
	isSet bool
}

func (v NullableUpdateConnectorRequestBodyProperties) Get() *UpdateConnectorRequestBodyProperties {
	return v.value
}

func (v *NullableUpdateConnectorRequestBodyProperties) Set(val *UpdateConnectorRequestBodyProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateConnectorRequestBodyProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateConnectorRequestBodyProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateConnectorRequestBodyProperties(val *UpdateConnectorRequestBodyProperties) *NullableUpdateConnectorRequestBodyProperties {
	return &NullableUpdateConnectorRequestBodyProperties{value: val, isSet: true}
}

func (v NullableUpdateConnectorRequestBodyProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateConnectorRequestBodyProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
