/*
Connectors

OpenAPI schema for Connectors endpoints

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package kibanaactions

import (
	"encoding/json"
)

// checks if the RunConnectorSubactionCreatealertSubActionParamsRespondersInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RunConnectorSubactionCreatealertSubActionParamsRespondersInner{}

// RunConnectorSubactionCreatealertSubActionParamsRespondersInner struct for RunConnectorSubactionCreatealertSubActionParamsRespondersInner
type RunConnectorSubactionCreatealertSubActionParamsRespondersInner struct {
	// The identifier for the entity.
	Id *string `json:"id,omitempty"`
	// The name of the entity.
	Name *string `json:"name,omitempty"`
	// The type of responders, in this case `escalation`.
	Type *string `json:"type,omitempty"`
	// A valid email address for the user.
	Username *string `json:"username,omitempty"`
}

// NewRunConnectorSubactionCreatealertSubActionParamsRespondersInner instantiates a new RunConnectorSubactionCreatealertSubActionParamsRespondersInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunConnectorSubactionCreatealertSubActionParamsRespondersInner() *RunConnectorSubactionCreatealertSubActionParamsRespondersInner {
	this := RunConnectorSubactionCreatealertSubActionParamsRespondersInner{}
	return &this
}

// NewRunConnectorSubactionCreatealertSubActionParamsRespondersInnerWithDefaults instantiates a new RunConnectorSubactionCreatealertSubActionParamsRespondersInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunConnectorSubactionCreatealertSubActionParamsRespondersInnerWithDefaults() *RunConnectorSubactionCreatealertSubActionParamsRespondersInner {
	this := RunConnectorSubactionCreatealertSubActionParamsRespondersInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) SetType(v string) {
	o.Type = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) SetUsername(v string) {
	o.Username = &v
}

func (o RunConnectorSubactionCreatealertSubActionParamsRespondersInner) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RunConnectorSubactionCreatealertSubActionParamsRespondersInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableRunConnectorSubactionCreatealertSubActionParamsRespondersInner struct {
	value *RunConnectorSubactionCreatealertSubActionParamsRespondersInner
	isSet bool
}

func (v NullableRunConnectorSubactionCreatealertSubActionParamsRespondersInner) Get() *RunConnectorSubactionCreatealertSubActionParamsRespondersInner {
	return v.value
}

func (v *NullableRunConnectorSubactionCreatealertSubActionParamsRespondersInner) Set(val *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) {
	v.value = val
	v.isSet = true
}

func (v NullableRunConnectorSubactionCreatealertSubActionParamsRespondersInner) IsSet() bool {
	return v.isSet
}

func (v *NullableRunConnectorSubactionCreatealertSubActionParamsRespondersInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunConnectorSubactionCreatealertSubActionParamsRespondersInner(val *RunConnectorSubactionCreatealertSubActionParamsRespondersInner) *NullableRunConnectorSubactionCreatealertSubActionParamsRespondersInner {
	return &NullableRunConnectorSubactionCreatealertSubActionParamsRespondersInner{value: val, isSet: true}
}

func (v NullableRunConnectorSubactionCreatealertSubActionParamsRespondersInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunConnectorSubactionCreatealertSubActionParamsRespondersInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
