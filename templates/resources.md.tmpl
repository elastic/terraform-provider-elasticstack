{{/* Automatic subcategory */}}
{{- $nameParts := split .Name "_" -}}
{{- $stackComponent := index $nameParts 1 | title -}}
{{- $subcategory := $stackComponent -}}
{{ if and (eq $stackComponent "Elasticsearch") (gt (len $nameParts) 3) -}}
  {{- $subcategory = index $nameParts 2 | title -}}
{{- end -}}

{{ if eq $subcategory "Apm" -}}
  {{- $subcategory = "APM" -}}
{{- end -}}

{{/* Subcategory overrides */}}
{{ if or 
  (eq .Name "elasticstack_elasticsearch_component_template") 
  (eq .Name "elasticstack_elasticsearch_data_stream_lifecycle")
  (eq .Name "elasticstack_elasticsearch_data_stream")
  (eq .Name "elasticstack_elasticsearch_index") -}}
  {{- $subcategory = "Index" -}}
{{- end -}}
---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "{{.Name}} {{.Type}} - {{.RenderedProviderName}}"
subcategory: "{{ $subcategory }}"
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Name}} ({{.Type}})

{{ .Description | trimspace }}

{{ if .HasExample -}}
## Example Usage

{{tffile .ExampleFile }}
{{- end }}

{{ .SchemaMarkdown | trimspace }}
{{- if or .HasImport .HasImportIDConfig .HasImportIdentityConfig }}

## Import

Import is supported using the following syntax:
{{- end }}
{{- if .HasImportIdentityConfig }}

In Terraform v1.12.0 and later, the [`import` block](https://developer.hashicorp.com/terraform/language/import) can be used with the `identity` attribute, for example:

{{tffile .ImportIdentityConfigFile }}

{{ .IdentitySchemaMarkdown | trimspace }}
{{- end }}
{{- if .HasImportIDConfig }}

In Terraform v1.5.0 and later, the [`import` block](https://developer.hashicorp.com/terraform/language/import) can be used with the ` + "`" + `id` + "`" + ` attribute, for example:

{{tffile .ImportIDConfigFile }}
{{- end }}
{{- if .HasImport }}

The [`terraform import` command](https://developer.hashicorp.com/terraform/cli/commands/import) can be used, for example:

{{codefile "shell" .ImportFile }}
{{- end }}
