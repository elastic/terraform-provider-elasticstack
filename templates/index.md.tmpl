---
layout: ""
page_title: "Provider: Elasticstack"
description: |-
  The Elasticstack provider provides the resources to interact with Elastic stack products.
---

# Elasticstack Provider

The Elasticstack provider provides the resources to interact with Elastic stack products.


It is recommended to setup at least minimum security, https://www.elastic.co/guide/en/elasticsearch/reference/current/security-minimal-setup.html
in order to interact with the Elasticsearch and be able to use the provider's full capabilities

The provider uses Terraform [protocol version 6](https://developer.hashicorp.com/terraform/plugin/terraform-plugin-protocol#protocol-version-6) that is compatible with Terraform CLI version 1.0 and later.

## Authentication

The Elasticstack provider offers few different ways of providing credentials for authentication.
The following methods are supported:

* Static credentials
* Environment variables
* Each `elasticsearch` resource supports an `elasticsearch_connection` block, allowing use of the same provider to configure many different clusters at the same time


### Static credentials

#### Elasticsearch

Default static credentials can be provided by adding the `username`, `password` and `endpoints` in the `elasticsearch` block:

{{tffile "examples/provider/provider.tf"}}

Alternatively an `api_key` can be specified instead of `username` and `password`:

{{tffile "examples/provider/provider-apikey.tf"}}

#### Kibana

Default static credentials can be provided by adding the `username`, `password` and `endpoints` in the `kibana` block:

{{tffile "examples/provider/kibana.tf"}}

If no credentials are supplied the provider will fall back to using those provided in the `elasticsearch` block.

### Environment Variables

The provider configuration can be specified through environment variables.

For Elasticsearch resources, you can use the following variables:
- `ELASTICSEARCH_USERNAME` - The username to use for Elasticsearch authentication
- `ELASTICSEARCH_PASSWORD` - The password to use for Elasticsearch authentication
- `ELASTICSEARCH_ENDPOINTS` - A comma separated list of Elasticsearch hosts to connect to
- `ELASTICSEARCH_API_KEY` - An Elasticsearch API key to use instead of `ELASTICSEARCH_USERNAME` and `ELASTICSEARCH_PASSWORD`

Kibana resources will re-use any Elasticsearch credentials specified, these may be overridden with the following variables:
- `KIBANA_USERNAME` - The username to use for Kibana authentication
- `KIBANA_PASSWORD` - The password to use for Kibana authentication
- `KIBANA_ENDPOINT` - The Kibana host to connect to
- `KIBANA_API_KEY` - An Elasticsearch API key to use instead of `KIBANA_USERNAME` and `KIBANA_PASSWORD`

Fleet resources will re-use any Kibana or Elasticsearch credentials specified, these may be overridden with the following variables:
- `FLEET_USERNAME` - The username to use for Kibana authentication
- `FLEET_PASSWORD` - The password to use for Kibana authentication
- `FLEET_ENDPOINT` - The Kibana host to connect to. ** Note the Fleet API is hosted within Kibana. This must be a Kibana HTTP host **
- `FLEET_API_KEY` - API key to use for authentication to Fleet

{{tffile "examples/provider/provider-env.tf"}}


### Per resource credentials

See docs related to the specific resources.


## Example Usage

{{tffile "examples/provider/provider.tf"}}

{{ .SchemaMarkdown | trimspace }}
